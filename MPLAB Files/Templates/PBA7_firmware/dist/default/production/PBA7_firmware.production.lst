

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Mar 19 10:59:09 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F15385
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    25                           	psect	cinit,global,class=CODE,merge=1,delta=2
    26                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    30                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    31                           	psect	inittext,global,class=CODE,delta=2
    32                           	psect	clrtext,global,class=CODE,delta=2
    33                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    35                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text13,local,class=CODE,merge=1,delta=2
    49                           	psect	text14,local,class=CODE,merge=1,delta=2
    50                           	psect	text15,local,class=CODE,merge=1,delta=2
    51                           	psect	text16,local,class=CODE,merge=1,delta=2
    52                           	psect	text17,local,class=CODE,merge=1,delta=2
    53                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text24,local,class=CODE,merge=1,delta=2
    60                           	psect	text25,local,class=CODE,merge=1,delta=2
    61                           	psect	text26,local,class=CODE,merge=1,delta=2
    62                           	psect	text27,local,class=CODE,merge=1,delta=2
    63                           	psect	text28,local,class=CODE,merge=1,delta=2
    64                           	psect	text29,local,class=CODE,merge=1,delta=2
    65                           	psect	text30,local,class=CODE,merge=1,delta=2
    66                           	psect	text31,local,class=CODE,merge=1,delta=2
    67                           	psect	text32,local,class=CODE,merge=1,delta=2
    68                           	psect	text33,local,class=CODE,merge=1,delta=2
    69                           	psect	text34,local,class=CODE,merge=1,delta=2
    70                           	psect	text35,local,class=CODE,merge=1,delta=2
    71                           	psect	text36,local,class=CODE,merge=1,delta=2
    72                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text40,local,class=CODE,merge=1,delta=2
    76                           	psect	text41,local,class=CODE,merge=1,delta=2
    77                           	psect	text42,local,class=CODE,merge=1,delta=2
    78                           	psect	text43,local,class=CODE,merge=1,delta=2
    79                           	psect	text44,local,class=CODE,merge=1,delta=2
    80                           	psect	text45,local,class=CODE,merge=1,delta=2
    81                           	psect	text46,local,class=CODE,merge=1,delta=2
    82                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text49,local,class=CODE,merge=1,delta=2
    85                           	psect	text50,local,class=CODE,merge=1,delta=2
    86                           	psect	text51,local,class=CODE,merge=1,delta=2
    87                           	psect	text52,local,class=CODE,merge=1,delta=2
    88                           	psect	text53,local,class=CODE,merge=1,delta=2
    89                           	psect	text54,local,class=CODE,merge=1,delta=2
    90                           	psect	text55,local,class=CODE,merge=1,delta=2
    91                           	psect	text56,local,class=CODE,merge=1,delta=2
    92                           	psect	text57,local,class=CODE,merge=1,delta=2
    93                           	psect	text58,local,class=CODE,merge=1,delta=2
    94                           	psect	text59,local,class=CODE,merge=1,delta=2
    95                           	psect	text60,local,class=CODE,merge=1,delta=2
    96                           	psect	text61,local,class=CODE,merge=1,delta=2
    97                           	psect	text62,local,class=CODE,merge=1,delta=2
    98                           	psect	text63,local,class=CODE,merge=1,delta=2
    99                           	psect	text64,local,class=CODE,merge=1,delta=2
   100                           	psect	text65,local,class=CODE,merge=1,delta=2
   101                           	psect	text66,local,class=CODE,merge=1,delta=2
   102                           	psect	text67,local,class=CODE,merge=1,delta=2
   103                           	psect	text68,local,class=CODE,merge=1,delta=2
   104                           	psect	text69,local,class=CODE,merge=1,delta=2
   105                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text71,local,class=CODE,merge=1,delta=2
   107                           	psect	text72,local,class=CODE,merge=1,delta=2
   108                           	psect	text73,local,class=CODE,merge=1,delta=2
   109                           	psect	text74,local,class=CODE,merge=1,delta=2
   110                           	psect	text75,local,class=CODE,merge=1,delta=2
   111                           	psect	text76,local,class=CODE,merge=1,delta=2
   112                           	psect	text77,local,class=CODE,merge=1,delta=2
   113                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text79,local,class=CODE,merge=1,delta=2
   115                           	psect	intentry,global,class=CODE,delta=2
   116                           	psect	text81,local,class=CODE,merge=1,delta=2
   117                           	psect	text82,local,class=CODE,merge=1,delta=2
   118                           	psect	text83,local,class=CODE,merge=1,delta=2
   119                           	psect	text84,local,class=CODE,merge=1,delta=2
   120                           	psect	text85,local,class=CODE,merge=1,delta=2
   121                           	psect	text86,local,class=CODE,merge=1,delta=2
   122                           	psect	text87,local,class=CODE,merge=1,delta=2
   123                           	psect	text88,local,class=CODE,merge=1,delta=2
   124                           	psect	text89,local,class=CODE,merge=1,delta=2
   125                           	psect	text90,local,class=CODE,merge=1,delta=2
   126                           	psect	text91,local,class=CODE,merge=1,delta=2
   127                           	psect	text92,local,class=CODE,merge=1,delta=2
   128                           	psect	text93,local,class=CODE,merge=1,delta=2
   129                           	psect	text94,local,class=CODE,merge=1,delta=2
   130                           	psect	text95,local,class=CODE,merge=1,delta=2
   131                           	psect	text96,local,class=CODE,merge=1,delta=2
   132                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   133                           	dabs	1,0x74,12
   134  0000                     
   135                           ; Version 2.30
   136                           ; Generated 26/08/2020 GMT
   137                           ; 
   138                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   139                           ; All rights reserved.
   140                           ; 
   141                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   142                           ; 
   143                           ; Redistribution and use in source and binary forms, with or without modification, are
   144                           ; permitted provided that the following conditions are met:
   145                           ; 
   146                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   147                           ;        conditions and the following disclaimer.
   148                           ; 
   149                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   150                           ;        of conditions and the following disclaimer in the documentation and/or other
   151                           ;        materials provided with the distribution. Publication is not required when
   152                           ;        this file is used in an embedded application.
   153                           ; 
   154                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   155                           ;        software without specific prior written permission.
   156                           ; 
   157                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   158                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   159                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   160                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   161                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   162                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   163                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   164                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   165                           ; 
   166                           ; 
   167                           ; Code-generator required, PIC16F15385 Definitions
   168                           ; 
   169                           ; SFR Addresses
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  009B                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0119                     	;# 
   207  0119                     	;# 
   208  0119                     	;# 
   209  011A                     	;# 
   210  011A                     	;# 
   211  011A                     	;# 
   212  011B                     	;# 
   213  011B                     	;# 
   214  011B                     	;# 
   215  011B                     	;# 
   216  011B                     	;# 
   217  011C                     	;# 
   218  011C                     	;# 
   219  011C                     	;# 
   220  011D                     	;# 
   221  011D                     	;# 
   222  011D                     	;# 
   223  011E                     	;# 
   224  011E                     	;# 
   225  011E                     	;# 
   226  011F                     	;# 
   227  011F                     	;# 
   228  011F                     	;# 
   229  011F                     	;# 
   230  011F                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  018E                     	;# 
   234  018F                     	;# 
   235  0190                     	;# 
   236  0191                     	;# 
   237  0192                     	;# 
   238  0196                     	;# 
   239  0197                     	;# 
   240  0198                     	;# 
   241  0199                     	;# 
   242  019A                     	;# 
   243  019B                     	;# 
   244  019C                     	;# 
   245  020C                     	;# 
   246  020C                     	;# 
   247  020D                     	;# 
   248  020E                     	;# 
   249  020F                     	;# 
   250  020F                     	;# 
   251  0210                     	;# 
   252  0210                     	;# 
   253  0211                     	;# 
   254  0211                     	;# 
   255  028C                     	;# 
   256  028C                     	;# 
   257  028D                     	;# 
   258  028D                     	;# 
   259  028E                     	;# 
   260  028F                     	;# 
   261  0290                     	;# 
   262  0291                     	;# 
   263  030C                     	;# 
   264  030C                     	;# 
   265  030D                     	;# 
   266  030E                     	;# 
   267  030F                     	;# 
   268  0310                     	;# 
   269  0310                     	;# 
   270  0311                     	;# 
   271  0312                     	;# 
   272  0313                     	;# 
   273  0314                     	;# 
   274  0314                     	;# 
   275  0315                     	;# 
   276  0316                     	;# 
   277  0318                     	;# 
   278  0318                     	;# 
   279  0319                     	;# 
   280  031A                     	;# 
   281  031C                     	;# 
   282  031C                     	;# 
   283  031D                     	;# 
   284  031E                     	;# 
   285  038C                     	;# 
   286  038C                     	;# 
   287  038D                     	;# 
   288  038E                     	;# 
   289  058C                     	;# 
   290  058C                     	;# 
   291  058D                     	;# 
   292  058E                     	;# 
   293  058F                     	;# 
   294  058F                     	;# 
   295  0590                     	;# 
   296  0591                     	;# 
   297  0592                     	;# 
   298  0593                     	;# 
   299  059C                     	;# 
   300  059C                     	;# 
   301  059D                     	;# 
   302  059D                     	;# 
   303  059E                     	;# 
   304  059F                     	;# 
   305  060C                     	;# 
   306  060D                     	;# 
   307  060E                     	;# 
   308  060F                     	;# 
   309  0610                     	;# 
   310  0611                     	;# 
   311  0612                     	;# 
   312  0613                     	;# 
   313  0614                     	;# 
   314  070C                     	;# 
   315  070D                     	;# 
   316  070E                     	;# 
   317  070F                     	;# 
   318  0710                     	;# 
   319  0711                     	;# 
   320  0712                     	;# 
   321  0713                     	;# 
   322  0716                     	;# 
   323  0717                     	;# 
   324  0718                     	;# 
   325  0719                     	;# 
   326  071A                     	;# 
   327  071B                     	;# 
   328  071C                     	;# 
   329  071D                     	;# 
   330  0796                     	;# 
   331  0797                     	;# 
   332  0798                     	;# 
   333  0799                     	;# 
   334  079A                     	;# 
   335  079B                     	;# 
   336  080C                     	;# 
   337  080D                     	;# 
   338  080E                     	;# 
   339  080F                     	;# 
   340  0810                     	;# 
   341  0811                     	;# 
   342  0812                     	;# 
   343  0813                     	;# 
   344  0814                     	;# 
   345  081A                     	;# 
   346  081A                     	;# 
   347  081B                     	;# 
   348  081C                     	;# 
   349  081C                     	;# 
   350  081D                     	;# 
   351  081E                     	;# 
   352  081F                     	;# 
   353  088C                     	;# 
   354  088D                     	;# 
   355  088E                     	;# 
   356  088F                     	;# 
   357  0890                     	;# 
   358  0891                     	;# 
   359  0892                     	;# 
   360  0893                     	;# 
   361  0895                     	;# 
   362  0896                     	;# 
   363  090C                     	;# 
   364  090E                     	;# 
   365  090F                     	;# 
   366  091F                     	;# 
   367  098F                     	;# 
   368  098F                     	;# 
   369  0990                     	;# 
   370  0991                     	;# 
   371  0992                     	;# 
   372  0993                     	;# 
   373  0994                     	;# 
   374  0995                     	;# 
   375  0996                     	;# 
   376  0997                     	;# 
   377  0A19                     	;# 
   378  0A19                     	;# 
   379  0A1A                     	;# 
   380  0A1A                     	;# 
   381  0A1B                     	;# 
   382  0A1B                     	;# 
   383  0A1B                     	;# 
   384  0A1C                     	;# 
   385  0A1C                     	;# 
   386  0A1D                     	;# 
   387  0A1D                     	;# 
   388  0A1E                     	;# 
   389  0A1E                     	;# 
   390  0A1F                     	;# 
   391  0A1F                     	;# 
   392  0A1F                     	;# 
   393  1E0F                     	;# 
   394  1E10                     	;# 
   395  1E11                     	;# 
   396  1E12                     	;# 
   397  1E13                     	;# 
   398  1E14                     	;# 
   399  1E15                     	;# 
   400  1E16                     	;# 
   401  1E17                     	;# 
   402  1E18                     	;# 
   403  1E19                     	;# 
   404  1E1A                     	;# 
   405  1E1B                     	;# 
   406  1E1C                     	;# 
   407  1E1D                     	;# 
   408  1E1E                     	;# 
   409  1E1F                     	;# 
   410  1E20                     	;# 
   411  1E21                     	;# 
   412  1E22                     	;# 
   413  1E23                     	;# 
   414  1E24                     	;# 
   415  1E25                     	;# 
   416  1E26                     	;# 
   417  1E27                     	;# 
   418  1E28                     	;# 
   419  1E29                     	;# 
   420  1E2A                     	;# 
   421  1E2B                     	;# 
   422  1E2C                     	;# 
   423  1E2D                     	;# 
   424  1E2E                     	;# 
   425  1E2F                     	;# 
   426  1E30                     	;# 
   427  1E31                     	;# 
   428  1E32                     	;# 
   429  1E33                     	;# 
   430  1E34                     	;# 
   431  1E35                     	;# 
   432  1E36                     	;# 
   433  1E37                     	;# 
   434  1E38                     	;# 
   435  1E39                     	;# 
   436  1E3A                     	;# 
   437  1E3B                     	;# 
   438  1E3C                     	;# 
   439  1E3D                     	;# 
   440  1E3E                     	;# 
   441  1E3F                     	;# 
   442  1E50                     	;# 
   443  1E51                     	;# 
   444  1E52                     	;# 
   445  1E53                     	;# 
   446  1E54                     	;# 
   447  1E8F                     	;# 
   448  1E90                     	;# 
   449  1E91                     	;# 
   450  1E92                     	;# 
   451  1E93                     	;# 
   452  1E9C                     	;# 
   453  1EA1                     	;# 
   454  1EA2                     	;# 
   455  1EB1                     	;# 
   456  1EBB                     	;# 
   457  1EBC                     	;# 
   458  1EBD                     	;# 
   459  1EBE                     	;# 
   460  1EC3                     	;# 
   461  1EC5                     	;# 
   462  1EC6                     	;# 
   463  1EC7                     	;# 
   464  1EC8                     	;# 
   465  1EC9                     	;# 
   466  1ECA                     	;# 
   467  1ECB                     	;# 
   468  1ECC                     	;# 
   469  1ECD                     	;# 
   470  1ECE                     	;# 
   471  1F10                     	;# 
   472  1F11                     	;# 
   473  1F12                     	;# 
   474  1F13                     	;# 
   475  1F14                     	;# 
   476  1F15                     	;# 
   477  1F16                     	;# 
   478  1F17                     	;# 
   479  1F18                     	;# 
   480  1F19                     	;# 
   481  1F1A                     	;# 
   482  1F1B                     	;# 
   483  1F1C                     	;# 
   484  1F1D                     	;# 
   485  1F1E                     	;# 
   486  1F1F                     	;# 
   487  1F20                     	;# 
   488  1F21                     	;# 
   489  1F22                     	;# 
   490  1F23                     	;# 
   491  1F24                     	;# 
   492  1F25                     	;# 
   493  1F26                     	;# 
   494  1F27                     	;# 
   495  1F28                     	;# 
   496  1F29                     	;# 
   497  1F2A                     	;# 
   498  1F2B                     	;# 
   499  1F2C                     	;# 
   500  1F2D                     	;# 
   501  1F2E                     	;# 
   502  1F2F                     	;# 
   503  1F30                     	;# 
   504  1F31                     	;# 
   505  1F32                     	;# 
   506  1F38                     	;# 
   507  1F39                     	;# 
   508  1F3A                     	;# 
   509  1F3B                     	;# 
   510  1F3C                     	;# 
   511  1F3D                     	;# 
   512  1F3E                     	;# 
   513  1F3F                     	;# 
   514  1F43                     	;# 
   515  1F44                     	;# 
   516  1F45                     	;# 
   517  1F46                     	;# 
   518  1F47                     	;# 
   519  1F48                     	;# 
   520  1F49                     	;# 
   521  1F4A                     	;# 
   522  1F4E                     	;# 
   523  1F4F                     	;# 
   524  1F50                     	;# 
   525  1F51                     	;# 
   526  1F52                     	;# 
   527  1F53                     	;# 
   528  1F54                     	;# 
   529  1F55                     	;# 
   530  1F59                     	;# 
   531  1F5A                     	;# 
   532  1F5B                     	;# 
   533  1F5C                     	;# 
   534  1F5D                     	;# 
   535  1F64                     	;# 
   536  1F65                     	;# 
   537  1F66                     	;# 
   538  1F67                     	;# 
   539  1F68                     	;# 
   540  1F69                     	;# 
   541  1F6A                     	;# 
   542  1F6B                     	;# 
   543  1FE4                     	;# 
   544  1FE5                     	;# 
   545  1FE6                     	;# 
   546  1FE7                     	;# 
   547  1FE8                     	;# 
   548  1FE8                     	;# 
   549  1FE9                     	;# 
   550  1FEA                     	;# 
   551  1FEB                     	;# 
   552  1FED                     	;# 
   553  1FEE                     	;# 
   554  1FEF                     	;# 
   555  0000                     	;# 
   556  0001                     	;# 
   557  0002                     	;# 
   558  0003                     	;# 
   559  0004                     	;# 
   560  0005                     	;# 
   561  0006                     	;# 
   562  0007                     	;# 
   563  0008                     	;# 
   564  0009                     	;# 
   565  000A                     	;# 
   566  000B                     	;# 
   567  000C                     	;# 
   568  000D                     	;# 
   569  000E                     	;# 
   570  000F                     	;# 
   571  0010                     	;# 
   572  0011                     	;# 
   573  0012                     	;# 
   574  0013                     	;# 
   575  0014                     	;# 
   576  0015                     	;# 
   577  0016                     	;# 
   578  0017                     	;# 
   579  0018                     	;# 
   580  0019                     	;# 
   581  001A                     	;# 
   582  001B                     	;# 
   583  001C                     	;# 
   584  001D                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  009F                     	;# 
   591  0119                     	;# 
   592  0119                     	;# 
   593  0119                     	;# 
   594  011A                     	;# 
   595  011A                     	;# 
   596  011A                     	;# 
   597  011B                     	;# 
   598  011B                     	;# 
   599  011B                     	;# 
   600  011B                     	;# 
   601  011B                     	;# 
   602  011C                     	;# 
   603  011C                     	;# 
   604  011C                     	;# 
   605  011D                     	;# 
   606  011D                     	;# 
   607  011D                     	;# 
   608  011E                     	;# 
   609  011E                     	;# 
   610  011E                     	;# 
   611  011F                     	;# 
   612  011F                     	;# 
   613  011F                     	;# 
   614  011F                     	;# 
   615  011F                     	;# 
   616  018C                     	;# 
   617  018D                     	;# 
   618  018E                     	;# 
   619  018F                     	;# 
   620  0190                     	;# 
   621  0191                     	;# 
   622  0192                     	;# 
   623  0196                     	;# 
   624  0197                     	;# 
   625  0198                     	;# 
   626  0199                     	;# 
   627  019A                     	;# 
   628  019B                     	;# 
   629  019C                     	;# 
   630  020C                     	;# 
   631  020C                     	;# 
   632  020D                     	;# 
   633  020E                     	;# 
   634  020F                     	;# 
   635  020F                     	;# 
   636  0210                     	;# 
   637  0210                     	;# 
   638  0211                     	;# 
   639  0211                     	;# 
   640  028C                     	;# 
   641  028C                     	;# 
   642  028D                     	;# 
   643  028D                     	;# 
   644  028E                     	;# 
   645  028F                     	;# 
   646  0290                     	;# 
   647  0291                     	;# 
   648  030C                     	;# 
   649  030C                     	;# 
   650  030D                     	;# 
   651  030E                     	;# 
   652  030F                     	;# 
   653  0310                     	;# 
   654  0310                     	;# 
   655  0311                     	;# 
   656  0312                     	;# 
   657  0313                     	;# 
   658  0314                     	;# 
   659  0314                     	;# 
   660  0315                     	;# 
   661  0316                     	;# 
   662  0318                     	;# 
   663  0318                     	;# 
   664  0319                     	;# 
   665  031A                     	;# 
   666  031C                     	;# 
   667  031C                     	;# 
   668  031D                     	;# 
   669  031E                     	;# 
   670  038C                     	;# 
   671  038C                     	;# 
   672  038D                     	;# 
   673  038E                     	;# 
   674  058C                     	;# 
   675  058C                     	;# 
   676  058D                     	;# 
   677  058E                     	;# 
   678  058F                     	;# 
   679  058F                     	;# 
   680  0590                     	;# 
   681  0591                     	;# 
   682  0592                     	;# 
   683  0593                     	;# 
   684  059C                     	;# 
   685  059C                     	;# 
   686  059D                     	;# 
   687  059D                     	;# 
   688  059E                     	;# 
   689  059F                     	;# 
   690  060C                     	;# 
   691  060D                     	;# 
   692  060E                     	;# 
   693  060F                     	;# 
   694  0610                     	;# 
   695  0611                     	;# 
   696  0612                     	;# 
   697  0613                     	;# 
   698  0614                     	;# 
   699  070C                     	;# 
   700  070D                     	;# 
   701  070E                     	;# 
   702  070F                     	;# 
   703  0710                     	;# 
   704  0711                     	;# 
   705  0712                     	;# 
   706  0713                     	;# 
   707  0716                     	;# 
   708  0717                     	;# 
   709  0718                     	;# 
   710  0719                     	;# 
   711  071A                     	;# 
   712  071B                     	;# 
   713  071C                     	;# 
   714  071D                     	;# 
   715  0796                     	;# 
   716  0797                     	;# 
   717  0798                     	;# 
   718  0799                     	;# 
   719  079A                     	;# 
   720  079B                     	;# 
   721  080C                     	;# 
   722  080D                     	;# 
   723  080E                     	;# 
   724  080F                     	;# 
   725  0810                     	;# 
   726  0811                     	;# 
   727  0812                     	;# 
   728  0813                     	;# 
   729  0814                     	;# 
   730  081A                     	;# 
   731  081A                     	;# 
   732  081B                     	;# 
   733  081C                     	;# 
   734  081C                     	;# 
   735  081D                     	;# 
   736  081E                     	;# 
   737  081F                     	;# 
   738  088C                     	;# 
   739  088D                     	;# 
   740  088E                     	;# 
   741  088F                     	;# 
   742  0890                     	;# 
   743  0891                     	;# 
   744  0892                     	;# 
   745  0893                     	;# 
   746  0895                     	;# 
   747  0896                     	;# 
   748  090C                     	;# 
   749  090E                     	;# 
   750  090F                     	;# 
   751  091F                     	;# 
   752  098F                     	;# 
   753  098F                     	;# 
   754  0990                     	;# 
   755  0991                     	;# 
   756  0992                     	;# 
   757  0993                     	;# 
   758  0994                     	;# 
   759  0995                     	;# 
   760  0996                     	;# 
   761  0997                     	;# 
   762  0A19                     	;# 
   763  0A19                     	;# 
   764  0A1A                     	;# 
   765  0A1A                     	;# 
   766  0A1B                     	;# 
   767  0A1B                     	;# 
   768  0A1B                     	;# 
   769  0A1C                     	;# 
   770  0A1C                     	;# 
   771  0A1D                     	;# 
   772  0A1D                     	;# 
   773  0A1E                     	;# 
   774  0A1E                     	;# 
   775  0A1F                     	;# 
   776  0A1F                     	;# 
   777  0A1F                     	;# 
   778  1E0F                     	;# 
   779  1E10                     	;# 
   780  1E11                     	;# 
   781  1E12                     	;# 
   782  1E13                     	;# 
   783  1E14                     	;# 
   784  1E15                     	;# 
   785  1E16                     	;# 
   786  1E17                     	;# 
   787  1E18                     	;# 
   788  1E19                     	;# 
   789  1E1A                     	;# 
   790  1E1B                     	;# 
   791  1E1C                     	;# 
   792  1E1D                     	;# 
   793  1E1E                     	;# 
   794  1E1F                     	;# 
   795  1E20                     	;# 
   796  1E21                     	;# 
   797  1E22                     	;# 
   798  1E23                     	;# 
   799  1E24                     	;# 
   800  1E25                     	;# 
   801  1E26                     	;# 
   802  1E27                     	;# 
   803  1E28                     	;# 
   804  1E29                     	;# 
   805  1E2A                     	;# 
   806  1E2B                     	;# 
   807  1E2C                     	;# 
   808  1E2D                     	;# 
   809  1E2E                     	;# 
   810  1E2F                     	;# 
   811  1E30                     	;# 
   812  1E31                     	;# 
   813  1E32                     	;# 
   814  1E33                     	;# 
   815  1E34                     	;# 
   816  1E35                     	;# 
   817  1E36                     	;# 
   818  1E37                     	;# 
   819  1E38                     	;# 
   820  1E39                     	;# 
   821  1E3A                     	;# 
   822  1E3B                     	;# 
   823  1E3C                     	;# 
   824  1E3D                     	;# 
   825  1E3E                     	;# 
   826  1E3F                     	;# 
   827  1E50                     	;# 
   828  1E51                     	;# 
   829  1E52                     	;# 
   830  1E53                     	;# 
   831  1E54                     	;# 
   832  1E8F                     	;# 
   833  1E90                     	;# 
   834  1E91                     	;# 
   835  1E92                     	;# 
   836  1E93                     	;# 
   837  1E9C                     	;# 
   838  1EA1                     	;# 
   839  1EA2                     	;# 
   840  1EB1                     	;# 
   841  1EBB                     	;# 
   842  1EBC                     	;# 
   843  1EBD                     	;# 
   844  1EBE                     	;# 
   845  1EC3                     	;# 
   846  1EC5                     	;# 
   847  1EC6                     	;# 
   848  1EC7                     	;# 
   849  1EC8                     	;# 
   850  1EC9                     	;# 
   851  1ECA                     	;# 
   852  1ECB                     	;# 
   853  1ECC                     	;# 
   854  1ECD                     	;# 
   855  1ECE                     	;# 
   856  1F10                     	;# 
   857  1F11                     	;# 
   858  1F12                     	;# 
   859  1F13                     	;# 
   860  1F14                     	;# 
   861  1F15                     	;# 
   862  1F16                     	;# 
   863  1F17                     	;# 
   864  1F18                     	;# 
   865  1F19                     	;# 
   866  1F1A                     	;# 
   867  1F1B                     	;# 
   868  1F1C                     	;# 
   869  1F1D                     	;# 
   870  1F1E                     	;# 
   871  1F1F                     	;# 
   872  1F20                     	;# 
   873  1F21                     	;# 
   874  1F22                     	;# 
   875  1F23                     	;# 
   876  1F24                     	;# 
   877  1F25                     	;# 
   878  1F26                     	;# 
   879  1F27                     	;# 
   880  1F28                     	;# 
   881  1F29                     	;# 
   882  1F2A                     	;# 
   883  1F2B                     	;# 
   884  1F2C                     	;# 
   885  1F2D                     	;# 
   886  1F2E                     	;# 
   887  1F2F                     	;# 
   888  1F30                     	;# 
   889  1F31                     	;# 
   890  1F32                     	;# 
   891  1F38                     	;# 
   892  1F39                     	;# 
   893  1F3A                     	;# 
   894  1F3B                     	;# 
   895  1F3C                     	;# 
   896  1F3D                     	;# 
   897  1F3E                     	;# 
   898  1F3F                     	;# 
   899  1F43                     	;# 
   900  1F44                     	;# 
   901  1F45                     	;# 
   902  1F46                     	;# 
   903  1F47                     	;# 
   904  1F48                     	;# 
   905  1F49                     	;# 
   906  1F4A                     	;# 
   907  1F4E                     	;# 
   908  1F4F                     	;# 
   909  1F50                     	;# 
   910  1F51                     	;# 
   911  1F52                     	;# 
   912  1F53                     	;# 
   913  1F54                     	;# 
   914  1F55                     	;# 
   915  1F59                     	;# 
   916  1F5A                     	;# 
   917  1F5B                     	;# 
   918  1F5C                     	;# 
   919  1F5D                     	;# 
   920  1F64                     	;# 
   921  1F65                     	;# 
   922  1F66                     	;# 
   923  1F67                     	;# 
   924  1F68                     	;# 
   925  1F69                     	;# 
   926  1F6A                     	;# 
   927  1F6B                     	;# 
   928  1FE4                     	;# 
   929  1FE5                     	;# 
   930  1FE6                     	;# 
   931  1FE7                     	;# 
   932  1FE8                     	;# 
   933  1FE8                     	;# 
   934  1FE9                     	;# 
   935  1FEA                     	;# 
   936  1FEB                     	;# 
   937  1FED                     	;# 
   938  1FEE                     	;# 
   939  1FEF                     	;# 
   940  0000                     	;# 
   941  0001                     	;# 
   942  0002                     	;# 
   943  0003                     	;# 
   944  0004                     	;# 
   945  0005                     	;# 
   946  0006                     	;# 
   947  0007                     	;# 
   948  0008                     	;# 
   949  0009                     	;# 
   950  000A                     	;# 
   951  000B                     	;# 
   952  000C                     	;# 
   953  000D                     	;# 
   954  000E                     	;# 
   955  000F                     	;# 
   956  0010                     	;# 
   957  0011                     	;# 
   958  0012                     	;# 
   959  0013                     	;# 
   960  0014                     	;# 
   961  0015                     	;# 
   962  0016                     	;# 
   963  0017                     	;# 
   964  0018                     	;# 
   965  0019                     	;# 
   966  001A                     	;# 
   967  001B                     	;# 
   968  001C                     	;# 
   969  001D                     	;# 
   970  009B                     	;# 
   971  009B                     	;# 
   972  009C                     	;# 
   973  009D                     	;# 
   974  009E                     	;# 
   975  009F                     	;# 
   976  0119                     	;# 
   977  0119                     	;# 
   978  0119                     	;# 
   979  011A                     	;# 
   980  011A                     	;# 
   981  011A                     	;# 
   982  011B                     	;# 
   983  011B                     	;# 
   984  011B                     	;# 
   985  011B                     	;# 
   986  011B                     	;# 
   987  011C                     	;# 
   988  011C                     	;# 
   989  011C                     	;# 
   990  011D                     	;# 
   991  011D                     	;# 
   992  011D                     	;# 
   993  011E                     	;# 
   994  011E                     	;# 
   995  011E                     	;# 
   996  011F                     	;# 
   997  011F                     	;# 
   998  011F                     	;# 
   999  011F                     	;# 
  1000  011F                     	;# 
  1001  018C                     	;# 
  1002  018D                     	;# 
  1003  018E                     	;# 
  1004  018F                     	;# 
  1005  0190                     	;# 
  1006  0191                     	;# 
  1007  0192                     	;# 
  1008  0196                     	;# 
  1009  0197                     	;# 
  1010  0198                     	;# 
  1011  0199                     	;# 
  1012  019A                     	;# 
  1013  019B                     	;# 
  1014  019C                     	;# 
  1015  020C                     	;# 
  1016  020C                     	;# 
  1017  020D                     	;# 
  1018  020E                     	;# 
  1019  020F                     	;# 
  1020  020F                     	;# 
  1021  0210                     	;# 
  1022  0210                     	;# 
  1023  0211                     	;# 
  1024  0211                     	;# 
  1025  028C                     	;# 
  1026  028C                     	;# 
  1027  028D                     	;# 
  1028  028D                     	;# 
  1029  028E                     	;# 
  1030  028F                     	;# 
  1031  0290                     	;# 
  1032  0291                     	;# 
  1033  030C                     	;# 
  1034  030C                     	;# 
  1035  030D                     	;# 
  1036  030E                     	;# 
  1037  030F                     	;# 
  1038  0310                     	;# 
  1039  0310                     	;# 
  1040  0311                     	;# 
  1041  0312                     	;# 
  1042  0313                     	;# 
  1043  0314                     	;# 
  1044  0314                     	;# 
  1045  0315                     	;# 
  1046  0316                     	;# 
  1047  0318                     	;# 
  1048  0318                     	;# 
  1049  0319                     	;# 
  1050  031A                     	;# 
  1051  031C                     	;# 
  1052  031C                     	;# 
  1053  031D                     	;# 
  1054  031E                     	;# 
  1055  038C                     	;# 
  1056  038C                     	;# 
  1057  038D                     	;# 
  1058  038E                     	;# 
  1059  058C                     	;# 
  1060  058C                     	;# 
  1061  058D                     	;# 
  1062  058E                     	;# 
  1063  058F                     	;# 
  1064  058F                     	;# 
  1065  0590                     	;# 
  1066  0591                     	;# 
  1067  0592                     	;# 
  1068  0593                     	;# 
  1069  059C                     	;# 
  1070  059C                     	;# 
  1071  059D                     	;# 
  1072  059D                     	;# 
  1073  059E                     	;# 
  1074  059F                     	;# 
  1075  060C                     	;# 
  1076  060D                     	;# 
  1077  060E                     	;# 
  1078  060F                     	;# 
  1079  0610                     	;# 
  1080  0611                     	;# 
  1081  0612                     	;# 
  1082  0613                     	;# 
  1083  0614                     	;# 
  1084  070C                     	;# 
  1085  070D                     	;# 
  1086  070E                     	;# 
  1087  070F                     	;# 
  1088  0710                     	;# 
  1089  0711                     	;# 
  1090  0712                     	;# 
  1091  0713                     	;# 
  1092  0716                     	;# 
  1093  0717                     	;# 
  1094  0718                     	;# 
  1095  0719                     	;# 
  1096  071A                     	;# 
  1097  071B                     	;# 
  1098  071C                     	;# 
  1099  071D                     	;# 
  1100  0796                     	;# 
  1101  0797                     	;# 
  1102  0798                     	;# 
  1103  0799                     	;# 
  1104  079A                     	;# 
  1105  079B                     	;# 
  1106  080C                     	;# 
  1107  080D                     	;# 
  1108  080E                     	;# 
  1109  080F                     	;# 
  1110  0810                     	;# 
  1111  0811                     	;# 
  1112  0812                     	;# 
  1113  0813                     	;# 
  1114  0814                     	;# 
  1115  081A                     	;# 
  1116  081A                     	;# 
  1117  081B                     	;# 
  1118  081C                     	;# 
  1119  081C                     	;# 
  1120  081D                     	;# 
  1121  081E                     	;# 
  1122  081F                     	;# 
  1123  088C                     	;# 
  1124  088D                     	;# 
  1125  088E                     	;# 
  1126  088F                     	;# 
  1127  0890                     	;# 
  1128  0891                     	;# 
  1129  0892                     	;# 
  1130  0893                     	;# 
  1131  0895                     	;# 
  1132  0896                     	;# 
  1133  090C                     	;# 
  1134  090E                     	;# 
  1135  090F                     	;# 
  1136  091F                     	;# 
  1137  098F                     	;# 
  1138  098F                     	;# 
  1139  0990                     	;# 
  1140  0991                     	;# 
  1141  0992                     	;# 
  1142  0993                     	;# 
  1143  0994                     	;# 
  1144  0995                     	;# 
  1145  0996                     	;# 
  1146  0997                     	;# 
  1147  0A19                     	;# 
  1148  0A19                     	;# 
  1149  0A1A                     	;# 
  1150  0A1A                     	;# 
  1151  0A1B                     	;# 
  1152  0A1B                     	;# 
  1153  0A1B                     	;# 
  1154  0A1C                     	;# 
  1155  0A1C                     	;# 
  1156  0A1D                     	;# 
  1157  0A1D                     	;# 
  1158  0A1E                     	;# 
  1159  0A1E                     	;# 
  1160  0A1F                     	;# 
  1161  0A1F                     	;# 
  1162  0A1F                     	;# 
  1163  1E0F                     	;# 
  1164  1E10                     	;# 
  1165  1E11                     	;# 
  1166  1E12                     	;# 
  1167  1E13                     	;# 
  1168  1E14                     	;# 
  1169  1E15                     	;# 
  1170  1E16                     	;# 
  1171  1E17                     	;# 
  1172  1E18                     	;# 
  1173  1E19                     	;# 
  1174  1E1A                     	;# 
  1175  1E1B                     	;# 
  1176  1E1C                     	;# 
  1177  1E1D                     	;# 
  1178  1E1E                     	;# 
  1179  1E1F                     	;# 
  1180  1E20                     	;# 
  1181  1E21                     	;# 
  1182  1E22                     	;# 
  1183  1E23                     	;# 
  1184  1E24                     	;# 
  1185  1E25                     	;# 
  1186  1E26                     	;# 
  1187  1E27                     	;# 
  1188  1E28                     	;# 
  1189  1E29                     	;# 
  1190  1E2A                     	;# 
  1191  1E2B                     	;# 
  1192  1E2C                     	;# 
  1193  1E2D                     	;# 
  1194  1E2E                     	;# 
  1195  1E2F                     	;# 
  1196  1E30                     	;# 
  1197  1E31                     	;# 
  1198  1E32                     	;# 
  1199  1E33                     	;# 
  1200  1E34                     	;# 
  1201  1E35                     	;# 
  1202  1E36                     	;# 
  1203  1E37                     	;# 
  1204  1E38                     	;# 
  1205  1E39                     	;# 
  1206  1E3A                     	;# 
  1207  1E3B                     	;# 
  1208  1E3C                     	;# 
  1209  1E3D                     	;# 
  1210  1E3E                     	;# 
  1211  1E3F                     	;# 
  1212  1E50                     	;# 
  1213  1E51                     	;# 
  1214  1E52                     	;# 
  1215  1E53                     	;# 
  1216  1E54                     	;# 
  1217  1E8F                     	;# 
  1218  1E90                     	;# 
  1219  1E91                     	;# 
  1220  1E92                     	;# 
  1221  1E93                     	;# 
  1222  1E9C                     	;# 
  1223  1EA1                     	;# 
  1224  1EA2                     	;# 
  1225  1EB1                     	;# 
  1226  1EBB                     	;# 
  1227  1EBC                     	;# 
  1228  1EBD                     	;# 
  1229  1EBE                     	;# 
  1230  1EC3                     	;# 
  1231  1EC5                     	;# 
  1232  1EC6                     	;# 
  1233  1EC7                     	;# 
  1234  1EC8                     	;# 
  1235  1EC9                     	;# 
  1236  1ECA                     	;# 
  1237  1ECB                     	;# 
  1238  1ECC                     	;# 
  1239  1ECD                     	;# 
  1240  1ECE                     	;# 
  1241  1F10                     	;# 
  1242  1F11                     	;# 
  1243  1F12                     	;# 
  1244  1F13                     	;# 
  1245  1F14                     	;# 
  1246  1F15                     	;# 
  1247  1F16                     	;# 
  1248  1F17                     	;# 
  1249  1F18                     	;# 
  1250  1F19                     	;# 
  1251  1F1A                     	;# 
  1252  1F1B                     	;# 
  1253  1F1C                     	;# 
  1254  1F1D                     	;# 
  1255  1F1E                     	;# 
  1256  1F1F                     	;# 
  1257  1F20                     	;# 
  1258  1F21                     	;# 
  1259  1F22                     	;# 
  1260  1F23                     	;# 
  1261  1F24                     	;# 
  1262  1F25                     	;# 
  1263  1F26                     	;# 
  1264  1F27                     	;# 
  1265  1F28                     	;# 
  1266  1F29                     	;# 
  1267  1F2A                     	;# 
  1268  1F2B                     	;# 
  1269  1F2C                     	;# 
  1270  1F2D                     	;# 
  1271  1F2E                     	;# 
  1272  1F2F                     	;# 
  1273  1F30                     	;# 
  1274  1F31                     	;# 
  1275  1F32                     	;# 
  1276  1F38                     	;# 
  1277  1F39                     	;# 
  1278  1F3A                     	;# 
  1279  1F3B                     	;# 
  1280  1F3C                     	;# 
  1281  1F3D                     	;# 
  1282  1F3E                     	;# 
  1283  1F3F                     	;# 
  1284  1F43                     	;# 
  1285  1F44                     	;# 
  1286  1F45                     	;# 
  1287  1F46                     	;# 
  1288  1F47                     	;# 
  1289  1F48                     	;# 
  1290  1F49                     	;# 
  1291  1F4A                     	;# 
  1292  1F4E                     	;# 
  1293  1F4F                     	;# 
  1294  1F50                     	;# 
  1295  1F51                     	;# 
  1296  1F52                     	;# 
  1297  1F53                     	;# 
  1298  1F54                     	;# 
  1299  1F55                     	;# 
  1300  1F59                     	;# 
  1301  1F5A                     	;# 
  1302  1F5B                     	;# 
  1303  1F5C                     	;# 
  1304  1F5D                     	;# 
  1305  1F64                     	;# 
  1306  1F65                     	;# 
  1307  1F66                     	;# 
  1308  1F67                     	;# 
  1309  1F68                     	;# 
  1310  1F69                     	;# 
  1311  1F6A                     	;# 
  1312  1F6B                     	;# 
  1313  1FE4                     	;# 
  1314  1FE5                     	;# 
  1315  1FE6                     	;# 
  1316  1FE7                     	;# 
  1317  1FE8                     	;# 
  1318  1FE8                     	;# 
  1319  1FE9                     	;# 
  1320  1FEA                     	;# 
  1321  1FEB                     	;# 
  1322  1FED                     	;# 
  1323  1FEE                     	;# 
  1324  1FEF                     	;# 
  1325  0000                     	;# 
  1326  0001                     	;# 
  1327  0002                     	;# 
  1328  0003                     	;# 
  1329  0004                     	;# 
  1330  0005                     	;# 
  1331  0006                     	;# 
  1332  0007                     	;# 
  1333  0008                     	;# 
  1334  0009                     	;# 
  1335  000A                     	;# 
  1336  000B                     	;# 
  1337  000C                     	;# 
  1338  000D                     	;# 
  1339  000E                     	;# 
  1340  000F                     	;# 
  1341  0010                     	;# 
  1342  0011                     	;# 
  1343  0012                     	;# 
  1344  0013                     	;# 
  1345  0014                     	;# 
  1346  0015                     	;# 
  1347  0016                     	;# 
  1348  0017                     	;# 
  1349  0018                     	;# 
  1350  0019                     	;# 
  1351  001A                     	;# 
  1352  001B                     	;# 
  1353  001C                     	;# 
  1354  001D                     	;# 
  1355  009B                     	;# 
  1356  009B                     	;# 
  1357  009C                     	;# 
  1358  009D                     	;# 
  1359  009E                     	;# 
  1360  009F                     	;# 
  1361  0119                     	;# 
  1362  0119                     	;# 
  1363  0119                     	;# 
  1364  011A                     	;# 
  1365  011A                     	;# 
  1366  011A                     	;# 
  1367  011B                     	;# 
  1368  011B                     	;# 
  1369  011B                     	;# 
  1370  011B                     	;# 
  1371  011B                     	;# 
  1372  011C                     	;# 
  1373  011C                     	;# 
  1374  011C                     	;# 
  1375  011D                     	;# 
  1376  011D                     	;# 
  1377  011D                     	;# 
  1378  011E                     	;# 
  1379  011E                     	;# 
  1380  011E                     	;# 
  1381  011F                     	;# 
  1382  011F                     	;# 
  1383  011F                     	;# 
  1384  011F                     	;# 
  1385  011F                     	;# 
  1386  018C                     	;# 
  1387  018D                     	;# 
  1388  018E                     	;# 
  1389  018F                     	;# 
  1390  0190                     	;# 
  1391  0191                     	;# 
  1392  0192                     	;# 
  1393  0196                     	;# 
  1394  0197                     	;# 
  1395  0198                     	;# 
  1396  0199                     	;# 
  1397  019A                     	;# 
  1398  019B                     	;# 
  1399  019C                     	;# 
  1400  020C                     	;# 
  1401  020C                     	;# 
  1402  020D                     	;# 
  1403  020E                     	;# 
  1404  020F                     	;# 
  1405  020F                     	;# 
  1406  0210                     	;# 
  1407  0210                     	;# 
  1408  0211                     	;# 
  1409  0211                     	;# 
  1410  028C                     	;# 
  1411  028C                     	;# 
  1412  028D                     	;# 
  1413  028D                     	;# 
  1414  028E                     	;# 
  1415  028F                     	;# 
  1416  0290                     	;# 
  1417  0291                     	;# 
  1418  030C                     	;# 
  1419  030C                     	;# 
  1420  030D                     	;# 
  1421  030E                     	;# 
  1422  030F                     	;# 
  1423  0310                     	;# 
  1424  0310                     	;# 
  1425  0311                     	;# 
  1426  0312                     	;# 
  1427  0313                     	;# 
  1428  0314                     	;# 
  1429  0314                     	;# 
  1430  0315                     	;# 
  1431  0316                     	;# 
  1432  0318                     	;# 
  1433  0318                     	;# 
  1434  0319                     	;# 
  1435  031A                     	;# 
  1436  031C                     	;# 
  1437  031C                     	;# 
  1438  031D                     	;# 
  1439  031E                     	;# 
  1440  038C                     	;# 
  1441  038C                     	;# 
  1442  038D                     	;# 
  1443  038E                     	;# 
  1444  058C                     	;# 
  1445  058C                     	;# 
  1446  058D                     	;# 
  1447  058E                     	;# 
  1448  058F                     	;# 
  1449  058F                     	;# 
  1450  0590                     	;# 
  1451  0591                     	;# 
  1452  0592                     	;# 
  1453  0593                     	;# 
  1454  059C                     	;# 
  1455  059C                     	;# 
  1456  059D                     	;# 
  1457  059D                     	;# 
  1458  059E                     	;# 
  1459  059F                     	;# 
  1460  060C                     	;# 
  1461  060D                     	;# 
  1462  060E                     	;# 
  1463  060F                     	;# 
  1464  0610                     	;# 
  1465  0611                     	;# 
  1466  0612                     	;# 
  1467  0613                     	;# 
  1468  0614                     	;# 
  1469  070C                     	;# 
  1470  070D                     	;# 
  1471  070E                     	;# 
  1472  070F                     	;# 
  1473  0710                     	;# 
  1474  0711                     	;# 
  1475  0712                     	;# 
  1476  0713                     	;# 
  1477  0716                     	;# 
  1478  0717                     	;# 
  1479  0718                     	;# 
  1480  0719                     	;# 
  1481  071A                     	;# 
  1482  071B                     	;# 
  1483  071C                     	;# 
  1484  071D                     	;# 
  1485  0796                     	;# 
  1486  0797                     	;# 
  1487  0798                     	;# 
  1488  0799                     	;# 
  1489  079A                     	;# 
  1490  079B                     	;# 
  1491  080C                     	;# 
  1492  080D                     	;# 
  1493  080E                     	;# 
  1494  080F                     	;# 
  1495  0810                     	;# 
  1496  0811                     	;# 
  1497  0812                     	;# 
  1498  0813                     	;# 
  1499  0814                     	;# 
  1500  081A                     	;# 
  1501  081A                     	;# 
  1502  081B                     	;# 
  1503  081C                     	;# 
  1504  081C                     	;# 
  1505  081D                     	;# 
  1506  081E                     	;# 
  1507  081F                     	;# 
  1508  088C                     	;# 
  1509  088D                     	;# 
  1510  088E                     	;# 
  1511  088F                     	;# 
  1512  0890                     	;# 
  1513  0891                     	;# 
  1514  0892                     	;# 
  1515  0893                     	;# 
  1516  0895                     	;# 
  1517  0896                     	;# 
  1518  090C                     	;# 
  1519  090E                     	;# 
  1520  090F                     	;# 
  1521  091F                     	;# 
  1522  098F                     	;# 
  1523  098F                     	;# 
  1524  0990                     	;# 
  1525  0991                     	;# 
  1526  0992                     	;# 
  1527  0993                     	;# 
  1528  0994                     	;# 
  1529  0995                     	;# 
  1530  0996                     	;# 
  1531  0997                     	;# 
  1532  0A19                     	;# 
  1533  0A19                     	;# 
  1534  0A1A                     	;# 
  1535  0A1A                     	;# 
  1536  0A1B                     	;# 
  1537  0A1B                     	;# 
  1538  0A1B                     	;# 
  1539  0A1C                     	;# 
  1540  0A1C                     	;# 
  1541  0A1D                     	;# 
  1542  0A1D                     	;# 
  1543  0A1E                     	;# 
  1544  0A1E                     	;# 
  1545  0A1F                     	;# 
  1546  0A1F                     	;# 
  1547  0A1F                     	;# 
  1548  1E0F                     	;# 
  1549  1E10                     	;# 
  1550  1E11                     	;# 
  1551  1E12                     	;# 
  1552  1E13                     	;# 
  1553  1E14                     	;# 
  1554  1E15                     	;# 
  1555  1E16                     	;# 
  1556  1E17                     	;# 
  1557  1E18                     	;# 
  1558  1E19                     	;# 
  1559  1E1A                     	;# 
  1560  1E1B                     	;# 
  1561  1E1C                     	;# 
  1562  1E1D                     	;# 
  1563  1E1E                     	;# 
  1564  1E1F                     	;# 
  1565  1E20                     	;# 
  1566  1E21                     	;# 
  1567  1E22                     	;# 
  1568  1E23                     	;# 
  1569  1E24                     	;# 
  1570  1E25                     	;# 
  1571  1E26                     	;# 
  1572  1E27                     	;# 
  1573  1E28                     	;# 
  1574  1E29                     	;# 
  1575  1E2A                     	;# 
  1576  1E2B                     	;# 
  1577  1E2C                     	;# 
  1578  1E2D                     	;# 
  1579  1E2E                     	;# 
  1580  1E2F                     	;# 
  1581  1E30                     	;# 
  1582  1E31                     	;# 
  1583  1E32                     	;# 
  1584  1E33                     	;# 
  1585  1E34                     	;# 
  1586  1E35                     	;# 
  1587  1E36                     	;# 
  1588  1E37                     	;# 
  1589  1E38                     	;# 
  1590  1E39                     	;# 
  1591  1E3A                     	;# 
  1592  1E3B                     	;# 
  1593  1E3C                     	;# 
  1594  1E3D                     	;# 
  1595  1E3E                     	;# 
  1596  1E3F                     	;# 
  1597  1E50                     	;# 
  1598  1E51                     	;# 
  1599  1E52                     	;# 
  1600  1E53                     	;# 
  1601  1E54                     	;# 
  1602  1E8F                     	;# 
  1603  1E90                     	;# 
  1604  1E91                     	;# 
  1605  1E92                     	;# 
  1606  1E93                     	;# 
  1607  1E9C                     	;# 
  1608  1EA1                     	;# 
  1609  1EA2                     	;# 
  1610  1EB1                     	;# 
  1611  1EBB                     	;# 
  1612  1EBC                     	;# 
  1613  1EBD                     	;# 
  1614  1EBE                     	;# 
  1615  1EC3                     	;# 
  1616  1EC5                     	;# 
  1617  1EC6                     	;# 
  1618  1EC7                     	;# 
  1619  1EC8                     	;# 
  1620  1EC9                     	;# 
  1621  1ECA                     	;# 
  1622  1ECB                     	;# 
  1623  1ECC                     	;# 
  1624  1ECD                     	;# 
  1625  1ECE                     	;# 
  1626  1F10                     	;# 
  1627  1F11                     	;# 
  1628  1F12                     	;# 
  1629  1F13                     	;# 
  1630  1F14                     	;# 
  1631  1F15                     	;# 
  1632  1F16                     	;# 
  1633  1F17                     	;# 
  1634  1F18                     	;# 
  1635  1F19                     	;# 
  1636  1F1A                     	;# 
  1637  1F1B                     	;# 
  1638  1F1C                     	;# 
  1639  1F1D                     	;# 
  1640  1F1E                     	;# 
  1641  1F1F                     	;# 
  1642  1F20                     	;# 
  1643  1F21                     	;# 
  1644  1F22                     	;# 
  1645  1F23                     	;# 
  1646  1F24                     	;# 
  1647  1F25                     	;# 
  1648  1F26                     	;# 
  1649  1F27                     	;# 
  1650  1F28                     	;# 
  1651  1F29                     	;# 
  1652  1F2A                     	;# 
  1653  1F2B                     	;# 
  1654  1F2C                     	;# 
  1655  1F2D                     	;# 
  1656  1F2E                     	;# 
  1657  1F2F                     	;# 
  1658  1F30                     	;# 
  1659  1F31                     	;# 
  1660  1F32                     	;# 
  1661  1F38                     	;# 
  1662  1F39                     	;# 
  1663  1F3A                     	;# 
  1664  1F3B                     	;# 
  1665  1F3C                     	;# 
  1666  1F3D                     	;# 
  1667  1F3E                     	;# 
  1668  1F3F                     	;# 
  1669  1F43                     	;# 
  1670  1F44                     	;# 
  1671  1F45                     	;# 
  1672  1F46                     	;# 
  1673  1F47                     	;# 
  1674  1F48                     	;# 
  1675  1F49                     	;# 
  1676  1F4A                     	;# 
  1677  1F4E                     	;# 
  1678  1F4F                     	;# 
  1679  1F50                     	;# 
  1680  1F51                     	;# 
  1681  1F52                     	;# 
  1682  1F53                     	;# 
  1683  1F54                     	;# 
  1684  1F55                     	;# 
  1685  1F59                     	;# 
  1686  1F5A                     	;# 
  1687  1F5B                     	;# 
  1688  1F5C                     	;# 
  1689  1F5D                     	;# 
  1690  1F64                     	;# 
  1691  1F65                     	;# 
  1692  1F66                     	;# 
  1693  1F67                     	;# 
  1694  1F68                     	;# 
  1695  1F69                     	;# 
  1696  1F6A                     	;# 
  1697  1F6B                     	;# 
  1698  1FE4                     	;# 
  1699  1FE5                     	;# 
  1700  1FE6                     	;# 
  1701  1FE7                     	;# 
  1702  1FE8                     	;# 
  1703  1FE8                     	;# 
  1704  1FE9                     	;# 
  1705  1FEA                     	;# 
  1706  1FEB                     	;# 
  1707  1FED                     	;# 
  1708  1FEE                     	;# 
  1709  1FEF                     	;# 
  1710  0000                     	;# 
  1711  0001                     	;# 
  1712  0002                     	;# 
  1713  0003                     	;# 
  1714  0004                     	;# 
  1715  0005                     	;# 
  1716  0006                     	;# 
  1717  0007                     	;# 
  1718  0008                     	;# 
  1719  0009                     	;# 
  1720  000A                     	;# 
  1721  000B                     	;# 
  1722  000C                     	;# 
  1723  000D                     	;# 
  1724  000E                     	;# 
  1725  000F                     	;# 
  1726  0010                     	;# 
  1727  0011                     	;# 
  1728  0012                     	;# 
  1729  0013                     	;# 
  1730  0014                     	;# 
  1731  0015                     	;# 
  1732  0016                     	;# 
  1733  0017                     	;# 
  1734  0018                     	;# 
  1735  0019                     	;# 
  1736  001A                     	;# 
  1737  001B                     	;# 
  1738  001C                     	;# 
  1739  001D                     	;# 
  1740  009B                     	;# 
  1741  009B                     	;# 
  1742  009C                     	;# 
  1743  009D                     	;# 
  1744  009E                     	;# 
  1745  009F                     	;# 
  1746  0119                     	;# 
  1747  0119                     	;# 
  1748  0119                     	;# 
  1749  011A                     	;# 
  1750  011A                     	;# 
  1751  011A                     	;# 
  1752  011B                     	;# 
  1753  011B                     	;# 
  1754  011B                     	;# 
  1755  011B                     	;# 
  1756  011B                     	;# 
  1757  011C                     	;# 
  1758  011C                     	;# 
  1759  011C                     	;# 
  1760  011D                     	;# 
  1761  011D                     	;# 
  1762  011D                     	;# 
  1763  011E                     	;# 
  1764  011E                     	;# 
  1765  011E                     	;# 
  1766  011F                     	;# 
  1767  011F                     	;# 
  1768  011F                     	;# 
  1769  011F                     	;# 
  1770  011F                     	;# 
  1771  018C                     	;# 
  1772  018D                     	;# 
  1773  018E                     	;# 
  1774  018F                     	;# 
  1775  0190                     	;# 
  1776  0191                     	;# 
  1777  0192                     	;# 
  1778  0196                     	;# 
  1779  0197                     	;# 
  1780  0198                     	;# 
  1781  0199                     	;# 
  1782  019A                     	;# 
  1783  019B                     	;# 
  1784  019C                     	;# 
  1785  020C                     	;# 
  1786  020C                     	;# 
  1787  020D                     	;# 
  1788  020E                     	;# 
  1789  020F                     	;# 
  1790  020F                     	;# 
  1791  0210                     	;# 
  1792  0210                     	;# 
  1793  0211                     	;# 
  1794  0211                     	;# 
  1795  028C                     	;# 
  1796  028C                     	;# 
  1797  028D                     	;# 
  1798  028D                     	;# 
  1799  028E                     	;# 
  1800  028F                     	;# 
  1801  0290                     	;# 
  1802  0291                     	;# 
  1803  030C                     	;# 
  1804  030C                     	;# 
  1805  030D                     	;# 
  1806  030E                     	;# 
  1807  030F                     	;# 
  1808  0310                     	;# 
  1809  0310                     	;# 
  1810  0311                     	;# 
  1811  0312                     	;# 
  1812  0313                     	;# 
  1813  0314                     	;# 
  1814  0314                     	;# 
  1815  0315                     	;# 
  1816  0316                     	;# 
  1817  0318                     	;# 
  1818  0318                     	;# 
  1819  0319                     	;# 
  1820  031A                     	;# 
  1821  031C                     	;# 
  1822  031C                     	;# 
  1823  031D                     	;# 
  1824  031E                     	;# 
  1825  038C                     	;# 
  1826  038C                     	;# 
  1827  038D                     	;# 
  1828  038E                     	;# 
  1829  058C                     	;# 
  1830  058C                     	;# 
  1831  058D                     	;# 
  1832  058E                     	;# 
  1833  058F                     	;# 
  1834  058F                     	;# 
  1835  0590                     	;# 
  1836  0591                     	;# 
  1837  0592                     	;# 
  1838  0593                     	;# 
  1839  059C                     	;# 
  1840  059C                     	;# 
  1841  059D                     	;# 
  1842  059D                     	;# 
  1843  059E                     	;# 
  1844  059F                     	;# 
  1845  060C                     	;# 
  1846  060D                     	;# 
  1847  060E                     	;# 
  1848  060F                     	;# 
  1849  0610                     	;# 
  1850  0611                     	;# 
  1851  0612                     	;# 
  1852  0613                     	;# 
  1853  0614                     	;# 
  1854  070C                     	;# 
  1855  070D                     	;# 
  1856  070E                     	;# 
  1857  070F                     	;# 
  1858  0710                     	;# 
  1859  0711                     	;# 
  1860  0712                     	;# 
  1861  0713                     	;# 
  1862  0716                     	;# 
  1863  0717                     	;# 
  1864  0718                     	;# 
  1865  0719                     	;# 
  1866  071A                     	;# 
  1867  071B                     	;# 
  1868  071C                     	;# 
  1869  071D                     	;# 
  1870  0796                     	;# 
  1871  0797                     	;# 
  1872  0798                     	;# 
  1873  0799                     	;# 
  1874  079A                     	;# 
  1875  079B                     	;# 
  1876  080C                     	;# 
  1877  080D                     	;# 
  1878  080E                     	;# 
  1879  080F                     	;# 
  1880  0810                     	;# 
  1881  0811                     	;# 
  1882  0812                     	;# 
  1883  0813                     	;# 
  1884  0814                     	;# 
  1885  081A                     	;# 
  1886  081A                     	;# 
  1887  081B                     	;# 
  1888  081C                     	;# 
  1889  081C                     	;# 
  1890  081D                     	;# 
  1891  081E                     	;# 
  1892  081F                     	;# 
  1893  088C                     	;# 
  1894  088D                     	;# 
  1895  088E                     	;# 
  1896  088F                     	;# 
  1897  0890                     	;# 
  1898  0891                     	;# 
  1899  0892                     	;# 
  1900  0893                     	;# 
  1901  0895                     	;# 
  1902  0896                     	;# 
  1903  090C                     	;# 
  1904  090E                     	;# 
  1905  090F                     	;# 
  1906  091F                     	;# 
  1907  098F                     	;# 
  1908  098F                     	;# 
  1909  0990                     	;# 
  1910  0991                     	;# 
  1911  0992                     	;# 
  1912  0993                     	;# 
  1913  0994                     	;# 
  1914  0995                     	;# 
  1915  0996                     	;# 
  1916  0997                     	;# 
  1917  0A19                     	;# 
  1918  0A19                     	;# 
  1919  0A1A                     	;# 
  1920  0A1A                     	;# 
  1921  0A1B                     	;# 
  1922  0A1B                     	;# 
  1923  0A1B                     	;# 
  1924  0A1C                     	;# 
  1925  0A1C                     	;# 
  1926  0A1D                     	;# 
  1927  0A1D                     	;# 
  1928  0A1E                     	;# 
  1929  0A1E                     	;# 
  1930  0A1F                     	;# 
  1931  0A1F                     	;# 
  1932  0A1F                     	;# 
  1933  1E0F                     	;# 
  1934  1E10                     	;# 
  1935  1E11                     	;# 
  1936  1E12                     	;# 
  1937  1E13                     	;# 
  1938  1E14                     	;# 
  1939  1E15                     	;# 
  1940  1E16                     	;# 
  1941  1E17                     	;# 
  1942  1E18                     	;# 
  1943  1E19                     	;# 
  1944  1E1A                     	;# 
  1945  1E1B                     	;# 
  1946  1E1C                     	;# 
  1947  1E1D                     	;# 
  1948  1E1E                     	;# 
  1949  1E1F                     	;# 
  1950  1E20                     	;# 
  1951  1E21                     	;# 
  1952  1E22                     	;# 
  1953  1E23                     	;# 
  1954  1E24                     	;# 
  1955  1E25                     	;# 
  1956  1E26                     	;# 
  1957  1E27                     	;# 
  1958  1E28                     	;# 
  1959  1E29                     	;# 
  1960  1E2A                     	;# 
  1961  1E2B                     	;# 
  1962  1E2C                     	;# 
  1963  1E2D                     	;# 
  1964  1E2E                     	;# 
  1965  1E2F                     	;# 
  1966  1E30                     	;# 
  1967  1E31                     	;# 
  1968  1E32                     	;# 
  1969  1E33                     	;# 
  1970  1E34                     	;# 
  1971  1E35                     	;# 
  1972  1E36                     	;# 
  1973  1E37                     	;# 
  1974  1E38                     	;# 
  1975  1E39                     	;# 
  1976  1E3A                     	;# 
  1977  1E3B                     	;# 
  1978  1E3C                     	;# 
  1979  1E3D                     	;# 
  1980  1E3E                     	;# 
  1981  1E3F                     	;# 
  1982  1E50                     	;# 
  1983  1E51                     	;# 
  1984  1E52                     	;# 
  1985  1E53                     	;# 
  1986  1E54                     	;# 
  1987  1E8F                     	;# 
  1988  1E90                     	;# 
  1989  1E91                     	;# 
  1990  1E92                     	;# 
  1991  1E93                     	;# 
  1992  1E9C                     	;# 
  1993  1EA1                     	;# 
  1994  1EA2                     	;# 
  1995  1EB1                     	;# 
  1996  1EBB                     	;# 
  1997  1EBC                     	;# 
  1998  1EBD                     	;# 
  1999  1EBE                     	;# 
  2000  1EC3                     	;# 
  2001  1EC5                     	;# 
  2002  1EC6                     	;# 
  2003  1EC7                     	;# 
  2004  1EC8                     	;# 
  2005  1EC9                     	;# 
  2006  1ECA                     	;# 
  2007  1ECB                     	;# 
  2008  1ECC                     	;# 
  2009  1ECD                     	;# 
  2010  1ECE                     	;# 
  2011  1F10                     	;# 
  2012  1F11                     	;# 
  2013  1F12                     	;# 
  2014  1F13                     	;# 
  2015  1F14                     	;# 
  2016  1F15                     	;# 
  2017  1F16                     	;# 
  2018  1F17                     	;# 
  2019  1F18                     	;# 
  2020  1F19                     	;# 
  2021  1F1A                     	;# 
  2022  1F1B                     	;# 
  2023  1F1C                     	;# 
  2024  1F1D                     	;# 
  2025  1F1E                     	;# 
  2026  1F1F                     	;# 
  2027  1F20                     	;# 
  2028  1F21                     	;# 
  2029  1F22                     	;# 
  2030  1F23                     	;# 
  2031  1F24                     	;# 
  2032  1F25                     	;# 
  2033  1F26                     	;# 
  2034  1F27                     	;# 
  2035  1F28                     	;# 
  2036  1F29                     	;# 
  2037  1F2A                     	;# 
  2038  1F2B                     	;# 
  2039  1F2C                     	;# 
  2040  1F2D                     	;# 
  2041  1F2E                     	;# 
  2042  1F2F                     	;# 
  2043  1F30                     	;# 
  2044  1F31                     	;# 
  2045  1F32                     	;# 
  2046  1F38                     	;# 
  2047  1F39                     	;# 
  2048  1F3A                     	;# 
  2049  1F3B                     	;# 
  2050  1F3C                     	;# 
  2051  1F3D                     	;# 
  2052  1F3E                     	;# 
  2053  1F3F                     	;# 
  2054  1F43                     	;# 
  2055  1F44                     	;# 
  2056  1F45                     	;# 
  2057  1F46                     	;# 
  2058  1F47                     	;# 
  2059  1F48                     	;# 
  2060  1F49                     	;# 
  2061  1F4A                     	;# 
  2062  1F4E                     	;# 
  2063  1F4F                     	;# 
  2064  1F50                     	;# 
  2065  1F51                     	;# 
  2066  1F52                     	;# 
  2067  1F53                     	;# 
  2068  1F54                     	;# 
  2069  1F55                     	;# 
  2070  1F59                     	;# 
  2071  1F5A                     	;# 
  2072  1F5B                     	;# 
  2073  1F5C                     	;# 
  2074  1F5D                     	;# 
  2075  1F64                     	;# 
  2076  1F65                     	;# 
  2077  1F66                     	;# 
  2078  1F67                     	;# 
  2079  1F68                     	;# 
  2080  1F69                     	;# 
  2081  1F6A                     	;# 
  2082  1F6B                     	;# 
  2083  1FE4                     	;# 
  2084  1FE5                     	;# 
  2085  1FE6                     	;# 
  2086  1FE7                     	;# 
  2087  1FE8                     	;# 
  2088  1FE8                     	;# 
  2089  1FE9                     	;# 
  2090  1FEA                     	;# 
  2091  1FEB                     	;# 
  2092  1FED                     	;# 
  2093  1FEE                     	;# 
  2094  1FEF                     	;# 
  2095  0000                     	;# 
  2096  0001                     	;# 
  2097  0002                     	;# 
  2098  0003                     	;# 
  2099  0004                     	;# 
  2100  0005                     	;# 
  2101  0006                     	;# 
  2102  0007                     	;# 
  2103  0008                     	;# 
  2104  0009                     	;# 
  2105  000A                     	;# 
  2106  000B                     	;# 
  2107  000C                     	;# 
  2108  000D                     	;# 
  2109  000E                     	;# 
  2110  000F                     	;# 
  2111  0010                     	;# 
  2112  0011                     	;# 
  2113  0012                     	;# 
  2114  0013                     	;# 
  2115  0014                     	;# 
  2116  0015                     	;# 
  2117  0016                     	;# 
  2118  0017                     	;# 
  2119  0018                     	;# 
  2120  0019                     	;# 
  2121  001A                     	;# 
  2122  001B                     	;# 
  2123  001C                     	;# 
  2124  001D                     	;# 
  2125  009B                     	;# 
  2126  009B                     	;# 
  2127  009C                     	;# 
  2128  009D                     	;# 
  2129  009E                     	;# 
  2130  009F                     	;# 
  2131  0119                     	;# 
  2132  0119                     	;# 
  2133  0119                     	;# 
  2134  011A                     	;# 
  2135  011A                     	;# 
  2136  011A                     	;# 
  2137  011B                     	;# 
  2138  011B                     	;# 
  2139  011B                     	;# 
  2140  011B                     	;# 
  2141  011B                     	;# 
  2142  011C                     	;# 
  2143  011C                     	;# 
  2144  011C                     	;# 
  2145  011D                     	;# 
  2146  011D                     	;# 
  2147  011D                     	;# 
  2148  011E                     	;# 
  2149  011E                     	;# 
  2150  011E                     	;# 
  2151  011F                     	;# 
  2152  011F                     	;# 
  2153  011F                     	;# 
  2154  011F                     	;# 
  2155  011F                     	;# 
  2156  018C                     	;# 
  2157  018D                     	;# 
  2158  018E                     	;# 
  2159  018F                     	;# 
  2160  0190                     	;# 
  2161  0191                     	;# 
  2162  0192                     	;# 
  2163  0196                     	;# 
  2164  0197                     	;# 
  2165  0198                     	;# 
  2166  0199                     	;# 
  2167  019A                     	;# 
  2168  019B                     	;# 
  2169  019C                     	;# 
  2170  020C                     	;# 
  2171  020C                     	;# 
  2172  020D                     	;# 
  2173  020E                     	;# 
  2174  020F                     	;# 
  2175  020F                     	;# 
  2176  0210                     	;# 
  2177  0210                     	;# 
  2178  0211                     	;# 
  2179  0211                     	;# 
  2180  028C                     	;# 
  2181  028C                     	;# 
  2182  028D                     	;# 
  2183  028D                     	;# 
  2184  028E                     	;# 
  2185  028F                     	;# 
  2186  0290                     	;# 
  2187  0291                     	;# 
  2188  030C                     	;# 
  2189  030C                     	;# 
  2190  030D                     	;# 
  2191  030E                     	;# 
  2192  030F                     	;# 
  2193  0310                     	;# 
  2194  0310                     	;# 
  2195  0311                     	;# 
  2196  0312                     	;# 
  2197  0313                     	;# 
  2198  0314                     	;# 
  2199  0314                     	;# 
  2200  0315                     	;# 
  2201  0316                     	;# 
  2202  0318                     	;# 
  2203  0318                     	;# 
  2204  0319                     	;# 
  2205  031A                     	;# 
  2206  031C                     	;# 
  2207  031C                     	;# 
  2208  031D                     	;# 
  2209  031E                     	;# 
  2210  038C                     	;# 
  2211  038C                     	;# 
  2212  038D                     	;# 
  2213  038E                     	;# 
  2214  058C                     	;# 
  2215  058C                     	;# 
  2216  058D                     	;# 
  2217  058E                     	;# 
  2218  058F                     	;# 
  2219  058F                     	;# 
  2220  0590                     	;# 
  2221  0591                     	;# 
  2222  0592                     	;# 
  2223  0593                     	;# 
  2224  059C                     	;# 
  2225  059C                     	;# 
  2226  059D                     	;# 
  2227  059D                     	;# 
  2228  059E                     	;# 
  2229  059F                     	;# 
  2230  060C                     	;# 
  2231  060D                     	;# 
  2232  060E                     	;# 
  2233  060F                     	;# 
  2234  0610                     	;# 
  2235  0611                     	;# 
  2236  0612                     	;# 
  2237  0613                     	;# 
  2238  0614                     	;# 
  2239  070C                     	;# 
  2240  070D                     	;# 
  2241  070E                     	;# 
  2242  070F                     	;# 
  2243  0710                     	;# 
  2244  0711                     	;# 
  2245  0712                     	;# 
  2246  0713                     	;# 
  2247  0716                     	;# 
  2248  0717                     	;# 
  2249  0718                     	;# 
  2250  0719                     	;# 
  2251  071A                     	;# 
  2252  071B                     	;# 
  2253  071C                     	;# 
  2254  071D                     	;# 
  2255  0796                     	;# 
  2256  0797                     	;# 
  2257  0798                     	;# 
  2258  0799                     	;# 
  2259  079A                     	;# 
  2260  079B                     	;# 
  2261  080C                     	;# 
  2262  080D                     	;# 
  2263  080E                     	;# 
  2264  080F                     	;# 
  2265  0810                     	;# 
  2266  0811                     	;# 
  2267  0812                     	;# 
  2268  0813                     	;# 
  2269  0814                     	;# 
  2270  081A                     	;# 
  2271  081A                     	;# 
  2272  081B                     	;# 
  2273  081C                     	;# 
  2274  081C                     	;# 
  2275  081D                     	;# 
  2276  081E                     	;# 
  2277  081F                     	;# 
  2278  088C                     	;# 
  2279  088D                     	;# 
  2280  088E                     	;# 
  2281  088F                     	;# 
  2282  0890                     	;# 
  2283  0891                     	;# 
  2284  0892                     	;# 
  2285  0893                     	;# 
  2286  0895                     	;# 
  2287  0896                     	;# 
  2288  090C                     	;# 
  2289  090E                     	;# 
  2290  090F                     	;# 
  2291  091F                     	;# 
  2292  098F                     	;# 
  2293  098F                     	;# 
  2294  0990                     	;# 
  2295  0991                     	;# 
  2296  0992                     	;# 
  2297  0993                     	;# 
  2298  0994                     	;# 
  2299  0995                     	;# 
  2300  0996                     	;# 
  2301  0997                     	;# 
  2302  0A19                     	;# 
  2303  0A19                     	;# 
  2304  0A1A                     	;# 
  2305  0A1A                     	;# 
  2306  0A1B                     	;# 
  2307  0A1B                     	;# 
  2308  0A1B                     	;# 
  2309  0A1C                     	;# 
  2310  0A1C                     	;# 
  2311  0A1D                     	;# 
  2312  0A1D                     	;# 
  2313  0A1E                     	;# 
  2314  0A1E                     	;# 
  2315  0A1F                     	;# 
  2316  0A1F                     	;# 
  2317  0A1F                     	;# 
  2318  1E0F                     	;# 
  2319  1E10                     	;# 
  2320  1E11                     	;# 
  2321  1E12                     	;# 
  2322  1E13                     	;# 
  2323  1E14                     	;# 
  2324  1E15                     	;# 
  2325  1E16                     	;# 
  2326  1E17                     	;# 
  2327  1E18                     	;# 
  2328  1E19                     	;# 
  2329  1E1A                     	;# 
  2330  1E1B                     	;# 
  2331  1E1C                     	;# 
  2332  1E1D                     	;# 
  2333  1E1E                     	;# 
  2334  1E1F                     	;# 
  2335  1E20                     	;# 
  2336  1E21                     	;# 
  2337  1E22                     	;# 
  2338  1E23                     	;# 
  2339  1E24                     	;# 
  2340  1E25                     	;# 
  2341  1E26                     	;# 
  2342  1E27                     	;# 
  2343  1E28                     	;# 
  2344  1E29                     	;# 
  2345  1E2A                     	;# 
  2346  1E2B                     	;# 
  2347  1E2C                     	;# 
  2348  1E2D                     	;# 
  2349  1E2E                     	;# 
  2350  1E2F                     	;# 
  2351  1E30                     	;# 
  2352  1E31                     	;# 
  2353  1E32                     	;# 
  2354  1E33                     	;# 
  2355  1E34                     	;# 
  2356  1E35                     	;# 
  2357  1E36                     	;# 
  2358  1E37                     	;# 
  2359  1E38                     	;# 
  2360  1E39                     	;# 
  2361  1E3A                     	;# 
  2362  1E3B                     	;# 
  2363  1E3C                     	;# 
  2364  1E3D                     	;# 
  2365  1E3E                     	;# 
  2366  1E3F                     	;# 
  2367  1E50                     	;# 
  2368  1E51                     	;# 
  2369  1E52                     	;# 
  2370  1E53                     	;# 
  2371  1E54                     	;# 
  2372  1E8F                     	;# 
  2373  1E90                     	;# 
  2374  1E91                     	;# 
  2375  1E92                     	;# 
  2376  1E93                     	;# 
  2377  1E9C                     	;# 
  2378  1EA1                     	;# 
  2379  1EA2                     	;# 
  2380  1EB1                     	;# 
  2381  1EBB                     	;# 
  2382  1EBC                     	;# 
  2383  1EBD                     	;# 
  2384  1EBE                     	;# 
  2385  1EC3                     	;# 
  2386  1EC5                     	;# 
  2387  1EC6                     	;# 
  2388  1EC7                     	;# 
  2389  1EC8                     	;# 
  2390  1EC9                     	;# 
  2391  1ECA                     	;# 
  2392  1ECB                     	;# 
  2393  1ECC                     	;# 
  2394  1ECD                     	;# 
  2395  1ECE                     	;# 
  2396  1F10                     	;# 
  2397  1F11                     	;# 
  2398  1F12                     	;# 
  2399  1F13                     	;# 
  2400  1F14                     	;# 
  2401  1F15                     	;# 
  2402  1F16                     	;# 
  2403  1F17                     	;# 
  2404  1F18                     	;# 
  2405  1F19                     	;# 
  2406  1F1A                     	;# 
  2407  1F1B                     	;# 
  2408  1F1C                     	;# 
  2409  1F1D                     	;# 
  2410  1F1E                     	;# 
  2411  1F1F                     	;# 
  2412  1F20                     	;# 
  2413  1F21                     	;# 
  2414  1F22                     	;# 
  2415  1F23                     	;# 
  2416  1F24                     	;# 
  2417  1F25                     	;# 
  2418  1F26                     	;# 
  2419  1F27                     	;# 
  2420  1F28                     	;# 
  2421  1F29                     	;# 
  2422  1F2A                     	;# 
  2423  1F2B                     	;# 
  2424  1F2C                     	;# 
  2425  1F2D                     	;# 
  2426  1F2E                     	;# 
  2427  1F2F                     	;# 
  2428  1F30                     	;# 
  2429  1F31                     	;# 
  2430  1F32                     	;# 
  2431  1F38                     	;# 
  2432  1F39                     	;# 
  2433  1F3A                     	;# 
  2434  1F3B                     	;# 
  2435  1F3C                     	;# 
  2436  1F3D                     	;# 
  2437  1F3E                     	;# 
  2438  1F3F                     	;# 
  2439  1F43                     	;# 
  2440  1F44                     	;# 
  2441  1F45                     	;# 
  2442  1F46                     	;# 
  2443  1F47                     	;# 
  2444  1F48                     	;# 
  2445  1F49                     	;# 
  2446  1F4A                     	;# 
  2447  1F4E                     	;# 
  2448  1F4F                     	;# 
  2449  1F50                     	;# 
  2450  1F51                     	;# 
  2451  1F52                     	;# 
  2452  1F53                     	;# 
  2453  1F54                     	;# 
  2454  1F55                     	;# 
  2455  1F59                     	;# 
  2456  1F5A                     	;# 
  2457  1F5B                     	;# 
  2458  1F5C                     	;# 
  2459  1F5D                     	;# 
  2460  1F64                     	;# 
  2461  1F65                     	;# 
  2462  1F66                     	;# 
  2463  1F67                     	;# 
  2464  1F68                     	;# 
  2465  1F69                     	;# 
  2466  1F6A                     	;# 
  2467  1F6B                     	;# 
  2468  1FE4                     	;# 
  2469  1FE5                     	;# 
  2470  1FE6                     	;# 
  2471  1FE7                     	;# 
  2472  1FE8                     	;# 
  2473  1FE8                     	;# 
  2474  1FE9                     	;# 
  2475  1FEA                     	;# 
  2476  1FEB                     	;# 
  2477  1FED                     	;# 
  2478  1FEE                     	;# 
  2479  1FEF                     	;# 
  2480  0000                     	;# 
  2481  0001                     	;# 
  2482  0002                     	;# 
  2483  0003                     	;# 
  2484  0004                     	;# 
  2485  0005                     	;# 
  2486  0006                     	;# 
  2487  0007                     	;# 
  2488  0008                     	;# 
  2489  0009                     	;# 
  2490  000A                     	;# 
  2491  000B                     	;# 
  2492  000C                     	;# 
  2493  000D                     	;# 
  2494  000E                     	;# 
  2495  000F                     	;# 
  2496  0010                     	;# 
  2497  0011                     	;# 
  2498  0012                     	;# 
  2499  0013                     	;# 
  2500  0014                     	;# 
  2501  0015                     	;# 
  2502  0016                     	;# 
  2503  0017                     	;# 
  2504  0018                     	;# 
  2505  0019                     	;# 
  2506  001A                     	;# 
  2507  001B                     	;# 
  2508  001C                     	;# 
  2509  001D                     	;# 
  2510  009B                     	;# 
  2511  009B                     	;# 
  2512  009C                     	;# 
  2513  009D                     	;# 
  2514  009E                     	;# 
  2515  009F                     	;# 
  2516  0119                     	;# 
  2517  0119                     	;# 
  2518  0119                     	;# 
  2519  011A                     	;# 
  2520  011A                     	;# 
  2521  011A                     	;# 
  2522  011B                     	;# 
  2523  011B                     	;# 
  2524  011B                     	;# 
  2525  011B                     	;# 
  2526  011B                     	;# 
  2527  011C                     	;# 
  2528  011C                     	;# 
  2529  011C                     	;# 
  2530  011D                     	;# 
  2531  011D                     	;# 
  2532  011D                     	;# 
  2533  011E                     	;# 
  2534  011E                     	;# 
  2535  011E                     	;# 
  2536  011F                     	;# 
  2537  011F                     	;# 
  2538  011F                     	;# 
  2539  011F                     	;# 
  2540  011F                     	;# 
  2541  018C                     	;# 
  2542  018D                     	;# 
  2543  018E                     	;# 
  2544  018F                     	;# 
  2545  0190                     	;# 
  2546  0191                     	;# 
  2547  0192                     	;# 
  2548  0196                     	;# 
  2549  0197                     	;# 
  2550  0198                     	;# 
  2551  0199                     	;# 
  2552  019A                     	;# 
  2553  019B                     	;# 
  2554  019C                     	;# 
  2555  020C                     	;# 
  2556  020C                     	;# 
  2557  020D                     	;# 
  2558  020E                     	;# 
  2559  020F                     	;# 
  2560  020F                     	;# 
  2561  0210                     	;# 
  2562  0210                     	;# 
  2563  0211                     	;# 
  2564  0211                     	;# 
  2565  028C                     	;# 
  2566  028C                     	;# 
  2567  028D                     	;# 
  2568  028D                     	;# 
  2569  028E                     	;# 
  2570  028F                     	;# 
  2571  0290                     	;# 
  2572  0291                     	;# 
  2573  030C                     	;# 
  2574  030C                     	;# 
  2575  030D                     	;# 
  2576  030E                     	;# 
  2577  030F                     	;# 
  2578  0310                     	;# 
  2579  0310                     	;# 
  2580  0311                     	;# 
  2581  0312                     	;# 
  2582  0313                     	;# 
  2583  0314                     	;# 
  2584  0314                     	;# 
  2585  0315                     	;# 
  2586  0316                     	;# 
  2587  0318                     	;# 
  2588  0318                     	;# 
  2589  0319                     	;# 
  2590  031A                     	;# 
  2591  031C                     	;# 
  2592  031C                     	;# 
  2593  031D                     	;# 
  2594  031E                     	;# 
  2595  038C                     	;# 
  2596  038C                     	;# 
  2597  038D                     	;# 
  2598  038E                     	;# 
  2599  058C                     	;# 
  2600  058C                     	;# 
  2601  058D                     	;# 
  2602  058E                     	;# 
  2603  058F                     	;# 
  2604  058F                     	;# 
  2605  0590                     	;# 
  2606  0591                     	;# 
  2607  0592                     	;# 
  2608  0593                     	;# 
  2609  059C                     	;# 
  2610  059C                     	;# 
  2611  059D                     	;# 
  2612  059D                     	;# 
  2613  059E                     	;# 
  2614  059F                     	;# 
  2615  060C                     	;# 
  2616  060D                     	;# 
  2617  060E                     	;# 
  2618  060F                     	;# 
  2619  0610                     	;# 
  2620  0611                     	;# 
  2621  0612                     	;# 
  2622  0613                     	;# 
  2623  0614                     	;# 
  2624  070C                     	;# 
  2625  070D                     	;# 
  2626  070E                     	;# 
  2627  070F                     	;# 
  2628  0710                     	;# 
  2629  0711                     	;# 
  2630  0712                     	;# 
  2631  0713                     	;# 
  2632  0716                     	;# 
  2633  0717                     	;# 
  2634  0718                     	;# 
  2635  0719                     	;# 
  2636  071A                     	;# 
  2637  071B                     	;# 
  2638  071C                     	;# 
  2639  071D                     	;# 
  2640  0796                     	;# 
  2641  0797                     	;# 
  2642  0798                     	;# 
  2643  0799                     	;# 
  2644  079A                     	;# 
  2645  079B                     	;# 
  2646  080C                     	;# 
  2647  080D                     	;# 
  2648  080E                     	;# 
  2649  080F                     	;# 
  2650  0810                     	;# 
  2651  0811                     	;# 
  2652  0812                     	;# 
  2653  0813                     	;# 
  2654  0814                     	;# 
  2655  081A                     	;# 
  2656  081A                     	;# 
  2657  081B                     	;# 
  2658  081C                     	;# 
  2659  081C                     	;# 
  2660  081D                     	;# 
  2661  081E                     	;# 
  2662  081F                     	;# 
  2663  088C                     	;# 
  2664  088D                     	;# 
  2665  088E                     	;# 
  2666  088F                     	;# 
  2667  0890                     	;# 
  2668  0891                     	;# 
  2669  0892                     	;# 
  2670  0893                     	;# 
  2671  0895                     	;# 
  2672  0896                     	;# 
  2673  090C                     	;# 
  2674  090E                     	;# 
  2675  090F                     	;# 
  2676  091F                     	;# 
  2677  098F                     	;# 
  2678  098F                     	;# 
  2679  0990                     	;# 
  2680  0991                     	;# 
  2681  0992                     	;# 
  2682  0993                     	;# 
  2683  0994                     	;# 
  2684  0995                     	;# 
  2685  0996                     	;# 
  2686  0997                     	;# 
  2687  0A19                     	;# 
  2688  0A19                     	;# 
  2689  0A1A                     	;# 
  2690  0A1A                     	;# 
  2691  0A1B                     	;# 
  2692  0A1B                     	;# 
  2693  0A1B                     	;# 
  2694  0A1C                     	;# 
  2695  0A1C                     	;# 
  2696  0A1D                     	;# 
  2697  0A1D                     	;# 
  2698  0A1E                     	;# 
  2699  0A1E                     	;# 
  2700  0A1F                     	;# 
  2701  0A1F                     	;# 
  2702  0A1F                     	;# 
  2703  1E0F                     	;# 
  2704  1E10                     	;# 
  2705  1E11                     	;# 
  2706  1E12                     	;# 
  2707  1E13                     	;# 
  2708  1E14                     	;# 
  2709  1E15                     	;# 
  2710  1E16                     	;# 
  2711  1E17                     	;# 
  2712  1E18                     	;# 
  2713  1E19                     	;# 
  2714  1E1A                     	;# 
  2715  1E1B                     	;# 
  2716  1E1C                     	;# 
  2717  1E1D                     	;# 
  2718  1E1E                     	;# 
  2719  1E1F                     	;# 
  2720  1E20                     	;# 
  2721  1E21                     	;# 
  2722  1E22                     	;# 
  2723  1E23                     	;# 
  2724  1E24                     	;# 
  2725  1E25                     	;# 
  2726  1E26                     	;# 
  2727  1E27                     	;# 
  2728  1E28                     	;# 
  2729  1E29                     	;# 
  2730  1E2A                     	;# 
  2731  1E2B                     	;# 
  2732  1E2C                     	;# 
  2733  1E2D                     	;# 
  2734  1E2E                     	;# 
  2735  1E2F                     	;# 
  2736  1E30                     	;# 
  2737  1E31                     	;# 
  2738  1E32                     	;# 
  2739  1E33                     	;# 
  2740  1E34                     	;# 
  2741  1E35                     	;# 
  2742  1E36                     	;# 
  2743  1E37                     	;# 
  2744  1E38                     	;# 
  2745  1E39                     	;# 
  2746  1E3A                     	;# 
  2747  1E3B                     	;# 
  2748  1E3C                     	;# 
  2749  1E3D                     	;# 
  2750  1E3E                     	;# 
  2751  1E3F                     	;# 
  2752  1E50                     	;# 
  2753  1E51                     	;# 
  2754  1E52                     	;# 
  2755  1E53                     	;# 
  2756  1E54                     	;# 
  2757  1E8F                     	;# 
  2758  1E90                     	;# 
  2759  1E91                     	;# 
  2760  1E92                     	;# 
  2761  1E93                     	;# 
  2762  1E9C                     	;# 
  2763  1EA1                     	;# 
  2764  1EA2                     	;# 
  2765  1EB1                     	;# 
  2766  1EBB                     	;# 
  2767  1EBC                     	;# 
  2768  1EBD                     	;# 
  2769  1EBE                     	;# 
  2770  1EC3                     	;# 
  2771  1EC5                     	;# 
  2772  1EC6                     	;# 
  2773  1EC7                     	;# 
  2774  1EC8                     	;# 
  2775  1EC9                     	;# 
  2776  1ECA                     	;# 
  2777  1ECB                     	;# 
  2778  1ECC                     	;# 
  2779  1ECD                     	;# 
  2780  1ECE                     	;# 
  2781  1F10                     	;# 
  2782  1F11                     	;# 
  2783  1F12                     	;# 
  2784  1F13                     	;# 
  2785  1F14                     	;# 
  2786  1F15                     	;# 
  2787  1F16                     	;# 
  2788  1F17                     	;# 
  2789  1F18                     	;# 
  2790  1F19                     	;# 
  2791  1F1A                     	;# 
  2792  1F1B                     	;# 
  2793  1F1C                     	;# 
  2794  1F1D                     	;# 
  2795  1F1E                     	;# 
  2796  1F1F                     	;# 
  2797  1F20                     	;# 
  2798  1F21                     	;# 
  2799  1F22                     	;# 
  2800  1F23                     	;# 
  2801  1F24                     	;# 
  2802  1F25                     	;# 
  2803  1F26                     	;# 
  2804  1F27                     	;# 
  2805  1F28                     	;# 
  2806  1F29                     	;# 
  2807  1F2A                     	;# 
  2808  1F2B                     	;# 
  2809  1F2C                     	;# 
  2810  1F2D                     	;# 
  2811  1F2E                     	;# 
  2812  1F2F                     	;# 
  2813  1F30                     	;# 
  2814  1F31                     	;# 
  2815  1F32                     	;# 
  2816  1F38                     	;# 
  2817  1F39                     	;# 
  2818  1F3A                     	;# 
  2819  1F3B                     	;# 
  2820  1F3C                     	;# 
  2821  1F3D                     	;# 
  2822  1F3E                     	;# 
  2823  1F3F                     	;# 
  2824  1F43                     	;# 
  2825  1F44                     	;# 
  2826  1F45                     	;# 
  2827  1F46                     	;# 
  2828  1F47                     	;# 
  2829  1F48                     	;# 
  2830  1F49                     	;# 
  2831  1F4A                     	;# 
  2832  1F4E                     	;# 
  2833  1F4F                     	;# 
  2834  1F50                     	;# 
  2835  1F51                     	;# 
  2836  1F52                     	;# 
  2837  1F53                     	;# 
  2838  1F54                     	;# 
  2839  1F55                     	;# 
  2840  1F59                     	;# 
  2841  1F5A                     	;# 
  2842  1F5B                     	;# 
  2843  1F5C                     	;# 
  2844  1F5D                     	;# 
  2845  1F64                     	;# 
  2846  1F65                     	;# 
  2847  1F66                     	;# 
  2848  1F67                     	;# 
  2849  1F68                     	;# 
  2850  1F69                     	;# 
  2851  1F6A                     	;# 
  2852  1F6B                     	;# 
  2853  1FE4                     	;# 
  2854  1FE5                     	;# 
  2855  1FE6                     	;# 
  2856  1FE7                     	;# 
  2857  1FE8                     	;# 
  2858  1FE8                     	;# 
  2859  1FE9                     	;# 
  2860  1FEA                     	;# 
  2861  1FEB                     	;# 
  2862  1FED                     	;# 
  2863  1FEE                     	;# 
  2864  1FEF                     	;# 
  2865  0000                     	;# 
  2866  0001                     	;# 
  2867  0002                     	;# 
  2868  0003                     	;# 
  2869  0004                     	;# 
  2870  0005                     	;# 
  2871  0006                     	;# 
  2872  0007                     	;# 
  2873  0008                     	;# 
  2874  0009                     	;# 
  2875  000A                     	;# 
  2876  000B                     	;# 
  2877  000C                     	;# 
  2878  000D                     	;# 
  2879  000E                     	;# 
  2880  000F                     	;# 
  2881  0010                     	;# 
  2882  0011                     	;# 
  2883  0012                     	;# 
  2884  0013                     	;# 
  2885  0014                     	;# 
  2886  0015                     	;# 
  2887  0016                     	;# 
  2888  0017                     	;# 
  2889  0018                     	;# 
  2890  0019                     	;# 
  2891  001A                     	;# 
  2892  001B                     	;# 
  2893  001C                     	;# 
  2894  001D                     	;# 
  2895  009B                     	;# 
  2896  009B                     	;# 
  2897  009C                     	;# 
  2898  009D                     	;# 
  2899  009E                     	;# 
  2900  009F                     	;# 
  2901  0119                     	;# 
  2902  0119                     	;# 
  2903  0119                     	;# 
  2904  011A                     	;# 
  2905  011A                     	;# 
  2906  011A                     	;# 
  2907  011B                     	;# 
  2908  011B                     	;# 
  2909  011B                     	;# 
  2910  011B                     	;# 
  2911  011B                     	;# 
  2912  011C                     	;# 
  2913  011C                     	;# 
  2914  011C                     	;# 
  2915  011D                     	;# 
  2916  011D                     	;# 
  2917  011D                     	;# 
  2918  011E                     	;# 
  2919  011E                     	;# 
  2920  011E                     	;# 
  2921  011F                     	;# 
  2922  011F                     	;# 
  2923  011F                     	;# 
  2924  011F                     	;# 
  2925  011F                     	;# 
  2926  018C                     	;# 
  2927  018D                     	;# 
  2928  018E                     	;# 
  2929  018F                     	;# 
  2930  0190                     	;# 
  2931  0191                     	;# 
  2932  0192                     	;# 
  2933  0196                     	;# 
  2934  0197                     	;# 
  2935  0198                     	;# 
  2936  0199                     	;# 
  2937  019A                     	;# 
  2938  019B                     	;# 
  2939  019C                     	;# 
  2940  020C                     	;# 
  2941  020C                     	;# 
  2942  020D                     	;# 
  2943  020E                     	;# 
  2944  020F                     	;# 
  2945  020F                     	;# 
  2946  0210                     	;# 
  2947  0210                     	;# 
  2948  0211                     	;# 
  2949  0211                     	;# 
  2950  028C                     	;# 
  2951  028C                     	;# 
  2952  028D                     	;# 
  2953  028D                     	;# 
  2954  028E                     	;# 
  2955  028F                     	;# 
  2956  0290                     	;# 
  2957  0291                     	;# 
  2958  030C                     	;# 
  2959  030C                     	;# 
  2960  030D                     	;# 
  2961  030E                     	;# 
  2962  030F                     	;# 
  2963  0310                     	;# 
  2964  0310                     	;# 
  2965  0311                     	;# 
  2966  0312                     	;# 
  2967  0313                     	;# 
  2968  0314                     	;# 
  2969  0314                     	;# 
  2970  0315                     	;# 
  2971  0316                     	;# 
  2972  0318                     	;# 
  2973  0318                     	;# 
  2974  0319                     	;# 
  2975  031A                     	;# 
  2976  031C                     	;# 
  2977  031C                     	;# 
  2978  031D                     	;# 
  2979  031E                     	;# 
  2980  038C                     	;# 
  2981  038C                     	;# 
  2982  038D                     	;# 
  2983  038E                     	;# 
  2984  058C                     	;# 
  2985  058C                     	;# 
  2986  058D                     	;# 
  2987  058E                     	;# 
  2988  058F                     	;# 
  2989  058F                     	;# 
  2990  0590                     	;# 
  2991  0591                     	;# 
  2992  0592                     	;# 
  2993  0593                     	;# 
  2994  059C                     	;# 
  2995  059C                     	;# 
  2996  059D                     	;# 
  2997  059D                     	;# 
  2998  059E                     	;# 
  2999  059F                     	;# 
  3000  060C                     	;# 
  3001  060D                     	;# 
  3002  060E                     	;# 
  3003  060F                     	;# 
  3004  0610                     	;# 
  3005  0611                     	;# 
  3006  0612                     	;# 
  3007  0613                     	;# 
  3008  0614                     	;# 
  3009  070C                     	;# 
  3010  070D                     	;# 
  3011  070E                     	;# 
  3012  070F                     	;# 
  3013  0710                     	;# 
  3014  0711                     	;# 
  3015  0712                     	;# 
  3016  0713                     	;# 
  3017  0716                     	;# 
  3018  0717                     	;# 
  3019  0718                     	;# 
  3020  0719                     	;# 
  3021  071A                     	;# 
  3022  071B                     	;# 
  3023  071C                     	;# 
  3024  071D                     	;# 
  3025  0796                     	;# 
  3026  0797                     	;# 
  3027  0798                     	;# 
  3028  0799                     	;# 
  3029  079A                     	;# 
  3030  079B                     	;# 
  3031  080C                     	;# 
  3032  080D                     	;# 
  3033  080E                     	;# 
  3034  080F                     	;# 
  3035  0810                     	;# 
  3036  0811                     	;# 
  3037  0812                     	;# 
  3038  0813                     	;# 
  3039  0814                     	;# 
  3040  081A                     	;# 
  3041  081A                     	;# 
  3042  081B                     	;# 
  3043  081C                     	;# 
  3044  081C                     	;# 
  3045  081D                     	;# 
  3046  081E                     	;# 
  3047  081F                     	;# 
  3048  088C                     	;# 
  3049  088D                     	;# 
  3050  088E                     	;# 
  3051  088F                     	;# 
  3052  0890                     	;# 
  3053  0891                     	;# 
  3054  0892                     	;# 
  3055  0893                     	;# 
  3056  0895                     	;# 
  3057  0896                     	;# 
  3058  090C                     	;# 
  3059  090E                     	;# 
  3060  090F                     	;# 
  3061  091F                     	;# 
  3062  098F                     	;# 
  3063  098F                     	;# 
  3064  0990                     	;# 
  3065  0991                     	;# 
  3066  0992                     	;# 
  3067  0993                     	;# 
  3068  0994                     	;# 
  3069  0995                     	;# 
  3070  0996                     	;# 
  3071  0997                     	;# 
  3072  0A19                     	;# 
  3073  0A19                     	;# 
  3074  0A1A                     	;# 
  3075  0A1A                     	;# 
  3076  0A1B                     	;# 
  3077  0A1B                     	;# 
  3078  0A1B                     	;# 
  3079  0A1C                     	;# 
  3080  0A1C                     	;# 
  3081  0A1D                     	;# 
  3082  0A1D                     	;# 
  3083  0A1E                     	;# 
  3084  0A1E                     	;# 
  3085  0A1F                     	;# 
  3086  0A1F                     	;# 
  3087  0A1F                     	;# 
  3088  1E0F                     	;# 
  3089  1E10                     	;# 
  3090  1E11                     	;# 
  3091  1E12                     	;# 
  3092  1E13                     	;# 
  3093  1E14                     	;# 
  3094  1E15                     	;# 
  3095  1E16                     	;# 
  3096  1E17                     	;# 
  3097  1E18                     	;# 
  3098  1E19                     	;# 
  3099  1E1A                     	;# 
  3100  1E1B                     	;# 
  3101  1E1C                     	;# 
  3102  1E1D                     	;# 
  3103  1E1E                     	;# 
  3104  1E1F                     	;# 
  3105  1E20                     	;# 
  3106  1E21                     	;# 
  3107  1E22                     	;# 
  3108  1E23                     	;# 
  3109  1E24                     	;# 
  3110  1E25                     	;# 
  3111  1E26                     	;# 
  3112  1E27                     	;# 
  3113  1E28                     	;# 
  3114  1E29                     	;# 
  3115  1E2A                     	;# 
  3116  1E2B                     	;# 
  3117  1E2C                     	;# 
  3118  1E2D                     	;# 
  3119  1E2E                     	;# 
  3120  1E2F                     	;# 
  3121  1E30                     	;# 
  3122  1E31                     	;# 
  3123  1E32                     	;# 
  3124  1E33                     	;# 
  3125  1E34                     	;# 
  3126  1E35                     	;# 
  3127  1E36                     	;# 
  3128  1E37                     	;# 
  3129  1E38                     	;# 
  3130  1E39                     	;# 
  3131  1E3A                     	;# 
  3132  1E3B                     	;# 
  3133  1E3C                     	;# 
  3134  1E3D                     	;# 
  3135  1E3E                     	;# 
  3136  1E3F                     	;# 
  3137  1E50                     	;# 
  3138  1E51                     	;# 
  3139  1E52                     	;# 
  3140  1E53                     	;# 
  3141  1E54                     	;# 
  3142  1E8F                     	;# 
  3143  1E90                     	;# 
  3144  1E91                     	;# 
  3145  1E92                     	;# 
  3146  1E93                     	;# 
  3147  1E9C                     	;# 
  3148  1EA1                     	;# 
  3149  1EA2                     	;# 
  3150  1EB1                     	;# 
  3151  1EBB                     	;# 
  3152  1EBC                     	;# 
  3153  1EBD                     	;# 
  3154  1EBE                     	;# 
  3155  1EC3                     	;# 
  3156  1EC5                     	;# 
  3157  1EC6                     	;# 
  3158  1EC7                     	;# 
  3159  1EC8                     	;# 
  3160  1EC9                     	;# 
  3161  1ECA                     	;# 
  3162  1ECB                     	;# 
  3163  1ECC                     	;# 
  3164  1ECD                     	;# 
  3165  1ECE                     	;# 
  3166  1F10                     	;# 
  3167  1F11                     	;# 
  3168  1F12                     	;# 
  3169  1F13                     	;# 
  3170  1F14                     	;# 
  3171  1F15                     	;# 
  3172  1F16                     	;# 
  3173  1F17                     	;# 
  3174  1F18                     	;# 
  3175  1F19                     	;# 
  3176  1F1A                     	;# 
  3177  1F1B                     	;# 
  3178  1F1C                     	;# 
  3179  1F1D                     	;# 
  3180  1F1E                     	;# 
  3181  1F1F                     	;# 
  3182  1F20                     	;# 
  3183  1F21                     	;# 
  3184  1F22                     	;# 
  3185  1F23                     	;# 
  3186  1F24                     	;# 
  3187  1F25                     	;# 
  3188  1F26                     	;# 
  3189  1F27                     	;# 
  3190  1F28                     	;# 
  3191  1F29                     	;# 
  3192  1F2A                     	;# 
  3193  1F2B                     	;# 
  3194  1F2C                     	;# 
  3195  1F2D                     	;# 
  3196  1F2E                     	;# 
  3197  1F2F                     	;# 
  3198  1F30                     	;# 
  3199  1F31                     	;# 
  3200  1F32                     	;# 
  3201  1F38                     	;# 
  3202  1F39                     	;# 
  3203  1F3A                     	;# 
  3204  1F3B                     	;# 
  3205  1F3C                     	;# 
  3206  1F3D                     	;# 
  3207  1F3E                     	;# 
  3208  1F3F                     	;# 
  3209  1F43                     	;# 
  3210  1F44                     	;# 
  3211  1F45                     	;# 
  3212  1F46                     	;# 
  3213  1F47                     	;# 
  3214  1F48                     	;# 
  3215  1F49                     	;# 
  3216  1F4A                     	;# 
  3217  1F4E                     	;# 
  3218  1F4F                     	;# 
  3219  1F50                     	;# 
  3220  1F51                     	;# 
  3221  1F52                     	;# 
  3222  1F53                     	;# 
  3223  1F54                     	;# 
  3224  1F55                     	;# 
  3225  1F59                     	;# 
  3226  1F5A                     	;# 
  3227  1F5B                     	;# 
  3228  1F5C                     	;# 
  3229  1F5D                     	;# 
  3230  1F64                     	;# 
  3231  1F65                     	;# 
  3232  1F66                     	;# 
  3233  1F67                     	;# 
  3234  1F68                     	;# 
  3235  1F69                     	;# 
  3236  1F6A                     	;# 
  3237  1F6B                     	;# 
  3238  1FE4                     	;# 
  3239  1FE5                     	;# 
  3240  1FE6                     	;# 
  3241  1FE7                     	;# 
  3242  1FE8                     	;# 
  3243  1FE8                     	;# 
  3244  1FE9                     	;# 
  3245  1FEA                     	;# 
  3246  1FEB                     	;# 
  3247  1FED                     	;# 
  3248  1FEE                     	;# 
  3249  1FEF                     	;# 
  3250  0000                     	;# 
  3251  0001                     	;# 
  3252  0002                     	;# 
  3253  0003                     	;# 
  3254  0004                     	;# 
  3255  0005                     	;# 
  3256  0006                     	;# 
  3257  0007                     	;# 
  3258  0008                     	;# 
  3259  0009                     	;# 
  3260  000A                     	;# 
  3261  000B                     	;# 
  3262  000C                     	;# 
  3263  000D                     	;# 
  3264  000E                     	;# 
  3265  000F                     	;# 
  3266  0010                     	;# 
  3267  0011                     	;# 
  3268  0012                     	;# 
  3269  0013                     	;# 
  3270  0014                     	;# 
  3271  0015                     	;# 
  3272  0016                     	;# 
  3273  0017                     	;# 
  3274  0018                     	;# 
  3275  0019                     	;# 
  3276  001A                     	;# 
  3277  001B                     	;# 
  3278  001C                     	;# 
  3279  001D                     	;# 
  3280  009B                     	;# 
  3281  009B                     	;# 
  3282  009C                     	;# 
  3283  009D                     	;# 
  3284  009E                     	;# 
  3285  009F                     	;# 
  3286  0119                     	;# 
  3287  0119                     	;# 
  3288  0119                     	;# 
  3289  011A                     	;# 
  3290  011A                     	;# 
  3291  011A                     	;# 
  3292  011B                     	;# 
  3293  011B                     	;# 
  3294  011B                     	;# 
  3295  011B                     	;# 
  3296  011B                     	;# 
  3297  011C                     	;# 
  3298  011C                     	;# 
  3299  011C                     	;# 
  3300  011D                     	;# 
  3301  011D                     	;# 
  3302  011D                     	;# 
  3303  011E                     	;# 
  3304  011E                     	;# 
  3305  011E                     	;# 
  3306  011F                     	;# 
  3307  011F                     	;# 
  3308  011F                     	;# 
  3309  011F                     	;# 
  3310  011F                     	;# 
  3311  018C                     	;# 
  3312  018D                     	;# 
  3313  018E                     	;# 
  3314  018F                     	;# 
  3315  0190                     	;# 
  3316  0191                     	;# 
  3317  0192                     	;# 
  3318  0196                     	;# 
  3319  0197                     	;# 
  3320  0198                     	;# 
  3321  0199                     	;# 
  3322  019A                     	;# 
  3323  019B                     	;# 
  3324  019C                     	;# 
  3325  020C                     	;# 
  3326  020C                     	;# 
  3327  020D                     	;# 
  3328  020E                     	;# 
  3329  020F                     	;# 
  3330  020F                     	;# 
  3331  0210                     	;# 
  3332  0210                     	;# 
  3333  0211                     	;# 
  3334  0211                     	;# 
  3335  028C                     	;# 
  3336  028C                     	;# 
  3337  028D                     	;# 
  3338  028D                     	;# 
  3339  028E                     	;# 
  3340  028F                     	;# 
  3341  0290                     	;# 
  3342  0291                     	;# 
  3343  030C                     	;# 
  3344  030C                     	;# 
  3345  030D                     	;# 
  3346  030E                     	;# 
  3347  030F                     	;# 
  3348  0310                     	;# 
  3349  0310                     	;# 
  3350  0311                     	;# 
  3351  0312                     	;# 
  3352  0313                     	;# 
  3353  0314                     	;# 
  3354  0314                     	;# 
  3355  0315                     	;# 
  3356  0316                     	;# 
  3357  0318                     	;# 
  3358  0318                     	;# 
  3359  0319                     	;# 
  3360  031A                     	;# 
  3361  031C                     	;# 
  3362  031C                     	;# 
  3363  031D                     	;# 
  3364  031E                     	;# 
  3365  038C                     	;# 
  3366  038C                     	;# 
  3367  038D                     	;# 
  3368  038E                     	;# 
  3369  058C                     	;# 
  3370  058C                     	;# 
  3371  058D                     	;# 
  3372  058E                     	;# 
  3373  058F                     	;# 
  3374  058F                     	;# 
  3375  0590                     	;# 
  3376  0591                     	;# 
  3377  0592                     	;# 
  3378  0593                     	;# 
  3379  059C                     	;# 
  3380  059C                     	;# 
  3381  059D                     	;# 
  3382  059D                     	;# 
  3383  059E                     	;# 
  3384  059F                     	;# 
  3385  060C                     	;# 
  3386  060D                     	;# 
  3387  060E                     	;# 
  3388  060F                     	;# 
  3389  0610                     	;# 
  3390  0611                     	;# 
  3391  0612                     	;# 
  3392  0613                     	;# 
  3393  0614                     	;# 
  3394  070C                     	;# 
  3395  070D                     	;# 
  3396  070E                     	;# 
  3397  070F                     	;# 
  3398  0710                     	;# 
  3399  0711                     	;# 
  3400  0712                     	;# 
  3401  0713                     	;# 
  3402  0716                     	;# 
  3403  0717                     	;# 
  3404  0718                     	;# 
  3405  0719                     	;# 
  3406  071A                     	;# 
  3407  071B                     	;# 
  3408  071C                     	;# 
  3409  071D                     	;# 
  3410  0796                     	;# 
  3411  0797                     	;# 
  3412  0798                     	;# 
  3413  0799                     	;# 
  3414  079A                     	;# 
  3415  079B                     	;# 
  3416  080C                     	;# 
  3417  080D                     	;# 
  3418  080E                     	;# 
  3419  080F                     	;# 
  3420  0810                     	;# 
  3421  0811                     	;# 
  3422  0812                     	;# 
  3423  0813                     	;# 
  3424  0814                     	;# 
  3425  081A                     	;# 
  3426  081A                     	;# 
  3427  081B                     	;# 
  3428  081C                     	;# 
  3429  081C                     	;# 
  3430  081D                     	;# 
  3431  081E                     	;# 
  3432  081F                     	;# 
  3433  088C                     	;# 
  3434  088D                     	;# 
  3435  088E                     	;# 
  3436  088F                     	;# 
  3437  0890                     	;# 
  3438  0891                     	;# 
  3439  0892                     	;# 
  3440  0893                     	;# 
  3441  0895                     	;# 
  3442  0896                     	;# 
  3443  090C                     	;# 
  3444  090E                     	;# 
  3445  090F                     	;# 
  3446  091F                     	;# 
  3447  098F                     	;# 
  3448  098F                     	;# 
  3449  0990                     	;# 
  3450  0991                     	;# 
  3451  0992                     	;# 
  3452  0993                     	;# 
  3453  0994                     	;# 
  3454  0995                     	;# 
  3455  0996                     	;# 
  3456  0997                     	;# 
  3457  0A19                     	;# 
  3458  0A19                     	;# 
  3459  0A1A                     	;# 
  3460  0A1A                     	;# 
  3461  0A1B                     	;# 
  3462  0A1B                     	;# 
  3463  0A1B                     	;# 
  3464  0A1C                     	;# 
  3465  0A1C                     	;# 
  3466  0A1D                     	;# 
  3467  0A1D                     	;# 
  3468  0A1E                     	;# 
  3469  0A1E                     	;# 
  3470  0A1F                     	;# 
  3471  0A1F                     	;# 
  3472  0A1F                     	;# 
  3473  1E0F                     	;# 
  3474  1E10                     	;# 
  3475  1E11                     	;# 
  3476  1E12                     	;# 
  3477  1E13                     	;# 
  3478  1E14                     	;# 
  3479  1E15                     	;# 
  3480  1E16                     	;# 
  3481  1E17                     	;# 
  3482  1E18                     	;# 
  3483  1E19                     	;# 
  3484  1E1A                     	;# 
  3485  1E1B                     	;# 
  3486  1E1C                     	;# 
  3487  1E1D                     	;# 
  3488  1E1E                     	;# 
  3489  1E1F                     	;# 
  3490  1E20                     	;# 
  3491  1E21                     	;# 
  3492  1E22                     	;# 
  3493  1E23                     	;# 
  3494  1E24                     	;# 
  3495  1E25                     	;# 
  3496  1E26                     	;# 
  3497  1E27                     	;# 
  3498  1E28                     	;# 
  3499  1E29                     	;# 
  3500  1E2A                     	;# 
  3501  1E2B                     	;# 
  3502  1E2C                     	;# 
  3503  1E2D                     	;# 
  3504  1E2E                     	;# 
  3505  1E2F                     	;# 
  3506  1E30                     	;# 
  3507  1E31                     	;# 
  3508  1E32                     	;# 
  3509  1E33                     	;# 
  3510  1E34                     	;# 
  3511  1E35                     	;# 
  3512  1E36                     	;# 
  3513  1E37                     	;# 
  3514  1E38                     	;# 
  3515  1E39                     	;# 
  3516  1E3A                     	;# 
  3517  1E3B                     	;# 
  3518  1E3C                     	;# 
  3519  1E3D                     	;# 
  3520  1E3E                     	;# 
  3521  1E3F                     	;# 
  3522  1E50                     	;# 
  3523  1E51                     	;# 
  3524  1E52                     	;# 
  3525  1E53                     	;# 
  3526  1E54                     	;# 
  3527  1E8F                     	;# 
  3528  1E90                     	;# 
  3529  1E91                     	;# 
  3530  1E92                     	;# 
  3531  1E93                     	;# 
  3532  1E9C                     	;# 
  3533  1EA1                     	;# 
  3534  1EA2                     	;# 
  3535  1EB1                     	;# 
  3536  1EBB                     	;# 
  3537  1EBC                     	;# 
  3538  1EBD                     	;# 
  3539  1EBE                     	;# 
  3540  1EC3                     	;# 
  3541  1EC5                     	;# 
  3542  1EC6                     	;# 
  3543  1EC7                     	;# 
  3544  1EC8                     	;# 
  3545  1EC9                     	;# 
  3546  1ECA                     	;# 
  3547  1ECB                     	;# 
  3548  1ECC                     	;# 
  3549  1ECD                     	;# 
  3550  1ECE                     	;# 
  3551  1F10                     	;# 
  3552  1F11                     	;# 
  3553  1F12                     	;# 
  3554  1F13                     	;# 
  3555  1F14                     	;# 
  3556  1F15                     	;# 
  3557  1F16                     	;# 
  3558  1F17                     	;# 
  3559  1F18                     	;# 
  3560  1F19                     	;# 
  3561  1F1A                     	;# 
  3562  1F1B                     	;# 
  3563  1F1C                     	;# 
  3564  1F1D                     	;# 
  3565  1F1E                     	;# 
  3566  1F1F                     	;# 
  3567  1F20                     	;# 
  3568  1F21                     	;# 
  3569  1F22                     	;# 
  3570  1F23                     	;# 
  3571  1F24                     	;# 
  3572  1F25                     	;# 
  3573  1F26                     	;# 
  3574  1F27                     	;# 
  3575  1F28                     	;# 
  3576  1F29                     	;# 
  3577  1F2A                     	;# 
  3578  1F2B                     	;# 
  3579  1F2C                     	;# 
  3580  1F2D                     	;# 
  3581  1F2E                     	;# 
  3582  1F2F                     	;# 
  3583  1F30                     	;# 
  3584  1F31                     	;# 
  3585  1F32                     	;# 
  3586  1F38                     	;# 
  3587  1F39                     	;# 
  3588  1F3A                     	;# 
  3589  1F3B                     	;# 
  3590  1F3C                     	;# 
  3591  1F3D                     	;# 
  3592  1F3E                     	;# 
  3593  1F3F                     	;# 
  3594  1F43                     	;# 
  3595  1F44                     	;# 
  3596  1F45                     	;# 
  3597  1F46                     	;# 
  3598  1F47                     	;# 
  3599  1F48                     	;# 
  3600  1F49                     	;# 
  3601  1F4A                     	;# 
  3602  1F4E                     	;# 
  3603  1F4F                     	;# 
  3604  1F50                     	;# 
  3605  1F51                     	;# 
  3606  1F52                     	;# 
  3607  1F53                     	;# 
  3608  1F54                     	;# 
  3609  1F55                     	;# 
  3610  1F59                     	;# 
  3611  1F5A                     	;# 
  3612  1F5B                     	;# 
  3613  1F5C                     	;# 
  3614  1F5D                     	;# 
  3615  1F64                     	;# 
  3616  1F65                     	;# 
  3617  1F66                     	;# 
  3618  1F67                     	;# 
  3619  1F68                     	;# 
  3620  1F69                     	;# 
  3621  1F6A                     	;# 
  3622  1F6B                     	;# 
  3623  1FE4                     	;# 
  3624  1FE5                     	;# 
  3625  1FE6                     	;# 
  3626  1FE7                     	;# 
  3627  1FE8                     	;# 
  3628  1FE8                     	;# 
  3629  1FE9                     	;# 
  3630  1FEA                     	;# 
  3631  1FEB                     	;# 
  3632  1FED                     	;# 
  3633  1FEE                     	;# 
  3634  1FEF                     	;# 
  3635  0000                     	;# 
  3636  0001                     	;# 
  3637  0002                     	;# 
  3638  0003                     	;# 
  3639  0004                     	;# 
  3640  0005                     	;# 
  3641  0006                     	;# 
  3642  0007                     	;# 
  3643  0008                     	;# 
  3644  0009                     	;# 
  3645  000A                     	;# 
  3646  000B                     	;# 
  3647  000C                     	;# 
  3648  000D                     	;# 
  3649  000E                     	;# 
  3650  000F                     	;# 
  3651  0010                     	;# 
  3652  0011                     	;# 
  3653  0012                     	;# 
  3654  0013                     	;# 
  3655  0014                     	;# 
  3656  0015                     	;# 
  3657  0016                     	;# 
  3658  0017                     	;# 
  3659  0018                     	;# 
  3660  0019                     	;# 
  3661  001A                     	;# 
  3662  001B                     	;# 
  3663  001C                     	;# 
  3664  001D                     	;# 
  3665  009B                     	;# 
  3666  009B                     	;# 
  3667  009C                     	;# 
  3668  009D                     	;# 
  3669  009E                     	;# 
  3670  009F                     	;# 
  3671  0119                     	;# 
  3672  0119                     	;# 
  3673  0119                     	;# 
  3674  011A                     	;# 
  3675  011A                     	;# 
  3676  011A                     	;# 
  3677  011B                     	;# 
  3678  011B                     	;# 
  3679  011B                     	;# 
  3680  011B                     	;# 
  3681  011B                     	;# 
  3682  011C                     	;# 
  3683  011C                     	;# 
  3684  011C                     	;# 
  3685  011D                     	;# 
  3686  011D                     	;# 
  3687  011D                     	;# 
  3688  011E                     	;# 
  3689  011E                     	;# 
  3690  011E                     	;# 
  3691  011F                     	;# 
  3692  011F                     	;# 
  3693  011F                     	;# 
  3694  011F                     	;# 
  3695  011F                     	;# 
  3696  018C                     	;# 
  3697  018D                     	;# 
  3698  018E                     	;# 
  3699  018F                     	;# 
  3700  0190                     	;# 
  3701  0191                     	;# 
  3702  0192                     	;# 
  3703  0196                     	;# 
  3704  0197                     	;# 
  3705  0198                     	;# 
  3706  0199                     	;# 
  3707  019A                     	;# 
  3708  019B                     	;# 
  3709  019C                     	;# 
  3710  020C                     	;# 
  3711  020C                     	;# 
  3712  020D                     	;# 
  3713  020E                     	;# 
  3714  020F                     	;# 
  3715  020F                     	;# 
  3716  0210                     	;# 
  3717  0210                     	;# 
  3718  0211                     	;# 
  3719  0211                     	;# 
  3720  028C                     	;# 
  3721  028C                     	;# 
  3722  028D                     	;# 
  3723  028D                     	;# 
  3724  028E                     	;# 
  3725  028F                     	;# 
  3726  0290                     	;# 
  3727  0291                     	;# 
  3728  030C                     	;# 
  3729  030C                     	;# 
  3730  030D                     	;# 
  3731  030E                     	;# 
  3732  030F                     	;# 
  3733  0310                     	;# 
  3734  0310                     	;# 
  3735  0311                     	;# 
  3736  0312                     	;# 
  3737  0313                     	;# 
  3738  0314                     	;# 
  3739  0314                     	;# 
  3740  0315                     	;# 
  3741  0316                     	;# 
  3742  0318                     	;# 
  3743  0318                     	;# 
  3744  0319                     	;# 
  3745  031A                     	;# 
  3746  031C                     	;# 
  3747  031C                     	;# 
  3748  031D                     	;# 
  3749  031E                     	;# 
  3750  038C                     	;# 
  3751  038C                     	;# 
  3752  038D                     	;# 
  3753  038E                     	;# 
  3754  058C                     	;# 
  3755  058C                     	;# 
  3756  058D                     	;# 
  3757  058E                     	;# 
  3758  058F                     	;# 
  3759  058F                     	;# 
  3760  0590                     	;# 
  3761  0591                     	;# 
  3762  0592                     	;# 
  3763  0593                     	;# 
  3764  059C                     	;# 
  3765  059C                     	;# 
  3766  059D                     	;# 
  3767  059D                     	;# 
  3768  059E                     	;# 
  3769  059F                     	;# 
  3770  060C                     	;# 
  3771  060D                     	;# 
  3772  060E                     	;# 
  3773  060F                     	;# 
  3774  0610                     	;# 
  3775  0611                     	;# 
  3776  0612                     	;# 
  3777  0613                     	;# 
  3778  0614                     	;# 
  3779  070C                     	;# 
  3780  070D                     	;# 
  3781  070E                     	;# 
  3782  070F                     	;# 
  3783  0710                     	;# 
  3784  0711                     	;# 
  3785  0712                     	;# 
  3786  0713                     	;# 
  3787  0716                     	;# 
  3788  0717                     	;# 
  3789  0718                     	;# 
  3790  0719                     	;# 
  3791  071A                     	;# 
  3792  071B                     	;# 
  3793  071C                     	;# 
  3794  071D                     	;# 
  3795  0796                     	;# 
  3796  0797                     	;# 
  3797  0798                     	;# 
  3798  0799                     	;# 
  3799  079A                     	;# 
  3800  079B                     	;# 
  3801  080C                     	;# 
  3802  080D                     	;# 
  3803  080E                     	;# 
  3804  080F                     	;# 
  3805  0810                     	;# 
  3806  0811                     	;# 
  3807  0812                     	;# 
  3808  0813                     	;# 
  3809  0814                     	;# 
  3810  081A                     	;# 
  3811  081A                     	;# 
  3812  081B                     	;# 
  3813  081C                     	;# 
  3814  081C                     	;# 
  3815  081D                     	;# 
  3816  081E                     	;# 
  3817  081F                     	;# 
  3818  088C                     	;# 
  3819  088D                     	;# 
  3820  088E                     	;# 
  3821  088F                     	;# 
  3822  0890                     	;# 
  3823  0891                     	;# 
  3824  0892                     	;# 
  3825  0893                     	;# 
  3826  0895                     	;# 
  3827  0896                     	;# 
  3828  090C                     	;# 
  3829  090E                     	;# 
  3830  090F                     	;# 
  3831  091F                     	;# 
  3832  098F                     	;# 
  3833  098F                     	;# 
  3834  0990                     	;# 
  3835  0991                     	;# 
  3836  0992                     	;# 
  3837  0993                     	;# 
  3838  0994                     	;# 
  3839  0995                     	;# 
  3840  0996                     	;# 
  3841  0997                     	;# 
  3842  0A19                     	;# 
  3843  0A19                     	;# 
  3844  0A1A                     	;# 
  3845  0A1A                     	;# 
  3846  0A1B                     	;# 
  3847  0A1B                     	;# 
  3848  0A1B                     	;# 
  3849  0A1C                     	;# 
  3850  0A1C                     	;# 
  3851  0A1D                     	;# 
  3852  0A1D                     	;# 
  3853  0A1E                     	;# 
  3854  0A1E                     	;# 
  3855  0A1F                     	;# 
  3856  0A1F                     	;# 
  3857  0A1F                     	;# 
  3858  1E0F                     	;# 
  3859  1E10                     	;# 
  3860  1E11                     	;# 
  3861  1E12                     	;# 
  3862  1E13                     	;# 
  3863  1E14                     	;# 
  3864  1E15                     	;# 
  3865  1E16                     	;# 
  3866  1E17                     	;# 
  3867  1E18                     	;# 
  3868  1E19                     	;# 
  3869  1E1A                     	;# 
  3870  1E1B                     	;# 
  3871  1E1C                     	;# 
  3872  1E1D                     	;# 
  3873  1E1E                     	;# 
  3874  1E1F                     	;# 
  3875  1E20                     	;# 
  3876  1E21                     	;# 
  3877  1E22                     	;# 
  3878  1E23                     	;# 
  3879  1E24                     	;# 
  3880  1E25                     	;# 
  3881  1E26                     	;# 
  3882  1E27                     	;# 
  3883  1E28                     	;# 
  3884  1E29                     	;# 
  3885  1E2A                     	;# 
  3886  1E2B                     	;# 
  3887  1E2C                     	;# 
  3888  1E2D                     	;# 
  3889  1E2E                     	;# 
  3890  1E2F                     	;# 
  3891  1E30                     	;# 
  3892  1E31                     	;# 
  3893  1E32                     	;# 
  3894  1E33                     	;# 
  3895  1E34                     	;# 
  3896  1E35                     	;# 
  3897  1E36                     	;# 
  3898  1E37                     	;# 
  3899  1E38                     	;# 
  3900  1E39                     	;# 
  3901  1E3A                     	;# 
  3902  1E3B                     	;# 
  3903  1E3C                     	;# 
  3904  1E3D                     	;# 
  3905  1E3E                     	;# 
  3906  1E3F                     	;# 
  3907  1E50                     	;# 
  3908  1E51                     	;# 
  3909  1E52                     	;# 
  3910  1E53                     	;# 
  3911  1E54                     	;# 
  3912  1E8F                     	;# 
  3913  1E90                     	;# 
  3914  1E91                     	;# 
  3915  1E92                     	;# 
  3916  1E93                     	;# 
  3917  1E9C                     	;# 
  3918  1EA1                     	;# 
  3919  1EA2                     	;# 
  3920  1EB1                     	;# 
  3921  1EBB                     	;# 
  3922  1EBC                     	;# 
  3923  1EBD                     	;# 
  3924  1EBE                     	;# 
  3925  1EC3                     	;# 
  3926  1EC5                     	;# 
  3927  1EC6                     	;# 
  3928  1EC7                     	;# 
  3929  1EC8                     	;# 
  3930  1EC9                     	;# 
  3931  1ECA                     	;# 
  3932  1ECB                     	;# 
  3933  1ECC                     	;# 
  3934  1ECD                     	;# 
  3935  1ECE                     	;# 
  3936  1F10                     	;# 
  3937  1F11                     	;# 
  3938  1F12                     	;# 
  3939  1F13                     	;# 
  3940  1F14                     	;# 
  3941  1F15                     	;# 
  3942  1F16                     	;# 
  3943  1F17                     	;# 
  3944  1F18                     	;# 
  3945  1F19                     	;# 
  3946  1F1A                     	;# 
  3947  1F1B                     	;# 
  3948  1F1C                     	;# 
  3949  1F1D                     	;# 
  3950  1F1E                     	;# 
  3951  1F1F                     	;# 
  3952  1F20                     	;# 
  3953  1F21                     	;# 
  3954  1F22                     	;# 
  3955  1F23                     	;# 
  3956  1F24                     	;# 
  3957  1F25                     	;# 
  3958  1F26                     	;# 
  3959  1F27                     	;# 
  3960  1F28                     	;# 
  3961  1F29                     	;# 
  3962  1F2A                     	;# 
  3963  1F2B                     	;# 
  3964  1F2C                     	;# 
  3965  1F2D                     	;# 
  3966  1F2E                     	;# 
  3967  1F2F                     	;# 
  3968  1F30                     	;# 
  3969  1F31                     	;# 
  3970  1F32                     	;# 
  3971  1F38                     	;# 
  3972  1F39                     	;# 
  3973  1F3A                     	;# 
  3974  1F3B                     	;# 
  3975  1F3C                     	;# 
  3976  1F3D                     	;# 
  3977  1F3E                     	;# 
  3978  1F3F                     	;# 
  3979  1F43                     	;# 
  3980  1F44                     	;# 
  3981  1F45                     	;# 
  3982  1F46                     	;# 
  3983  1F47                     	;# 
  3984  1F48                     	;# 
  3985  1F49                     	;# 
  3986  1F4A                     	;# 
  3987  1F4E                     	;# 
  3988  1F4F                     	;# 
  3989  1F50                     	;# 
  3990  1F51                     	;# 
  3991  1F52                     	;# 
  3992  1F53                     	;# 
  3993  1F54                     	;# 
  3994  1F55                     	;# 
  3995  1F59                     	;# 
  3996  1F5A                     	;# 
  3997  1F5B                     	;# 
  3998  1F5C                     	;# 
  3999  1F5D                     	;# 
  4000  1F64                     	;# 
  4001  1F65                     	;# 
  4002  1F66                     	;# 
  4003  1F67                     	;# 
  4004  1F68                     	;# 
  4005  1F69                     	;# 
  4006  1F6A                     	;# 
  4007  1F6B                     	;# 
  4008  1FE4                     	;# 
  4009  1FE5                     	;# 
  4010  1FE6                     	;# 
  4011  1FE7                     	;# 
  4012  1FE8                     	;# 
  4013  1FE8                     	;# 
  4014  1FE9                     	;# 
  4015  1FEA                     	;# 
  4016  1FEB                     	;# 
  4017  1FED                     	;# 
  4018  1FEE                     	;# 
  4019  1FEF                     	;# 
  4020  0000                     	;# 
  4021  0001                     	;# 
  4022  0002                     	;# 
  4023  0003                     	;# 
  4024  0004                     	;# 
  4025  0005                     	;# 
  4026  0006                     	;# 
  4027  0007                     	;# 
  4028  0008                     	;# 
  4029  0009                     	;# 
  4030  000A                     	;# 
  4031  000B                     	;# 
  4032  000C                     	;# 
  4033  000D                     	;# 
  4034  000E                     	;# 
  4035  000F                     	;# 
  4036  0010                     	;# 
  4037  0011                     	;# 
  4038  0012                     	;# 
  4039  0013                     	;# 
  4040  0014                     	;# 
  4041  0015                     	;# 
  4042  0016                     	;# 
  4043  0017                     	;# 
  4044  0018                     	;# 
  4045  0019                     	;# 
  4046  001A                     	;# 
  4047  001B                     	;# 
  4048  001C                     	;# 
  4049  001D                     	;# 
  4050  009B                     	;# 
  4051  009B                     	;# 
  4052  009C                     	;# 
  4053  009D                     	;# 
  4054  009E                     	;# 
  4055  009F                     	;# 
  4056  0119                     	;# 
  4057  0119                     	;# 
  4058  0119                     	;# 
  4059  011A                     	;# 
  4060  011A                     	;# 
  4061  011A                     	;# 
  4062  011B                     	;# 
  4063  011B                     	;# 
  4064  011B                     	;# 
  4065  011B                     	;# 
  4066  011B                     	;# 
  4067  011C                     	;# 
  4068  011C                     	;# 
  4069  011C                     	;# 
  4070  011D                     	;# 
  4071  011D                     	;# 
  4072  011D                     	;# 
  4073  011E                     	;# 
  4074  011E                     	;# 
  4075  011E                     	;# 
  4076  011F                     	;# 
  4077  011F                     	;# 
  4078  011F                     	;# 
  4079  011F                     	;# 
  4080  011F                     	;# 
  4081  018C                     	;# 
  4082  018D                     	;# 
  4083  018E                     	;# 
  4084  018F                     	;# 
  4085  0190                     	;# 
  4086  0191                     	;# 
  4087  0192                     	;# 
  4088  0196                     	;# 
  4089  0197                     	;# 
  4090  0198                     	;# 
  4091  0199                     	;# 
  4092  019A                     	;# 
  4093  019B                     	;# 
  4094  019C                     	;# 
  4095  020C                     	;# 
  4096  020C                     	;# 
  4097  020D                     	;# 
  4098  020E                     	;# 
  4099  020F                     	;# 
  4100  020F                     	;# 
  4101  0210                     	;# 
  4102  0210                     	;# 
  4103  0211                     	;# 
  4104  0211                     	;# 
  4105  028C                     	;# 
  4106  028C                     	;# 
  4107  028D                     	;# 
  4108  028D                     	;# 
  4109  028E                     	;# 
  4110  028F                     	;# 
  4111  0290                     	;# 
  4112  0291                     	;# 
  4113  030C                     	;# 
  4114  030C                     	;# 
  4115  030D                     	;# 
  4116  030E                     	;# 
  4117  030F                     	;# 
  4118  0310                     	;# 
  4119  0310                     	;# 
  4120  0311                     	;# 
  4121  0312                     	;# 
  4122  0313                     	;# 
  4123  0314                     	;# 
  4124  0314                     	;# 
  4125  0315                     	;# 
  4126  0316                     	;# 
  4127  0318                     	;# 
  4128  0318                     	;# 
  4129  0319                     	;# 
  4130  031A                     	;# 
  4131  031C                     	;# 
  4132  031C                     	;# 
  4133  031D                     	;# 
  4134  031E                     	;# 
  4135  038C                     	;# 
  4136  038C                     	;# 
  4137  038D                     	;# 
  4138  038E                     	;# 
  4139  058C                     	;# 
  4140  058C                     	;# 
  4141  058D                     	;# 
  4142  058E                     	;# 
  4143  058F                     	;# 
  4144  058F                     	;# 
  4145  0590                     	;# 
  4146  0591                     	;# 
  4147  0592                     	;# 
  4148  0593                     	;# 
  4149  059C                     	;# 
  4150  059C                     	;# 
  4151  059D                     	;# 
  4152  059D                     	;# 
  4153  059E                     	;# 
  4154  059F                     	;# 
  4155  060C                     	;# 
  4156  060D                     	;# 
  4157  060E                     	;# 
  4158  060F                     	;# 
  4159  0610                     	;# 
  4160  0611                     	;# 
  4161  0612                     	;# 
  4162  0613                     	;# 
  4163  0614                     	;# 
  4164  070C                     	;# 
  4165  070D                     	;# 
  4166  070E                     	;# 
  4167  070F                     	;# 
  4168  0710                     	;# 
  4169  0711                     	;# 
  4170  0712                     	;# 
  4171  0713                     	;# 
  4172  0716                     	;# 
  4173  0717                     	;# 
  4174  0718                     	;# 
  4175  0719                     	;# 
  4176  071A                     	;# 
  4177  071B                     	;# 
  4178  071C                     	;# 
  4179  071D                     	;# 
  4180  0796                     	;# 
  4181  0797                     	;# 
  4182  0798                     	;# 
  4183  0799                     	;# 
  4184  079A                     	;# 
  4185  079B                     	;# 
  4186  080C                     	;# 
  4187  080D                     	;# 
  4188  080E                     	;# 
  4189  080F                     	;# 
  4190  0810                     	;# 
  4191  0811                     	;# 
  4192  0812                     	;# 
  4193  0813                     	;# 
  4194  0814                     	;# 
  4195  081A                     	;# 
  4196  081A                     	;# 
  4197  081B                     	;# 
  4198  081C                     	;# 
  4199  081C                     	;# 
  4200  081D                     	;# 
  4201  081E                     	;# 
  4202  081F                     	;# 
  4203  088C                     	;# 
  4204  088D                     	;# 
  4205  088E                     	;# 
  4206  088F                     	;# 
  4207  0890                     	;# 
  4208  0891                     	;# 
  4209  0892                     	;# 
  4210  0893                     	;# 
  4211  0895                     	;# 
  4212  0896                     	;# 
  4213  090C                     	;# 
  4214  090E                     	;# 
  4215  090F                     	;# 
  4216  091F                     	;# 
  4217  098F                     	;# 
  4218  098F                     	;# 
  4219  0990                     	;# 
  4220  0991                     	;# 
  4221  0992                     	;# 
  4222  0993                     	;# 
  4223  0994                     	;# 
  4224  0995                     	;# 
  4225  0996                     	;# 
  4226  0997                     	;# 
  4227  0A19                     	;# 
  4228  0A19                     	;# 
  4229  0A1A                     	;# 
  4230  0A1A                     	;# 
  4231  0A1B                     	;# 
  4232  0A1B                     	;# 
  4233  0A1B                     	;# 
  4234  0A1C                     	;# 
  4235  0A1C                     	;# 
  4236  0A1D                     	;# 
  4237  0A1D                     	;# 
  4238  0A1E                     	;# 
  4239  0A1E                     	;# 
  4240  0A1F                     	;# 
  4241  0A1F                     	;# 
  4242  0A1F                     	;# 
  4243  1E0F                     	;# 
  4244  1E10                     	;# 
  4245  1E11                     	;# 
  4246  1E12                     	;# 
  4247  1E13                     	;# 
  4248  1E14                     	;# 
  4249  1E15                     	;# 
  4250  1E16                     	;# 
  4251  1E17                     	;# 
  4252  1E18                     	;# 
  4253  1E19                     	;# 
  4254  1E1A                     	;# 
  4255  1E1B                     	;# 
  4256  1E1C                     	;# 
  4257  1E1D                     	;# 
  4258  1E1E                     	;# 
  4259  1E1F                     	;# 
  4260  1E20                     	;# 
  4261  1E21                     	;# 
  4262  1E22                     	;# 
  4263  1E23                     	;# 
  4264  1E24                     	;# 
  4265  1E25                     	;# 
  4266  1E26                     	;# 
  4267  1E27                     	;# 
  4268  1E28                     	;# 
  4269  1E29                     	;# 
  4270  1E2A                     	;# 
  4271  1E2B                     	;# 
  4272  1E2C                     	;# 
  4273  1E2D                     	;# 
  4274  1E2E                     	;# 
  4275  1E2F                     	;# 
  4276  1E30                     	;# 
  4277  1E31                     	;# 
  4278  1E32                     	;# 
  4279  1E33                     	;# 
  4280  1E34                     	;# 
  4281  1E35                     	;# 
  4282  1E36                     	;# 
  4283  1E37                     	;# 
  4284  1E38                     	;# 
  4285  1E39                     	;# 
  4286  1E3A                     	;# 
  4287  1E3B                     	;# 
  4288  1E3C                     	;# 
  4289  1E3D                     	;# 
  4290  1E3E                     	;# 
  4291  1E3F                     	;# 
  4292  1E50                     	;# 
  4293  1E51                     	;# 
  4294  1E52                     	;# 
  4295  1E53                     	;# 
  4296  1E54                     	;# 
  4297  1E8F                     	;# 
  4298  1E90                     	;# 
  4299  1E91                     	;# 
  4300  1E92                     	;# 
  4301  1E93                     	;# 
  4302  1E9C                     	;# 
  4303  1EA1                     	;# 
  4304  1EA2                     	;# 
  4305  1EB1                     	;# 
  4306  1EBB                     	;# 
  4307  1EBC                     	;# 
  4308  1EBD                     	;# 
  4309  1EBE                     	;# 
  4310  1EC3                     	;# 
  4311  1EC5                     	;# 
  4312  1EC6                     	;# 
  4313  1EC7                     	;# 
  4314  1EC8                     	;# 
  4315  1EC9                     	;# 
  4316  1ECA                     	;# 
  4317  1ECB                     	;# 
  4318  1ECC                     	;# 
  4319  1ECD                     	;# 
  4320  1ECE                     	;# 
  4321  1F10                     	;# 
  4322  1F11                     	;# 
  4323  1F12                     	;# 
  4324  1F13                     	;# 
  4325  1F14                     	;# 
  4326  1F15                     	;# 
  4327  1F16                     	;# 
  4328  1F17                     	;# 
  4329  1F18                     	;# 
  4330  1F19                     	;# 
  4331  1F1A                     	;# 
  4332  1F1B                     	;# 
  4333  1F1C                     	;# 
  4334  1F1D                     	;# 
  4335  1F1E                     	;# 
  4336  1F1F                     	;# 
  4337  1F20                     	;# 
  4338  1F21                     	;# 
  4339  1F22                     	;# 
  4340  1F23                     	;# 
  4341  1F24                     	;# 
  4342  1F25                     	;# 
  4343  1F26                     	;# 
  4344  1F27                     	;# 
  4345  1F28                     	;# 
  4346  1F29                     	;# 
  4347  1F2A                     	;# 
  4348  1F2B                     	;# 
  4349  1F2C                     	;# 
  4350  1F2D                     	;# 
  4351  1F2E                     	;# 
  4352  1F2F                     	;# 
  4353  1F30                     	;# 
  4354  1F31                     	;# 
  4355  1F32                     	;# 
  4356  1F38                     	;# 
  4357  1F39                     	;# 
  4358  1F3A                     	;# 
  4359  1F3B                     	;# 
  4360  1F3C                     	;# 
  4361  1F3D                     	;# 
  4362  1F3E                     	;# 
  4363  1F3F                     	;# 
  4364  1F43                     	;# 
  4365  1F44                     	;# 
  4366  1F45                     	;# 
  4367  1F46                     	;# 
  4368  1F47                     	;# 
  4369  1F48                     	;# 
  4370  1F49                     	;# 
  4371  1F4A                     	;# 
  4372  1F4E                     	;# 
  4373  1F4F                     	;# 
  4374  1F50                     	;# 
  4375  1F51                     	;# 
  4376  1F52                     	;# 
  4377  1F53                     	;# 
  4378  1F54                     	;# 
  4379  1F55                     	;# 
  4380  1F59                     	;# 
  4381  1F5A                     	;# 
  4382  1F5B                     	;# 
  4383  1F5C                     	;# 
  4384  1F5D                     	;# 
  4385  1F64                     	;# 
  4386  1F65                     	;# 
  4387  1F66                     	;# 
  4388  1F67                     	;# 
  4389  1F68                     	;# 
  4390  1F69                     	;# 
  4391  1F6A                     	;# 
  4392  1F6B                     	;# 
  4393  1FE4                     	;# 
  4394  1FE5                     	;# 
  4395  1FE6                     	;# 
  4396  1FE7                     	;# 
  4397  1FE8                     	;# 
  4398  1FE8                     	;# 
  4399  1FE9                     	;# 
  4400  1FEA                     	;# 
  4401  1FEB                     	;# 
  4402  1FED                     	;# 
  4403  1FEE                     	;# 
  4404  1FEF                     	;# 
  4405  0000                     	;# 
  4406  0001                     	;# 
  4407  0002                     	;# 
  4408  0003                     	;# 
  4409  0004                     	;# 
  4410  0005                     	;# 
  4411  0006                     	;# 
  4412  0007                     	;# 
  4413  0008                     	;# 
  4414  0009                     	;# 
  4415  000A                     	;# 
  4416  000B                     	;# 
  4417  000C                     	;# 
  4418  000D                     	;# 
  4419  000E                     	;# 
  4420  000F                     	;# 
  4421  0010                     	;# 
  4422  0011                     	;# 
  4423  0012                     	;# 
  4424  0013                     	;# 
  4425  0014                     	;# 
  4426  0015                     	;# 
  4427  0016                     	;# 
  4428  0017                     	;# 
  4429  0018                     	;# 
  4430  0019                     	;# 
  4431  001A                     	;# 
  4432  001B                     	;# 
  4433  001C                     	;# 
  4434  001D                     	;# 
  4435  009B                     	;# 
  4436  009B                     	;# 
  4437  009C                     	;# 
  4438  009D                     	;# 
  4439  009E                     	;# 
  4440  009F                     	;# 
  4441  0119                     	;# 
  4442  0119                     	;# 
  4443  0119                     	;# 
  4444  011A                     	;# 
  4445  011A                     	;# 
  4446  011A                     	;# 
  4447  011B                     	;# 
  4448  011B                     	;# 
  4449  011B                     	;# 
  4450  011B                     	;# 
  4451  011B                     	;# 
  4452  011C                     	;# 
  4453  011C                     	;# 
  4454  011C                     	;# 
  4455  011D                     	;# 
  4456  011D                     	;# 
  4457  011D                     	;# 
  4458  011E                     	;# 
  4459  011E                     	;# 
  4460  011E                     	;# 
  4461  011F                     	;# 
  4462  011F                     	;# 
  4463  011F                     	;# 
  4464  011F                     	;# 
  4465  011F                     	;# 
  4466  018C                     	;# 
  4467  018D                     	;# 
  4468  018E                     	;# 
  4469  018F                     	;# 
  4470  0190                     	;# 
  4471  0191                     	;# 
  4472  0192                     	;# 
  4473  0196                     	;# 
  4474  0197                     	;# 
  4475  0198                     	;# 
  4476  0199                     	;# 
  4477  019A                     	;# 
  4478  019B                     	;# 
  4479  019C                     	;# 
  4480  020C                     	;# 
  4481  020C                     	;# 
  4482  020D                     	;# 
  4483  020E                     	;# 
  4484  020F                     	;# 
  4485  020F                     	;# 
  4486  0210                     	;# 
  4487  0210                     	;# 
  4488  0211                     	;# 
  4489  0211                     	;# 
  4490  028C                     	;# 
  4491  028C                     	;# 
  4492  028D                     	;# 
  4493  028D                     	;# 
  4494  028E                     	;# 
  4495  028F                     	;# 
  4496  0290                     	;# 
  4497  0291                     	;# 
  4498  030C                     	;# 
  4499  030C                     	;# 
  4500  030D                     	;# 
  4501  030E                     	;# 
  4502  030F                     	;# 
  4503  0310                     	;# 
  4504  0310                     	;# 
  4505  0311                     	;# 
  4506  0312                     	;# 
  4507  0313                     	;# 
  4508  0314                     	;# 
  4509  0314                     	;# 
  4510  0315                     	;# 
  4511  0316                     	;# 
  4512  0318                     	;# 
  4513  0318                     	;# 
  4514  0319                     	;# 
  4515  031A                     	;# 
  4516  031C                     	;# 
  4517  031C                     	;# 
  4518  031D                     	;# 
  4519  031E                     	;# 
  4520  038C                     	;# 
  4521  038C                     	;# 
  4522  038D                     	;# 
  4523  038E                     	;# 
  4524  058C                     	;# 
  4525  058C                     	;# 
  4526  058D                     	;# 
  4527  058E                     	;# 
  4528  058F                     	;# 
  4529  058F                     	;# 
  4530  0590                     	;# 
  4531  0591                     	;# 
  4532  0592                     	;# 
  4533  0593                     	;# 
  4534  059C                     	;# 
  4535  059C                     	;# 
  4536  059D                     	;# 
  4537  059D                     	;# 
  4538  059E                     	;# 
  4539  059F                     	;# 
  4540  060C                     	;# 
  4541  060D                     	;# 
  4542  060E                     	;# 
  4543  060F                     	;# 
  4544  0610                     	;# 
  4545  0611                     	;# 
  4546  0612                     	;# 
  4547  0613                     	;# 
  4548  0614                     	;# 
  4549  070C                     	;# 
  4550  070D                     	;# 
  4551  070E                     	;# 
  4552  070F                     	;# 
  4553  0710                     	;# 
  4554  0711                     	;# 
  4555  0712                     	;# 
  4556  0713                     	;# 
  4557  0716                     	;# 
  4558  0717                     	;# 
  4559  0718                     	;# 
  4560  0719                     	;# 
  4561  071A                     	;# 
  4562  071B                     	;# 
  4563  071C                     	;# 
  4564  071D                     	;# 
  4565  0796                     	;# 
  4566  0797                     	;# 
  4567  0798                     	;# 
  4568  0799                     	;# 
  4569  079A                     	;# 
  4570  079B                     	;# 
  4571  080C                     	;# 
  4572  080D                     	;# 
  4573  080E                     	;# 
  4574  080F                     	;# 
  4575  0810                     	;# 
  4576  0811                     	;# 
  4577  0812                     	;# 
  4578  0813                     	;# 
  4579  0814                     	;# 
  4580  081A                     	;# 
  4581  081A                     	;# 
  4582  081B                     	;# 
  4583  081C                     	;# 
  4584  081C                     	;# 
  4585  081D                     	;# 
  4586  081E                     	;# 
  4587  081F                     	;# 
  4588  088C                     	;# 
  4589  088D                     	;# 
  4590  088E                     	;# 
  4591  088F                     	;# 
  4592  0890                     	;# 
  4593  0891                     	;# 
  4594  0892                     	;# 
  4595  0893                     	;# 
  4596  0895                     	;# 
  4597  0896                     	;# 
  4598  090C                     	;# 
  4599  090E                     	;# 
  4600  090F                     	;# 
  4601  091F                     	;# 
  4602  098F                     	;# 
  4603  098F                     	;# 
  4604  0990                     	;# 
  4605  0991                     	;# 
  4606  0992                     	;# 
  4607  0993                     	;# 
  4608  0994                     	;# 
  4609  0995                     	;# 
  4610  0996                     	;# 
  4611  0997                     	;# 
  4612  0A19                     	;# 
  4613  0A19                     	;# 
  4614  0A1A                     	;# 
  4615  0A1A                     	;# 
  4616  0A1B                     	;# 
  4617  0A1B                     	;# 
  4618  0A1B                     	;# 
  4619  0A1C                     	;# 
  4620  0A1C                     	;# 
  4621  0A1D                     	;# 
  4622  0A1D                     	;# 
  4623  0A1E                     	;# 
  4624  0A1E                     	;# 
  4625  0A1F                     	;# 
  4626  0A1F                     	;# 
  4627  0A1F                     	;# 
  4628  1E0F                     	;# 
  4629  1E10                     	;# 
  4630  1E11                     	;# 
  4631  1E12                     	;# 
  4632  1E13                     	;# 
  4633  1E14                     	;# 
  4634  1E15                     	;# 
  4635  1E16                     	;# 
  4636  1E17                     	;# 
  4637  1E18                     	;# 
  4638  1E19                     	;# 
  4639  1E1A                     	;# 
  4640  1E1B                     	;# 
  4641  1E1C                     	;# 
  4642  1E1D                     	;# 
  4643  1E1E                     	;# 
  4644  1E1F                     	;# 
  4645  1E20                     	;# 
  4646  1E21                     	;# 
  4647  1E22                     	;# 
  4648  1E23                     	;# 
  4649  1E24                     	;# 
  4650  1E25                     	;# 
  4651  1E26                     	;# 
  4652  1E27                     	;# 
  4653  1E28                     	;# 
  4654  1E29                     	;# 
  4655  1E2A                     	;# 
  4656  1E2B                     	;# 
  4657  1E2C                     	;# 
  4658  1E2D                     	;# 
  4659  1E2E                     	;# 
  4660  1E2F                     	;# 
  4661  1E30                     	;# 
  4662  1E31                     	;# 
  4663  1E32                     	;# 
  4664  1E33                     	;# 
  4665  1E34                     	;# 
  4666  1E35                     	;# 
  4667  1E36                     	;# 
  4668  1E37                     	;# 
  4669  1E38                     	;# 
  4670  1E39                     	;# 
  4671  1E3A                     	;# 
  4672  1E3B                     	;# 
  4673  1E3C                     	;# 
  4674  1E3D                     	;# 
  4675  1E3E                     	;# 
  4676  1E3F                     	;# 
  4677  1E50                     	;# 
  4678  1E51                     	;# 
  4679  1E52                     	;# 
  4680  1E53                     	;# 
  4681  1E54                     	;# 
  4682  1E8F                     	;# 
  4683  1E90                     	;# 
  4684  1E91                     	;# 
  4685  1E92                     	;# 
  4686  1E93                     	;# 
  4687  1E9C                     	;# 
  4688  1EA1                     	;# 
  4689  1EA2                     	;# 
  4690  1EB1                     	;# 
  4691  1EBB                     	;# 
  4692  1EBC                     	;# 
  4693  1EBD                     	;# 
  4694  1EBE                     	;# 
  4695  1EC3                     	;# 
  4696  1EC5                     	;# 
  4697  1EC6                     	;# 
  4698  1EC7                     	;# 
  4699  1EC8                     	;# 
  4700  1EC9                     	;# 
  4701  1ECA                     	;# 
  4702  1ECB                     	;# 
  4703  1ECC                     	;# 
  4704  1ECD                     	;# 
  4705  1ECE                     	;# 
  4706  1F10                     	;# 
  4707  1F11                     	;# 
  4708  1F12                     	;# 
  4709  1F13                     	;# 
  4710  1F14                     	;# 
  4711  1F15                     	;# 
  4712  1F16                     	;# 
  4713  1F17                     	;# 
  4714  1F18                     	;# 
  4715  1F19                     	;# 
  4716  1F1A                     	;# 
  4717  1F1B                     	;# 
  4718  1F1C                     	;# 
  4719  1F1D                     	;# 
  4720  1F1E                     	;# 
  4721  1F1F                     	;# 
  4722  1F20                     	;# 
  4723  1F21                     	;# 
  4724  1F22                     	;# 
  4725  1F23                     	;# 
  4726  1F24                     	;# 
  4727  1F25                     	;# 
  4728  1F26                     	;# 
  4729  1F27                     	;# 
  4730  1F28                     	;# 
  4731  1F29                     	;# 
  4732  1F2A                     	;# 
  4733  1F2B                     	;# 
  4734  1F2C                     	;# 
  4735  1F2D                     	;# 
  4736  1F2E                     	;# 
  4737  1F2F                     	;# 
  4738  1F30                     	;# 
  4739  1F31                     	;# 
  4740  1F32                     	;# 
  4741  1F38                     	;# 
  4742  1F39                     	;# 
  4743  1F3A                     	;# 
  4744  1F3B                     	;# 
  4745  1F3C                     	;# 
  4746  1F3D                     	;# 
  4747  1F3E                     	;# 
  4748  1F3F                     	;# 
  4749  1F43                     	;# 
  4750  1F44                     	;# 
  4751  1F45                     	;# 
  4752  1F46                     	;# 
  4753  1F47                     	;# 
  4754  1F48                     	;# 
  4755  1F49                     	;# 
  4756  1F4A                     	;# 
  4757  1F4E                     	;# 
  4758  1F4F                     	;# 
  4759  1F50                     	;# 
  4760  1F51                     	;# 
  4761  1F52                     	;# 
  4762  1F53                     	;# 
  4763  1F54                     	;# 
  4764  1F55                     	;# 
  4765  1F59                     	;# 
  4766  1F5A                     	;# 
  4767  1F5B                     	;# 
  4768  1F5C                     	;# 
  4769  1F5D                     	;# 
  4770  1F64                     	;# 
  4771  1F65                     	;# 
  4772  1F66                     	;# 
  4773  1F67                     	;# 
  4774  1F68                     	;# 
  4775  1F69                     	;# 
  4776  1F6A                     	;# 
  4777  1F6B                     	;# 
  4778  1FE4                     	;# 
  4779  1FE5                     	;# 
  4780  1FE6                     	;# 
  4781  1FE7                     	;# 
  4782  1FE8                     	;# 
  4783  1FE8                     	;# 
  4784  1FE9                     	;# 
  4785  1FEA                     	;# 
  4786  1FEB                     	;# 
  4787  1FED                     	;# 
  4788  1FEE                     	;# 
  4789  1FEF                     	;# 
  4790  0000                     	;# 
  4791  0001                     	;# 
  4792  0002                     	;# 
  4793  0003                     	;# 
  4794  0004                     	;# 
  4795  0005                     	;# 
  4796  0006                     	;# 
  4797  0007                     	;# 
  4798  0008                     	;# 
  4799  0009                     	;# 
  4800  000A                     	;# 
  4801  000B                     	;# 
  4802  000C                     	;# 
  4803  000D                     	;# 
  4804  000E                     	;# 
  4805  000F                     	;# 
  4806  0010                     	;# 
  4807  0011                     	;# 
  4808  0012                     	;# 
  4809  0013                     	;# 
  4810  0014                     	;# 
  4811  0015                     	;# 
  4812  0016                     	;# 
  4813  0017                     	;# 
  4814  0018                     	;# 
  4815  0019                     	;# 
  4816  001A                     	;# 
  4817  001B                     	;# 
  4818  001C                     	;# 
  4819  001D                     	;# 
  4820  009B                     	;# 
  4821  009B                     	;# 
  4822  009C                     	;# 
  4823  009D                     	;# 
  4824  009E                     	;# 
  4825  009F                     	;# 
  4826  0119                     	;# 
  4827  0119                     	;# 
  4828  0119                     	;# 
  4829  011A                     	;# 
  4830  011A                     	;# 
  4831  011A                     	;# 
  4832  011B                     	;# 
  4833  011B                     	;# 
  4834  011B                     	;# 
  4835  011B                     	;# 
  4836  011B                     	;# 
  4837  011C                     	;# 
  4838  011C                     	;# 
  4839  011C                     	;# 
  4840  011D                     	;# 
  4841  011D                     	;# 
  4842  011D                     	;# 
  4843  011E                     	;# 
  4844  011E                     	;# 
  4845  011E                     	;# 
  4846  011F                     	;# 
  4847  011F                     	;# 
  4848  011F                     	;# 
  4849  011F                     	;# 
  4850  011F                     	;# 
  4851  018C                     	;# 
  4852  018D                     	;# 
  4853  018E                     	;# 
  4854  018F                     	;# 
  4855  0190                     	;# 
  4856  0191                     	;# 
  4857  0192                     	;# 
  4858  0196                     	;# 
  4859  0197                     	;# 
  4860  0198                     	;# 
  4861  0199                     	;# 
  4862  019A                     	;# 
  4863  019B                     	;# 
  4864  019C                     	;# 
  4865  020C                     	;# 
  4866  020C                     	;# 
  4867  020D                     	;# 
  4868  020E                     	;# 
  4869  020F                     	;# 
  4870  020F                     	;# 
  4871  0210                     	;# 
  4872  0210                     	;# 
  4873  0211                     	;# 
  4874  0211                     	;# 
  4875  028C                     	;# 
  4876  028C                     	;# 
  4877  028D                     	;# 
  4878  028D                     	;# 
  4879  028E                     	;# 
  4880  028F                     	;# 
  4881  0290                     	;# 
  4882  0291                     	;# 
  4883  030C                     	;# 
  4884  030C                     	;# 
  4885  030D                     	;# 
  4886  030E                     	;# 
  4887  030F                     	;# 
  4888  0310                     	;# 
  4889  0310                     	;# 
  4890  0311                     	;# 
  4891  0312                     	;# 
  4892  0313                     	;# 
  4893  0314                     	;# 
  4894  0314                     	;# 
  4895  0315                     	;# 
  4896  0316                     	;# 
  4897  0318                     	;# 
  4898  0318                     	;# 
  4899  0319                     	;# 
  4900  031A                     	;# 
  4901  031C                     	;# 
  4902  031C                     	;# 
  4903  031D                     	;# 
  4904  031E                     	;# 
  4905  038C                     	;# 
  4906  038C                     	;# 
  4907  038D                     	;# 
  4908  038E                     	;# 
  4909  058C                     	;# 
  4910  058C                     	;# 
  4911  058D                     	;# 
  4912  058E                     	;# 
  4913  058F                     	;# 
  4914  058F                     	;# 
  4915  0590                     	;# 
  4916  0591                     	;# 
  4917  0592                     	;# 
  4918  0593                     	;# 
  4919  059C                     	;# 
  4920  059C                     	;# 
  4921  059D                     	;# 
  4922  059D                     	;# 
  4923  059E                     	;# 
  4924  059F                     	;# 
  4925  060C                     	;# 
  4926  060D                     	;# 
  4927  060E                     	;# 
  4928  060F                     	;# 
  4929  0610                     	;# 
  4930  0611                     	;# 
  4931  0612                     	;# 
  4932  0613                     	;# 
  4933  0614                     	;# 
  4934  070C                     	;# 
  4935  070D                     	;# 
  4936  070E                     	;# 
  4937  070F                     	;# 
  4938  0710                     	;# 
  4939  0711                     	;# 
  4940  0712                     	;# 
  4941  0713                     	;# 
  4942  0716                     	;# 
  4943  0717                     	;# 
  4944  0718                     	;# 
  4945  0719                     	;# 
  4946  071A                     	;# 
  4947  071B                     	;# 
  4948  071C                     	;# 
  4949  071D                     	;# 
  4950  0796                     	;# 
  4951  0797                     	;# 
  4952  0798                     	;# 
  4953  0799                     	;# 
  4954  079A                     	;# 
  4955  079B                     	;# 
  4956  080C                     	;# 
  4957  080D                     	;# 
  4958  080E                     	;# 
  4959  080F                     	;# 
  4960  0810                     	;# 
  4961  0811                     	;# 
  4962  0812                     	;# 
  4963  0813                     	;# 
  4964  0814                     	;# 
  4965  081A                     	;# 
  4966  081A                     	;# 
  4967  081B                     	;# 
  4968  081C                     	;# 
  4969  081C                     	;# 
  4970  081D                     	;# 
  4971  081E                     	;# 
  4972  081F                     	;# 
  4973  088C                     	;# 
  4974  088D                     	;# 
  4975  088E                     	;# 
  4976  088F                     	;# 
  4977  0890                     	;# 
  4978  0891                     	;# 
  4979  0892                     	;# 
  4980  0893                     	;# 
  4981  0895                     	;# 
  4982  0896                     	;# 
  4983  090C                     	;# 
  4984  090E                     	;# 
  4985  090F                     	;# 
  4986  091F                     	;# 
  4987  098F                     	;# 
  4988  098F                     	;# 
  4989  0990                     	;# 
  4990  0991                     	;# 
  4991  0992                     	;# 
  4992  0993                     	;# 
  4993  0994                     	;# 
  4994  0995                     	;# 
  4995  0996                     	;# 
  4996  0997                     	;# 
  4997  0A19                     	;# 
  4998  0A19                     	;# 
  4999  0A1A                     	;# 
  5000  0A1A                     	;# 
  5001  0A1B                     	;# 
  5002  0A1B                     	;# 
  5003  0A1B                     	;# 
  5004  0A1C                     	;# 
  5005  0A1C                     	;# 
  5006  0A1D                     	;# 
  5007  0A1D                     	;# 
  5008  0A1E                     	;# 
  5009  0A1E                     	;# 
  5010  0A1F                     	;# 
  5011  0A1F                     	;# 
  5012  0A1F                     	;# 
  5013  1E0F                     	;# 
  5014  1E10                     	;# 
  5015  1E11                     	;# 
  5016  1E12                     	;# 
  5017  1E13                     	;# 
  5018  1E14                     	;# 
  5019  1E15                     	;# 
  5020  1E16                     	;# 
  5021  1E17                     	;# 
  5022  1E18                     	;# 
  5023  1E19                     	;# 
  5024  1E1A                     	;# 
  5025  1E1B                     	;# 
  5026  1E1C                     	;# 
  5027  1E1D                     	;# 
  5028  1E1E                     	;# 
  5029  1E1F                     	;# 
  5030  1E20                     	;# 
  5031  1E21                     	;# 
  5032  1E22                     	;# 
  5033  1E23                     	;# 
  5034  1E24                     	;# 
  5035  1E25                     	;# 
  5036  1E26                     	;# 
  5037  1E27                     	;# 
  5038  1E28                     	;# 
  5039  1E29                     	;# 
  5040  1E2A                     	;# 
  5041  1E2B                     	;# 
  5042  1E2C                     	;# 
  5043  1E2D                     	;# 
  5044  1E2E                     	;# 
  5045  1E2F                     	;# 
  5046  1E30                     	;# 
  5047  1E31                     	;# 
  5048  1E32                     	;# 
  5049  1E33                     	;# 
  5050  1E34                     	;# 
  5051  1E35                     	;# 
  5052  1E36                     	;# 
  5053  1E37                     	;# 
  5054  1E38                     	;# 
  5055  1E39                     	;# 
  5056  1E3A                     	;# 
  5057  1E3B                     	;# 
  5058  1E3C                     	;# 
  5059  1E3D                     	;# 
  5060  1E3E                     	;# 
  5061  1E3F                     	;# 
  5062  1E50                     	;# 
  5063  1E51                     	;# 
  5064  1E52                     	;# 
  5065  1E53                     	;# 
  5066  1E54                     	;# 
  5067  1E8F                     	;# 
  5068  1E90                     	;# 
  5069  1E91                     	;# 
  5070  1E92                     	;# 
  5071  1E93                     	;# 
  5072  1E9C                     	;# 
  5073  1EA1                     	;# 
  5074  1EA2                     	;# 
  5075  1EB1                     	;# 
  5076  1EBB                     	;# 
  5077  1EBC                     	;# 
  5078  1EBD                     	;# 
  5079  1EBE                     	;# 
  5080  1EC3                     	;# 
  5081  1EC5                     	;# 
  5082  1EC6                     	;# 
  5083  1EC7                     	;# 
  5084  1EC8                     	;# 
  5085  1EC9                     	;# 
  5086  1ECA                     	;# 
  5087  1ECB                     	;# 
  5088  1ECC                     	;# 
  5089  1ECD                     	;# 
  5090  1ECE                     	;# 
  5091  1F10                     	;# 
  5092  1F11                     	;# 
  5093  1F12                     	;# 
  5094  1F13                     	;# 
  5095  1F14                     	;# 
  5096  1F15                     	;# 
  5097  1F16                     	;# 
  5098  1F17                     	;# 
  5099  1F18                     	;# 
  5100  1F19                     	;# 
  5101  1F1A                     	;# 
  5102  1F1B                     	;# 
  5103  1F1C                     	;# 
  5104  1F1D                     	;# 
  5105  1F1E                     	;# 
  5106  1F1F                     	;# 
  5107  1F20                     	;# 
  5108  1F21                     	;# 
  5109  1F22                     	;# 
  5110  1F23                     	;# 
  5111  1F24                     	;# 
  5112  1F25                     	;# 
  5113  1F26                     	;# 
  5114  1F27                     	;# 
  5115  1F28                     	;# 
  5116  1F29                     	;# 
  5117  1F2A                     	;# 
  5118  1F2B                     	;# 
  5119  1F2C                     	;# 
  5120  1F2D                     	;# 
  5121  1F2E                     	;# 
  5122  1F2F                     	;# 
  5123  1F30                     	;# 
  5124  1F31                     	;# 
  5125  1F32                     	;# 
  5126  1F38                     	;# 
  5127  1F39                     	;# 
  5128  1F3A                     	;# 
  5129  1F3B                     	;# 
  5130  1F3C                     	;# 
  5131  1F3D                     	;# 
  5132  1F3E                     	;# 
  5133  1F3F                     	;# 
  5134  1F43                     	;# 
  5135  1F44                     	;# 
  5136  1F45                     	;# 
  5137  1F46                     	;# 
  5138  1F47                     	;# 
  5139  1F48                     	;# 
  5140  1F49                     	;# 
  5141  1F4A                     	;# 
  5142  1F4E                     	;# 
  5143  1F4F                     	;# 
  5144  1F50                     	;# 
  5145  1F51                     	;# 
  5146  1F52                     	;# 
  5147  1F53                     	;# 
  5148  1F54                     	;# 
  5149  1F55                     	;# 
  5150  1F59                     	;# 
  5151  1F5A                     	;# 
  5152  1F5B                     	;# 
  5153  1F5C                     	;# 
  5154  1F5D                     	;# 
  5155  1F64                     	;# 
  5156  1F65                     	;# 
  5157  1F66                     	;# 
  5158  1F67                     	;# 
  5159  1F68                     	;# 
  5160  1F69                     	;# 
  5161  1F6A                     	;# 
  5162  1F6B                     	;# 
  5163  1FE4                     	;# 
  5164  1FE5                     	;# 
  5165  1FE6                     	;# 
  5166  1FE7                     	;# 
  5167  1FE8                     	;# 
  5168  1FE8                     	;# 
  5169  1FE9                     	;# 
  5170  1FEA                     	;# 
  5171  1FEB                     	;# 
  5172  1FED                     	;# 
  5173  1FEE                     	;# 
  5174  1FEF                     	;# 
  5175                           
  5176                           	psect	idataBANK0
  5177  1BF3                     __pidataBANK0:	
  5178 ;;_myState	offset	0
  5179 ;;_ap	offset	0
  5180 ;;_fmt	offset=-3 (param)
  5181 ;;_fp	offset	0
  5182 ;;_cfmt	offset	1
  5183 ;;_fmt	offset=-2 (param)
  5184 ;;_ap	offset=-4 (param)
  5185 ;;_fp	offset	0
  5186 ;;_vfpfcnvrt$2152	offset	1
  5187 ;;_ll	offset	3
  5188 ;;_done	offset	11
  5189 ;;_c	offset	13
  5190 ;;_fmt	offset=-2 (param)
  5191 ;;_ap	offset=-4 (param)
  5192 ;;_fp	offset	0
  5193 ;;_dtoa$2137	offset	1
  5194 ;;_n	offset	3
  5195 ;;_i	offset	11
  5196 ;;_s	offset	13
  5197 ;;_w	offset	15
  5198 ;;_p	offset	17
  5199 ;;_d	offset=-8 (param)
  5200 ;;_fp	offset	0
  5201 ;;_w	offset	1
  5202 ;;_i	offset	3
  5203 ;;_buf	offset=-1 (param)
  5204 ;;_p	offset=-3 (param)
  5205 ;;_s	offset	0
  5206 ;;_a	offset	1
  5207 ;;_s	offset	0
  5208 ;;_i	offset	1
  5209 ;;_c	offset	3
  5210 ;;_fp	offset=-1 (param)
  5211 ;;_a	offset=-2 (param)
  5212 ;;_sign	offset	0
  5213 ;;_counter	offset	1
  5214 ;;_divisor	offset=-8 (param)
  5215 ;;_dividend	offset=-16 (param)
  5216 ;;_quotient	offset	0
  5217 ;;_sign	offset	8
  5218 ;;_counter	offset	9
  5219 ;;_divisor	offset=-8 (param)
  5220 ;;_dividend	offset=-16 (param)
  5221 ;;_fp	offset	0
  5222 ;;_w	offset	1
  5223 ;;_l	offset	3
  5224 ;;_c	offset=-1 (param)
  5225 ;;_c	offset=-2 (param)
  5226 ;;_fp	offset=-3 (param)
  5227 ;;_ch	offset	0
  5228 ;;_ch	offset	0
  5229 ;;_x	offset	0
  5230 ;;_y	offset=-1 (param)
  5231 ;;_txData	offset	0
  5232 ;;_atoi$2175	offset	0
  5233 ;;_atoi$2173	offset	2
  5234 ;;_atoi$2174	offset	4
  5235 ;;_n	offset	5
  5236 ;;_neg	offset	7
  5237 ;;_s	offset=-2 (param)
  5238 ;;_isspace$2191	offset	0
  5239 ;;_c	offset=-2 (param)
  5240 ;;_c	offset=-2 (param)
  5241 ;;_product	offset	0
  5242 ;;_multiplier	offset=-2 (param)
  5243 ;;_multiplicand	offset=-4 (param)
  5244 ;;_counter	offset	0
  5245 ;;_divisor	offset=-2 (param)
  5246 ;;_dividend	offset=-4 (param)
  5247 ;;_quotient	offset	0
  5248 ;;_counter	offset	2
  5249 ;;_divisor	offset=-2 (param)
  5250 ;;_dividend	offset=-4 (param)
  5251 ;;_descriptor	offset	0
  5252 ;;_loadValue	offset=-4 (param)
  5253 ;;_descriptor	offset	0
  5254 ;;_descriptor	offset	0
  5255 ;;_loadValue	offset=-4 (param)
  5256 ;;_descriptor	offset	0
  5257 ;;_isTimeout	offset	1
  5258 ;;_descriptor	offset	0
  5259 ;;_descriptor	offset	0
  5260 ;;_p_Function	offset=-2 (param)
  5261 ;;_p_statePointer	offset=-2 (param)
  5262 ;;_seconds	offset	0
  5263 ;;_data	offset	1
  5264 ;;_i2cWflag	offset	3
  5265 ;;_minutes	offset	0
  5266 ;;_data	offset	1
  5267 ;;_i2cWflag	offset	3
  5268 ;;_houres	offset	0
  5269 ;;_data	offset	1
  5270 ;;_i2cWflag	offset	3
  5271 ;;_binaryValue	offset	0
  5272 ;;_zehner	offset	1
  5273 ;;_einer	offset	2
  5274 ;;_dividend	offset	0
  5275 ;;_rem	offset	1
  5276 ;;_counter	offset	2
  5277 ;;_divisor	offset=-1 (param)
  5278 ;;_dividend	offset	0
  5279 ;;_quotient	offset	1
  5280 ;;_counter	offset	2
  5281 ;;_divisor	offset=-1 (param)
  5282 ;;_data	offset	0
  5283 ;;_i2cWflag	offset	2
  5284 ;;_i2cWflag	offset	0
  5285 ;;_data	offset	1
  5286 ;;_i2cWflag	offset	0
  5287 ;;_data	offset	1
  5288 ;;_i2cWflag	offset	0
  5289 ;;_data	offset	1
  5290 ;;_i2cWflag	offset	0
  5291 ;;_data	offset	1
  5292 ;;_pdata	offset=-2 (param)
  5293 ;;_length	offset=-3 (param)
  5294 ;;_address	offset=-5 (param)
  5295 ;;_pflag	offset=-7 (param)
  5296 ;;_ptrb	offset	0
  5297 ;;_pdata	offset=-2 (param)
  5298 ;;_length	offset=-3 (param)
  5299 ;;_address	offset=-5 (param)
  5300 ;;_numberBCD	offset	0
  5301 ;;_einer	offset	1
  5302 ;;_zehner	offset	2
  5303 ;;_multiplier	offset	0
  5304 ;;_product	offset	1
  5305 ;;_multiplicand	offset=-1 (param)
  5306 ;;_data	offset	0
  5307 ;;_i2cWflag	offset	2
  5308 ;;_InterruptHandler	offset=-2 (param)
  5309 ;;_interruptHandler	offset=-2 (param)
  5310 ;;_interruptHandler	offset=-2 (param)
  5311 ;;_interruptHandler	offset=-2 (param)
  5312 ;;_interruptHandler	offset=-2 (param)
  5313 ;;_interruptHandler	offset=-2 (param)
  5314 ;;_data	offset	0
  5315 ;;_i2cWflag	offset	2
  5316 ;;_pdata	offset=-2 (param)
  5317 ;;_length	offset=-3 (param)
  5318 ;;_address	offset=-5 (param)
  5319 ;;_pflag	offset=-7 (param)
  5320 ;;_ptrb	offset	0
  5321 ;;_pdata	offset=-2 (param)
  5322 ;;_length	offset=-3 (param)
  5323 ;;_address	offset=-5 (param)
  5324 ;;_count	offset	0
  5325 ;;_ptrb_list	offset=-1 (param)
  5326 ;;_pflag	offset=-3 (param)
  5327 ;;_enableOLED	offset	0
  5328 ;;_enableUART	offset=-1 (param)
  5329 ;;_oledROM	offset	0
  5330 ;;_OLED_SelectROM$1614	offset	1
  5331 ;;_OLED_SelectROM$1613	offset	3
  5332 ;;_cursor	offset	0
  5333 ;;_OLED_CursorOn$1617	offset	1
  5334 ;;_data	offset	0
  5335 ;;_data	offset	0
  5336 ;;_button	offset	0
  5337 ;;_posEdge	offset	1
  5338 ;;_reg	offset	0
  5339 ;;_bitNumber	offset=-1 (param)
  5340 ;;_channel	offset	0
  5341 ;;_i	offset	0
  5342 ;;_SYSTICK_Handler$2453	offset	1
  5343 ;;_descriptor	offset	0
  5344 ;;_loadValue	offset=-4 (param)
  5345 ;;_descriptor	offset	0
  5346 ;;_descriptor	offset	0
  5347 ;;_loadValue	offset=-4 (param)
  5348 ;;_multiplier	offset	0
  5349 ;;_product	offset	1
  5350 ;;_multiplicand	offset=-1 (param)
  5351 ;;_c	offset	0
  5352 ;;_ch	offset	0
  5353 ;;_x	offset	0
  5354 ;;_y	offset=-1 (param)
  5355 ;;_data	offset	0
  5356 ;;_data	offset	0
  5357 ;;_txData	offset	0
  5358 ;;_completion_code	offset	0
  5359                           
  5360                           
  5361                           ;initializer for RTC_IsTempConvDone@F8248
  5362  1BF3  340E               	retlw	14
  5363  1BF4  3400               	retlw	0
  5364                           
  5365                           ;initializer for RTC_ConvertTemp@F8244
  5366  1BF5  340E               	retlw	14
  5367  1BF6  3420               	retlw	32
  5368                           
  5369                           ;initializer for RTC_Init@F8216
  5370  1BF7  340E               	retlw	14
  5371  1BF8  3400               	retlw	0
  5372                           
  5373                           ;initializer for _previousState
  5374  1BF9  34FF               	retlw	255
  5375                           
  5376                           ;initializer for _printfEnableOLED
  5377  1BFA  3401               	retlw	1
  5378                           
  5379                           ;initializer for BTN_GetPosEdge@flags
  5380  1BFB  34FF               	retlw	255
  5381                           
  5382                           	psect	stringtext1
  5383  1000                     __pstringtext1:
  5384  1000                     _BitReverseTable256:
  5385  1000  3400               	retlw	0
  5386  1001  3480               	retlw	128
  5387  1002  3440               	retlw	64
  5388  1003  34C0               	retlw	192
  5389  1004  3420               	retlw	32
  5390  1005  34A0               	retlw	160
  5391  1006  3460               	retlw	96
  5392  1007  34E0               	retlw	224
  5393  1008  3410               	retlw	16
  5394  1009  3490               	retlw	144
  5395  100A  3450               	retlw	80
  5396  100B  34D0               	retlw	208
  5397  100C  3430               	retlw	48
  5398  100D  34B0               	retlw	176
  5399  100E  3470               	retlw	112
  5400  100F  34F0               	retlw	240
  5401  1010  3408               	retlw	8
  5402  1011  3488               	retlw	136
  5403  1012  3448               	retlw	72
  5404  1013  34C8               	retlw	200
  5405  1014  3428               	retlw	40
  5406  1015  34A8               	retlw	168
  5407  1016  3468               	retlw	104
  5408  1017  34E8               	retlw	232
  5409  1018  3418               	retlw	24
  5410  1019  3498               	retlw	152
  5411  101A  3458               	retlw	88
  5412  101B  34D8               	retlw	216
  5413  101C  3438               	retlw	56
  5414  101D  34B8               	retlw	184
  5415  101E  3478               	retlw	120
  5416  101F  34F8               	retlw	248
  5417  1020  3404               	retlw	4
  5418  1021  3484               	retlw	132
  5419  1022  3444               	retlw	68
  5420  1023  34C4               	retlw	196
  5421  1024  3424               	retlw	36
  5422  1025  34A4               	retlw	164
  5423  1026  3464               	retlw	100
  5424  1027  34E4               	retlw	228
  5425  1028  3414               	retlw	20
  5426  1029  3494               	retlw	148
  5427  102A  3454               	retlw	84
  5428  102B  34D4               	retlw	212
  5429  102C  3434               	retlw	52
  5430  102D  34B4               	retlw	180
  5431  102E  3474               	retlw	116
  5432  102F  34F4               	retlw	244
  5433  1030  340C               	retlw	12
  5434  1031  348C               	retlw	140
  5435  1032  344C               	retlw	76
  5436  1033  34CC               	retlw	204
  5437  1034  342C               	retlw	44
  5438  1035  34AC               	retlw	172
  5439  1036  346C               	retlw	108
  5440  1037  34EC               	retlw	236
  5441  1038  341C               	retlw	28
  5442  1039  349C               	retlw	156
  5443  103A  345C               	retlw	92
  5444  103B  34DC               	retlw	220
  5445  103C  343C               	retlw	60
  5446  103D  34BC               	retlw	188
  5447  103E  347C               	retlw	124
  5448  103F  34FC               	retlw	252
  5449  1040  3402               	retlw	2
  5450  1041  3482               	retlw	130
  5451  1042  3442               	retlw	66
  5452  1043  34C2               	retlw	194
  5453  1044  3422               	retlw	34
  5454  1045  34A2               	retlw	162
  5455  1046  3462               	retlw	98
  5456  1047  34E2               	retlw	226
  5457  1048  3412               	retlw	18
  5458  1049  3492               	retlw	146
  5459  104A  3452               	retlw	82
  5460  104B  34D2               	retlw	210
  5461  104C  3432               	retlw	50
  5462  104D  34B2               	retlw	178
  5463  104E  3472               	retlw	114
  5464  104F  34F2               	retlw	242
  5465  1050  340A               	retlw	10
  5466  1051  348A               	retlw	138
  5467  1052  344A               	retlw	74
  5468  1053  34CA               	retlw	202
  5469  1054  342A               	retlw	42
  5470  1055  34AA               	retlw	170
  5471  1056  346A               	retlw	106
  5472  1057  34EA               	retlw	234
  5473  1058  341A               	retlw	26
  5474  1059  349A               	retlw	154
  5475  105A  345A               	retlw	90
  5476  105B  34DA               	retlw	218
  5477  105C  343A               	retlw	58
  5478  105D  34BA               	retlw	186
  5479  105E  347A               	retlw	122
  5480  105F  34FA               	retlw	250
  5481  1060  3406               	retlw	6
  5482  1061  3486               	retlw	134
  5483  1062  3446               	retlw	70
  5484  1063  34C6               	retlw	198
  5485  1064  3426               	retlw	38
  5486  1065  34A6               	retlw	166
  5487  1066  3466               	retlw	102
  5488  1067  34E6               	retlw	230
  5489  1068  3416               	retlw	22
  5490  1069  3496               	retlw	150
  5491  106A  3456               	retlw	86
  5492  106B  34D6               	retlw	214
  5493  106C  3436               	retlw	54
  5494  106D  34B6               	retlw	182
  5495  106E  3476               	retlw	118
  5496  106F  34F6               	retlw	246
  5497  1070  340E               	retlw	14
  5498  1071  348E               	retlw	142
  5499  1072  344E               	retlw	78
  5500  1073  34CE               	retlw	206
  5501  1074  342E               	retlw	46
  5502  1075  34AE               	retlw	174
  5503  1076  346E               	retlw	110
  5504  1077  34EE               	retlw	238
  5505  1078  341E               	retlw	30
  5506  1079  349E               	retlw	158
  5507  107A  345E               	retlw	94
  5508  107B  34DE               	retlw	222
  5509  107C  343E               	retlw	62
  5510  107D  34BE               	retlw	190
  5511  107E  347E               	retlw	126
  5512  107F  34FE               	retlw	254
  5513  1080  3401               	retlw	1
  5514  1081  3481               	retlw	129
  5515  1082  3441               	retlw	65
  5516  1083  34C1               	retlw	193
  5517  1084  3421               	retlw	33
  5518  1085  34A1               	retlw	161
  5519  1086  3461               	retlw	97
  5520  1087  34E1               	retlw	225
  5521  1088  3411               	retlw	17
  5522  1089  3491               	retlw	145
  5523  108A  3451               	retlw	81
  5524  108B  34D1               	retlw	209
  5525  108C  3431               	retlw	49
  5526  108D  34B1               	retlw	177
  5527  108E  3471               	retlw	113
  5528  108F  34F1               	retlw	241
  5529  1090  3409               	retlw	9
  5530  1091  3489               	retlw	137
  5531  1092  3449               	retlw	73
  5532  1093  34C9               	retlw	201
  5533  1094  3429               	retlw	41
  5534  1095  34A9               	retlw	169
  5535  1096  3469               	retlw	105
  5536  1097  34E9               	retlw	233
  5537  1098  3419               	retlw	25
  5538  1099  3499               	retlw	153
  5539  109A  3459               	retlw	89
  5540  109B  34D9               	retlw	217
  5541  109C  3439               	retlw	57
  5542  109D  34B9               	retlw	185
  5543  109E  3479               	retlw	121
  5544  109F  34F9               	retlw	249
  5545  10A0  3405               	retlw	5
  5546  10A1  3485               	retlw	133
  5547  10A2  3445               	retlw	69
  5548  10A3  34C5               	retlw	197
  5549  10A4  3425               	retlw	37
  5550  10A5  34A5               	retlw	165
  5551  10A6  3465               	retlw	101
  5552  10A7  34E5               	retlw	229
  5553  10A8  3415               	retlw	21
  5554  10A9  3495               	retlw	149
  5555  10AA  3455               	retlw	85
  5556  10AB  34D5               	retlw	213
  5557  10AC  3435               	retlw	53
  5558  10AD  34B5               	retlw	181
  5559  10AE  3475               	retlw	117
  5560  10AF  34F5               	retlw	245
  5561  10B0  340D               	retlw	13
  5562  10B1  348D               	retlw	141
  5563  10B2  344D               	retlw	77
  5564  10B3  34CD               	retlw	205
  5565  10B4  342D               	retlw	45
  5566  10B5  34AD               	retlw	173
  5567  10B6  346D               	retlw	109
  5568  10B7  34ED               	retlw	237
  5569  10B8  341D               	retlw	29
  5570  10B9  349D               	retlw	157
  5571  10BA  345D               	retlw	93
  5572  10BB  34DD               	retlw	221
  5573  10BC  343D               	retlw	61
  5574  10BD  34BD               	retlw	189
  5575  10BE  347D               	retlw	125
  5576  10BF  34FD               	retlw	253
  5577  10C0  3403               	retlw	3
  5578  10C1  3483               	retlw	131
  5579  10C2  3443               	retlw	67
  5580  10C3  34C3               	retlw	195
  5581  10C4  3423               	retlw	35
  5582  10C5  34A3               	retlw	163
  5583  10C6  3463               	retlw	99
  5584  10C7  34E3               	retlw	227
  5585  10C8  3413               	retlw	19
  5586  10C9  3493               	retlw	147
  5587  10CA  3453               	retlw	83
  5588  10CB  34D3               	retlw	211
  5589  10CC  3433               	retlw	51
  5590  10CD  34B3               	retlw	179
  5591  10CE  3473               	retlw	115
  5592  10CF  34F3               	retlw	243
  5593  10D0  340B               	retlw	11
  5594  10D1  348B               	retlw	139
  5595  10D2  344B               	retlw	75
  5596  10D3  34CB               	retlw	203
  5597  10D4  342B               	retlw	43
  5598  10D5  34AB               	retlw	171
  5599  10D6  346B               	retlw	107
  5600  10D7  34EB               	retlw	235
  5601  10D8  341B               	retlw	27
  5602  10D9  349B               	retlw	155
  5603  10DA  345B               	retlw	91
  5604  10DB  34DB               	retlw	219
  5605  10DC  343B               	retlw	59
  5606  10DD  34BB               	retlw	187
  5607  10DE  347B               	retlw	123
  5608  10DF  34FB               	retlw	251
  5609  10E0  3407               	retlw	7
  5610  10E1  3487               	retlw	135
  5611  10E2  3447               	retlw	71
  5612  10E3  34C7               	retlw	199
  5613  10E4  3427               	retlw	39
  5614  10E5  34A7               	retlw	167
  5615  10E6  3467               	retlw	103
  5616  10E7  34E7               	retlw	231
  5617  10E8  3417               	retlw	23
  5618  10E9  3497               	retlw	151
  5619  10EA  3457               	retlw	87
  5620  10EB  34D7               	retlw	215
  5621  10EC  3437               	retlw	55
  5622  10ED  34B7               	retlw	183
  5623  10EE  3477               	retlw	119
  5624  10EF  34F7               	retlw	247
  5625  10F0  340F               	retlw	15
  5626  10F1  348F               	retlw	143
  5627  10F2  344F               	retlw	79
  5628  10F3  34CF               	retlw	207
  5629  10F4  342F               	retlw	47
  5630  10F5  34AF               	retlw	175
  5631  10F6  346F               	retlw	111
  5632  10F7  34EF               	retlw	239
  5633  10F8  341F               	retlw	31
  5634  10F9  349F               	retlw	159
  5635  10FA  345F               	retlw	95
  5636  10FB  34DF               	retlw	223
  5637  10FC  343F               	retlw	63
  5638  10FD  34BF               	retlw	191
  5639  10FE  347F               	retlw	127
  5640  10FF  34FF               	retlw	255
  5641  1100                     __end_of_BitReverseTable256:
  5642                           
  5643                           	psect	nvBANK0
  5644  006C                     __pnvBANK0:
  5645  006C                     _TMR0_InterruptHandler:
  5646  006C                     	ds	2
  5647  006E                     ___BTEMP12:
  5648  006E                     	ds	1
  5649  006F                     _eusart1TxBufferRemaining:
  5650  006F                     	ds	1
  5651                           
  5652                           	psect	nvBANK1
  5653  00D2                     __pnvBANK1:
  5654  00D2                     _EUSART1_ErrorHandler:
  5655  00D2                     	ds	2
  5656  00D4                     _EUSART1_OverrunErrorHandler:
  5657  00D4                     	ds	2
  5658  00D6                     _EUSART1_FramingErrorHandler:
  5659  00D6                     	ds	2
  5660  00D8                     _EUSART1_RxDefaultInterruptHandler:
  5661  00D8                     	ds	2
  5662  00DA                     _EUSART1_TxDefaultInterruptHandler:
  5663  00DA                     	ds	2
  5664  00DC                     ___BTEMP43:
  5665  00DC                     	ds	1
  5666  00DD                     ___BTEMP42:
  5667  00DD                     	ds	1
  5668  00DE                     ___BTEMP41:
  5669  00DE                     	ds	1
  5670  00DF                     ___BTEMP40:
  5671  00DF                     	ds	1
  5672  00E0                     ___BTEMP39:
  5673  00E0                     	ds	1
  5674  00E1                     ___BTEMP38:
  5675  00E1                     	ds	1
  5676  00E2                     ___BTEMP37:
  5677  00E2                     	ds	1
  5678  00E3                     ___BTEMP36:
  5679  00E3                     	ds	1
  5680  00E4                     ___BTEMP19:
  5681  00E4                     	ds	1
  5682  00E5                     ___BTEMP18:
  5683  00E5                     	ds	1
  5684  00E6                     ___BTEMP17:
  5685  00E6                     	ds	1
  5686  00E7                     ___BTEMP16:
  5687  00E7                     	ds	1
  5688  00E8                     ___BTEMP15:
  5689  00E8                     	ds	1
  5690  00E9                     ___BTEMP14:
  5691  00E9                     	ds	1
  5692  00EA                     ___BTEMP13:
  5693  00EA                     	ds	1
  5694  0018                     _LATAbits	set	24
  5695  0019                     _LATBbits	set	25
  5696  000E                     _PORTC	set	14
  5697  001C                     _LATEbits	set	28
  5698  001B                     _LATDbits	set	27
  5699  0015                     _TRISD	set	21
  5700  0014                     _TRISC	set	20
  5701  0013                     _TRISB	set	19
  5702  0012                     _TRISA	set	18
  5703  0017                     _TRISF	set	23
  5704  0016                     _TRISE	set	22
  5705  001A                     _LATC	set	26
  5706  0019                     _LATB	set	25
  5707  001D                     _LATF	set	29
  5708  0018                     _LATA	set	24
  5709  001B                     _LATD	set	27
  5710  001C                     _LATE	set	28
  5711  000B                     _INTCONbits	set	11
  5712  009D                     _ADCON0bits	set	157
  5713  009C                     _ADRESH	set	156
  5714  009B                     _ADRESL	set	155
  5715  009E                     _ADCON1	set	158
  5716  009D                     _ADCON0	set	157
  5717  0119                     _RC1REG	set	281
  5718  011D                     _RC1STAbits	set	285
  5719  011A                     _TX1REG	set	282
  5720  011C                     _SP1BRGH	set	284
  5721  011B                     _SP1BRGL	set	283
  5722  011E                     _TX1STA	set	286
  5723  011D                     _RC1STA	set	285
  5724  011F                     _BAUD1CON	set	287
  5725  0196                     _SSP2BUF	set	406
  5726  019B                     _SSP2CON2bits	set	411
  5727  019A                     _SSP2CON1bits	set	410
  5728  0197                     _SSP2ADD	set	407
  5729  019C                     _SSP2CON3	set	412
  5730  019A                     _SSP2CON1	set	410
  5731  0199                     _SSP2STAT	set	409
  5732  018F                     _SSP1STATbits	set	399
  5733  018C                     _SSP1BUF	set	396
  5734  0190                     _SSP1CON1bits	set	400
  5735  018D                     _SSP1ADD	set	397
  5736  0190                     _SSP1CON1	set	400
  5737  018F                     _SSP1STAT	set	399
  5738  059E                     _T0CON0	set	1438
  5739  059C                     _TMR0L	set	1436
  5740  059D                     _TMR0H	set	1437
  5741  059F                     _T0CON1	set	1439
  5742  070F                     _PIR3bits	set	1807
  5743  070C                     _PIR0bits	set	1804
  5744  0716                     _PIE0bits	set	1814
  5745  0719                     _PIE3bits	set	1817
  5746  079B                     _PMD5	set	1947
  5747  079A                     _PMD4	set	1946
  5748  0799                     _PMD3	set	1945
  5749  0798                     _PMD2	set	1944
  5750  0797                     _PMD1	set	1943
  5751  0796                     _PMD0	set	1942
  5752  0892                     _OSCTUNE	set	2194
  5753  0890                     _OSCSTAT	set	2192
  5754  0893                     _OSCFRQ	set	2195
  5755  0891                     _OSCEN	set	2193
  5756  088F                     _OSCCON3	set	2191
  5757  088D                     _OSCCON1	set	2189
  5758  1E3E                     _RF6PPS	set	7742
  5759  1E54                     _INLVLF	set	7764
  5760  1E53                     _SLRCONF	set	7763
  5761  1E52                     _ODCONF	set	7762
  5762  1E51                     _WPUF	set	7761
  5763  1E50                     _ANSELF	set	7760
  5764  1ECB                     _RX1DTPPS	set	7883
  5765  1EC8                     _SSP2CLKPPS	set	7880
  5766  1EC6                     _SSP1DATPPS	set	7878
  5767  1EC9                     _SSP2DATPPS	set	7881
  5768  1EC5                     _SSP1CLKPPS	set	7877
  5769  1F1C                     _RB4PPS	set	7964
  5770  1F1B                     _RB3PPS	set	7963
  5771  1F1A                     _RB2PPS	set	7962
  5772  1F18                     _RB0PPS	set	7960
  5773  1F68                     _INLVLE	set	8040
  5774  1F5D                     _INLVLD	set	8029
  5775  1F52                     _INLVLC	set	8018
  5776  1F47                     _INLVLB	set	8007
  5777  1F3C                     _INLVLA	set	7996
  5778  1F67                     _SLRCONE	set	8039
  5779  1F5C                     _SLRCOND	set	8028
  5780  1F51                     _SLRCONC	set	8017
  5781  1F46                     _SLRCONB	set	8006
  5782  1F3B                     _SLRCONA	set	7995
  5783  1F5B                     _ODCOND	set	8027
  5784  1F50                     _ODCONC	set	8016
  5785  1F45                     _ODCONB	set	8005
  5786  1F3A                     _ODCONA	set	7994
  5787  1F66                     _ODCONE	set	8038
  5788  1F4F                     _WPUC	set	8015
  5789  1F39                     _WPUA	set	7993
  5790  1F44                     _WPUB	set	8004
  5791  1F65                     _WPUE	set	8037
  5792  1F5A                     _WPUD	set	8026
  5793  1F38                     _ANSELA	set	7992
  5794  1F64                     _ANSELE	set	8036
  5795  1F43                     _ANSELB	set	8003
  5796  1F4E                     _ANSELC	set	8014
  5797  1F59                     _ANSELD	set	8025
  5798                           
  5799                           	psect	stringtext2
  5800  1800                     __pstringtext2:
  5801  1800                     STR_5:
  5802  1800  3452               	retlw	82	;'R'
  5803  1801  3454               	retlw	84	;'T'
  5804  1802  3443               	retlw	67	;'C'
  5805  1803  3420               	retlw	32	;' '
  5806  1804  3454               	retlw	84	;'T'
  5807  1805  3465               	retlw	101	;'e'
  5808  1806  346D               	retlw	109	;'m'
  5809  1807  3470               	retlw	112	;'p'
  5810  1808  3465               	retlw	101	;'e'
  5811  1809  3472               	retlw	114	;'r'
  5812  180A  3461               	retlw	97	;'a'
  5813  180B  3474               	retlw	116	;'t'
  5814  180C  3475               	retlw	117	;'u'
  5815  180D  3472               	retlw	114	;'r'
  5816  180E  3420               	retlw	32	;' '
  5817  180F  3454               	retlw	84	;'T'
  5818  1810  3465               	retlw	101	;'e'
  5819  1811  3473               	retlw	115	;'s'
  5820  1812  3474               	retlw	116	;'t'
  5821  1813  340A               	retlw	10
  5822  1814  3454               	retlw	84	;'T'
  5823  1815  3465               	retlw	101	;'e'
  5824  1816  346D               	retlw	109	;'m'
  5825  1817  3470               	retlw	112	;'p'
  5826  1818  3465               	retlw	101	;'e'
  5827  1819  3472               	retlw	114	;'r'
  5828  181A  3461               	retlw	97	;'a'
  5829  181B  3474               	retlw	116	;'t'
  5830  181C  3475               	retlw	117	;'u'
  5831  181D  3472               	retlw	114	;'r'
  5832  181E  343A               	retlw	58	;':'
  5833  181F  340A               	retlw	10
  5834  1820  340A               	retlw	10
  5835  1821  3477               	retlw	119	;'w'
  5836  1822  3465               	retlw	101	;'e'
  5837  1823  3469               	retlw	105	;'i'
  5838  1824  3474               	retlw	116	;'t'
  5839  1825  3465               	retlw	101	;'e'
  5840  1826  3472               	retlw	114	;'r'
  5841  1827  3420               	retlw	32	;' '
  5842  1828  346D               	retlw	109	;'m'
  5843  1829  3469               	retlw	105	;'i'
  5844  182A  3474               	retlw	116	;'t'
  5845  182B  3420               	retlw	32	;' '
  5846  182C  3454               	retlw	84	;'T'
  5847  182D  3430               	retlw	48	;'0'
  5848  182E  342E               	retlw	46	;'.'
  5849  182F  342E               	retlw	46	;'.'
  5850  1830  342E               	retlw	46	;'.'
  5851  1831  3400               	retlw	0
  5852                           
  5853                           	psect	stringtext3
  5854  1832                     __pstringtext3:
  5855  1832                     STR_17:
  5856  1832  340A               	retlw	10
  5857  1833  340D               	retlw	13
  5858  1834  342A               	retlw	42	;'*'
  5859  1835  342A               	retlw	42	;'*'
  5860  1836  342A               	retlw	42	;'*'
  5861  1837  342A               	retlw	42	;'*'
  5862  1838  342A               	retlw	42	;'*'
  5863  1839  342A               	retlw	42	;'*'
  5864  183A  342A               	retlw	42	;'*'
  5865  183B  342A               	retlw	42	;'*'
  5866  183C  342A               	retlw	42	;'*'
  5867  183D  342A               	retlw	42	;'*'
  5868  183E  342A               	retlw	42	;'*'
  5869  183F  342A               	retlw	42	;'*'
  5870  1840  342A               	retlw	42	;'*'
  5871  1841  342A               	retlw	42	;'*'
  5872  1842  342A               	retlw	42	;'*'
  5873  1843  342A               	retlw	42	;'*'
  5874  1844  342A               	retlw	42	;'*'
  5875  1845  342A               	retlw	42	;'*'
  5876  1846  342A               	retlw	42	;'*'
  5877  1847  342A               	retlw	42	;'*'
  5878  1848  342A               	retlw	42	;'*'
  5879  1849  342A               	retlw	42	;'*'
  5880  184A  342A               	retlw	42	;'*'
  5881  184B  342A               	retlw	42	;'*'
  5882  184C  342A               	retlw	42	;'*'
  5883  184D  342A               	retlw	42	;'*'
  5884  184E  342A               	retlw	42	;'*'
  5885  184F  342A               	retlw	42	;'*'
  5886  1850  342A               	retlw	42	;'*'
  5887  1851  342A               	retlw	42	;'*'
  5888  1852  342A               	retlw	42	;'*'
  5889  1853  342A               	retlw	42	;'*'
  5890  1854  342A               	retlw	42	;'*'
  5891  1855  342A               	retlw	42	;'*'
  5892  1856  342A               	retlw	42	;'*'
  5893  1857  342A               	retlw	42	;'*'
  5894  1858  342A               	retlw	42	;'*'
  5895  1859  342A               	retlw	42	;'*'
  5896  185A  342A               	retlw	42	;'*'
  5897  185B  342A               	retlw	42	;'*'
  5898  185C  342A               	retlw	42	;'*'
  5899  185D  342A               	retlw	42	;'*'
  5900  185E  342A               	retlw	42	;'*'
  5901  185F  342A               	retlw	42	;'*'
  5902  1860  340A               	retlw	10
  5903  1861  340D               	retlw	13
  5904  1862  3400               	retlw	0
  5905                           
  5906                           	psect	stringtext4
  5907  1863                     __pstringtext4:
  5908  1863                     STR_12:
  5909  1863  342A               	retlw	42	;'*'
  5910  1864  3420               	retlw	32	;' '
  5911  1865  3420               	retlw	32	;' '
  5912  1866  3420               	retlw	32	;' '
  5913  1867  3420               	retlw	32	;' '
  5914  1868  3420               	retlw	32	;' '
  5915  1869  3420               	retlw	32	;' '
  5916  186A  3420               	retlw	32	;' '
  5917  186B  3450               	retlw	80	;'P'
  5918  186C  3449               	retlw	73	;'I'
  5919  186D  3443               	retlw	67	;'C'
  5920  186E  3420               	retlw	32	;' '
  5921  186F  3442               	retlw	66	;'B'
  5922  1870  346F               	retlw	111	;'o'
  5923  1871  3461               	retlw	97	;'a'
  5924  1872  3472               	retlw	114	;'r'
  5925  1873  3464               	retlw	100	;'d'
  5926  1874  3420               	retlw	32	;' '
  5927  1875  3441               	retlw	65	;'A'
  5928  1876  3464               	retlw	100	;'d'
  5929  1877  3476               	retlw	118	;'v'
  5930  1878  3461               	retlw	97	;'a'
  5931  1879  346E               	retlw	110	;'n'
  5932  187A  3463               	retlw	99	;'c'
  5933  187B  3465               	retlw	101	;'e'
  5934  187C  3464               	retlw	100	;'d'
  5935  187D  3420               	retlw	32	;' '
  5936  187E  3437               	retlw	55	;'7'
  5937  187F  3420               	retlw	32	;' '
  5938  1880  3420               	retlw	32	;' '
  5939  1881  3420               	retlw	32	;' '
  5940  1882  3420               	retlw	32	;' '
  5941  1883  3420               	retlw	32	;' '
  5942  1884  3420               	retlw	32	;' '
  5943  1885  3420               	retlw	32	;' '
  5944  1886  3420               	retlw	32	;' '
  5945  1887  3420               	retlw	32	;' '
  5946  1888  3420               	retlw	32	;' '
  5947  1889  3420               	retlw	32	;' '
  5948  188A  3420               	retlw	32	;' '
  5949  188B  3420               	retlw	32	;' '
  5950  188C  3420               	retlw	32	;' '
  5951  188D  3420               	retlw	32	;' '
  5952  188E  342A               	retlw	42	;'*'
  5953  188F  340A               	retlw	10
  5954  1890  340D               	retlw	13
  5955  1891  3400               	retlw	0
  5956                           
  5957                           	psect	stringtext5
  5958  1892                     __pstringtext5:
  5959  1892                     STR_14:
  5960  1892  342A               	retlw	42	;'*'
  5961  1893  3420               	retlw	32	;' '
  5962  1894  3420               	retlw	32	;' '
  5963  1895  3420               	retlw	32	;' '
  5964  1896  3420               	retlw	32	;' '
  5965  1897  3420               	retlw	32	;' '
  5966  1898  3420               	retlw	32	;' '
  5967  1899  3420               	retlw	32	;' '
  5968  189A  3448               	retlw	72	;'H'
  5969  189B  3461               	retlw	97	;'a'
  5970  189C  3472               	retlw	114	;'r'
  5971  189D  3464               	retlw	100	;'d'
  5972  189E  3477               	retlw	119	;'w'
  5973  189F  3461               	retlw	97	;'a'
  5974  18A0  3472               	retlw	114	;'r'
  5975  18A1  3465               	retlw	101	;'e'
  5976  18A2  342D               	retlw	45	;'-'
  5977  18A3  3454               	retlw	84	;'T'
  5978  18A4  3465               	retlw	101	;'e'
  5979  18A5  3473               	retlw	115	;'s'
  5980  18A6  3474               	retlw	116	;'t'
  5981  18A7  3473               	retlw	115	;'s'
  5982  18A8  346F               	retlw	111	;'o'
  5983  18A9  3466               	retlw	102	;'f'
  5984  18AA  3474               	retlw	116	;'t'
  5985  18AB  3477               	retlw	119	;'w'
  5986  18AC  3461               	retlw	97	;'a'
  5987  18AD  3472               	retlw	114	;'r'
  5988  18AE  3465               	retlw	101	;'e'
  5989  18AF  3420               	retlw	32	;' '
  5990  18B0  3420               	retlw	32	;' '
  5991  18B1  3420               	retlw	32	;' '
  5992  18B2  3420               	retlw	32	;' '
  5993  18B3  3420               	retlw	32	;' '
  5994  18B4  3420               	retlw	32	;' '
  5995  18B5  3420               	retlw	32	;' '
  5996  18B6  3420               	retlw	32	;' '
  5997  18B7  3420               	retlw	32	;' '
  5998  18B8  3420               	retlw	32	;' '
  5999  18B9  3420               	retlw	32	;' '
  6000  18BA  3420               	retlw	32	;' '
  6001  18BB  3420               	retlw	32	;' '
  6002  18BC  3420               	retlw	32	;' '
  6003  18BD  342A               	retlw	42	;'*'
  6004  18BE  340A               	retlw	10
  6005  18BF  340D               	retlw	13
  6006  18C0  3400               	retlw	0
  6007                           
  6008                           	psect	stringtext6
  6009  18C1                     __pstringtext6:
  6010  18C1                     STR_18:
  6011  18C1  342A               	retlw	42	;'*'
  6012  18C2  3420               	retlw	32	;' '
  6013  18C3  3420               	retlw	32	;' '
  6014  18C4  3420               	retlw	32	;' '
  6015  18C5  3420               	retlw	32	;' '
  6016  18C6  3420               	retlw	32	;' '
  6017  18C7  3420               	retlw	32	;' '
  6018  18C8  3420               	retlw	32	;' '
  6019  18C9  3455               	retlw	85	;'U'
  6020  18CA  3441               	retlw	65	;'A'
  6021  18CB  3452               	retlw	82	;'R'
  6022  18CC  3454               	retlw	84	;'T'
  6023  18CD  3420               	retlw	32	;' '
  6024  18CE  3454               	retlw	84	;'T'
  6025  18CF  3465               	retlw	101	;'e'
  6026  18D0  3473               	retlw	115	;'s'
  6027  18D1  3474               	retlw	116	;'t'
  6028  18D2  3420               	retlw	32	;' '
  6029  18D3  3477               	retlw	119	;'w'
  6030  18D4  3475               	retlw	117	;'u'
  6031  18D5  3472               	retlw	114	;'r'
  6032  18D6  3464               	retlw	100	;'d'
  6033  18D7  3465               	retlw	101	;'e'
  6034  18D8  3420               	retlw	32	;' '
  6035  18D9  3462               	retlw	98	;'b'
  6036  18DA  3465               	retlw	101	;'e'
  6037  18DB  3465               	retlw	101	;'e'
  6038  18DC  346E               	retlw	110	;'n'
  6039  18DD  3464               	retlw	100	;'d'
  6040  18DE  3465               	retlw	101	;'e'
  6041  18DF  3474               	retlw	116	;'t'
  6042  18E0  3420               	retlw	32	;' '
  6043  18E1  3420               	retlw	32	;' '
  6044  18E2  3420               	retlw	32	;' '
  6045  18E3  3420               	retlw	32	;' '
  6046  18E4  3420               	retlw	32	;' '
  6047  18E5  3420               	retlw	32	;' '
  6048  18E6  3420               	retlw	32	;' '
  6049  18E7  3420               	retlw	32	;' '
  6050  18E8  3420               	retlw	32	;' '
  6051  18E9  3420               	retlw	32	;' '
  6052  18EA  3420               	retlw	32	;' '
  6053  18EB  3420               	retlw	32	;' '
  6054  18EC  342A               	retlw	42	;'*'
  6055  18ED  340A               	retlw	10
  6056  18EE  340D               	retlw	13
  6057  18EF  3400               	retlw	0
  6058                           
  6059                           	psect	stringtext7
  6060  18F0                     __pstringtext7:
  6061  18F0                     STR_13:
  6062  18F0  342A               	retlw	42	;'*'
  6063  18F1  3420               	retlw	32	;' '
  6064  18F2  3420               	retlw	32	;' '
  6065  18F3  3420               	retlw	32	;' '
  6066  18F4  3420               	retlw	32	;' '
  6067  18F5  3420               	retlw	32	;' '
  6068  18F6  3420               	retlw	32	;' '
  6069  18F7  3420               	retlw	32	;' '
  6070  18F8  3449               	retlw	73	;'I'
  6071  18F9  3443               	retlw	67	;'C'
  6072  18FA  3454               	retlw	84	;'T'
  6073  18FB  3420               	retlw	32	;' '
  6074  18FC  3442               	retlw	66	;'B'
  6075  18FD  3465               	retlw	101	;'e'
  6076  18FE  3472               	retlw	114	;'r'
  6077  18FF  3475               	retlw	117	;'u'
  6078  1900  3466               	retlw	102	;'f'
  6079  1901  3473               	retlw	115	;'s'
  6080  1902  3462               	retlw	98	;'b'
  6081  1903  3469               	retlw	105	;'i'
  6082  1904  346C               	retlw	108	;'l'
  6083  1905  3464               	retlw	100	;'d'
  6084  1906  3475               	retlw	117	;'u'
  6085  1907  346E               	retlw	110	;'n'
  6086  1908  3467               	retlw	103	;'g'
  6087  1909  3473               	retlw	115	;'s'
  6088  190A  3463               	retlw	99	;'c'
  6089  190B  3465               	retlw	101	;'e'
  6090  190C  346E               	retlw	110	;'n'
  6091  190D  3474               	retlw	116	;'t'
  6092  190E  3465               	retlw	101	;'e'
  6093  190F  3472               	retlw	114	;'r'
  6094  1910  3420               	retlw	32	;' '
  6095  1911  3441               	retlw	65	;'A'
  6096  1912  3447               	retlw	71	;'G'
  6097  1913  3420               	retlw	32	;' '
  6098  1914  3420               	retlw	32	;' '
  6099  1915  3420               	retlw	32	;' '
  6100  1916  3420               	retlw	32	;' '
  6101  1917  3420               	retlw	32	;' '
  6102  1918  3420               	retlw	32	;' '
  6103  1919  3420               	retlw	32	;' '
  6104  191A  3420               	retlw	32	;' '
  6105  191B  342A               	retlw	42	;'*'
  6106  191C  340A               	retlw	10
  6107  191D  340D               	retlw	13
  6108  191E  3400               	retlw	0
  6109                           
  6110                           	psect	stringtext8
  6111  191F                     __pstringtext8:
  6112  191F                     STR_3:
  6113  191F  3452               	retlw	82	;'R'
  6114  1920  3454               	retlw	84	;'T'
  6115  1921  3443               	retlw	67	;'C'
  6116  1922  3420               	retlw	32	;' '
  6117  1923  3454               	retlw	84	;'T'
  6118  1924  3465               	retlw	101	;'e'
  6119  1925  3473               	retlw	115	;'s'
  6120  1926  3474               	retlw	116	;'t'
  6121  1927  340A               	retlw	10
  6122  1928  3456               	retlw	86	;'V'
  6123  1929  3465               	retlw	101	;'e'
  6124  192A  3472               	retlw	114	;'r'
  6125  192B  3473               	retlw	115	;'s'
  6126  192C  3474               	retlw	116	;'t'
  6127  192D  3472               	retlw	114	;'r'
  6128  192E  3469               	retlw	105	;'i'
  6129  192F  3463               	retlw	99	;'c'
  6130  1930  3468               	retlw	104	;'h'
  6131  1931  3465               	retlw	101	;'e'
  6132  1932  346E               	retlw	110	;'n'
  6133  1933  3465               	retlw	101	;'e'
  6134  1934  3420               	retlw	32	;' '
  6135  1935  345A               	retlw	90	;'Z'
  6136  1936  3465               	retlw	101	;'e'
  6137  1937  3469               	retlw	105	;'i'
  6138  1938  3474               	retlw	116	;'t'
  6139  1939  343A               	retlw	58	;':'
  6140  193A  340A               	retlw	10
  6141  193B  340A               	retlw	10
  6142  193C  3477               	retlw	119	;'w'
  6143  193D  3465               	retlw	101	;'e'
  6144  193E  3469               	retlw	105	;'i'
  6145  193F  3474               	retlw	116	;'t'
  6146  1940  3465               	retlw	101	;'e'
  6147  1941  3472               	retlw	114	;'r'
  6148  1942  3420               	retlw	32	;' '
  6149  1943  346D               	retlw	109	;'m'
  6150  1944  3469               	retlw	105	;'i'
  6151  1945  3474               	retlw	116	;'t'
  6152  1946  3420               	retlw	32	;' '
  6153  1947  3454               	retlw	84	;'T'
  6154  1948  3430               	retlw	48	;'0'
  6155  1949  342E               	retlw	46	;'.'
  6156  194A  342E               	retlw	46	;'.'
  6157  194B  342E               	retlw	46	;'.'
  6158  194C  3400               	retlw	0
  6159                           
  6160                           	psect	stringtext9
  6161  194D                     __pstringtext9:
  6162  194D                     STR_1:
  6163  194D  3454               	retlw	84	;'T'
  6164  194E  3461               	retlw	97	;'a'
  6165  194F  3473               	retlw	115	;'s'
  6166  1950  3474               	retlw	116	;'t'
  6167  1951  3465               	retlw	101	;'e'
  6168  1952  3472               	retlw	114	;'r'
  6169  1953  3420               	retlw	32	;' '
  6170  1954  3475               	retlw	117	;'u'
  6171  1955  346E               	retlw	110	;'n'
  6172  1956  3464               	retlw	100	;'d'
  6173  1957  3420               	retlw	32	;' '
  6174  1958  344C               	retlw	76	;'L'
  6175  1959  3445               	retlw	69	;'E'
  6176  195A  3444               	retlw	68	;'D'
  6177  195B  3473               	retlw	115	;'s'
  6178  195C  3420               	retlw	32	;' '
  6179  195D  3454               	retlw	84	;'T'
  6180  195E  3465               	retlw	101	;'e'
  6181  195F  3473               	retlw	115	;'s'
  6182  1960  3474               	retlw	116	;'t'
  6183  1961  340A               	retlw	10
  6184  1962  340A               	retlw	10
  6185  1963  3477               	retlw	119	;'w'
  6186  1964  3465               	retlw	101	;'e'
  6187  1965  3469               	retlw	105	;'i'
  6188  1966  3474               	retlw	116	;'t'
  6189  1967  3465               	retlw	101	;'e'
  6190  1968  3472               	retlw	114	;'r'
  6191  1969  3420               	retlw	32	;' '
  6192  196A  346D               	retlw	109	;'m'
  6193  196B  3469               	retlw	105	;'i'
  6194  196C  3474               	retlw	116	;'t'
  6195  196D  3420               	retlw	32	;' '
  6196  196E  3454               	retlw	84	;'T'
  6197  196F  3430               	retlw	48	;'0'
  6198  1970  342E               	retlw	46	;'.'
  6199  1971  342E               	retlw	46	;'.'
  6200  1972  342E               	retlw	46	;'.'
  6201  1973  3400               	retlw	0
  6202                           
  6203                           	psect	stringtext10
  6204  1974                     __pstringtext10:
  6205  1974                     STR_7:
  6206  1974  3450               	retlw	80	;'P'
  6207  1975  346F               	retlw	111	;'o'
  6208  1976  3474               	retlw	116	;'t'
  6209  1977  3465               	retlw	101	;'e'
  6210  1978  346E               	retlw	110	;'n'
  6211  1979  3474               	retlw	116	;'t'
  6212  197A  3469               	retlw	105	;'i'
  6213  197B  346F               	retlw	111	;'o'
  6214  197C  346D               	retlw	109	;'m'
  6215  197D  3465               	retlw	101	;'e'
  6216  197E  3474               	retlw	116	;'t'
  6217  197F  3465               	retlw	101	;'e'
  6218  1980  3472               	retlw	114	;'r'
  6219  1981  3420               	retlw	32	;' '
  6220  1982  3454               	retlw	84	;'T'
  6221  1983  3465               	retlw	101	;'e'
  6222  1984  3473               	retlw	115	;'s'
  6223  1985  3474               	retlw	116	;'t'
  6224  1986  340A               	retlw	10
  6225  1987  340A               	retlw	10
  6226  1988  340A               	retlw	10
  6227  1989  3477               	retlw	119	;'w'
  6228  198A  3465               	retlw	101	;'e'
  6229  198B  3469               	retlw	105	;'i'
  6230  198C  3474               	retlw	116	;'t'
  6231  198D  3465               	retlw	101	;'e'
  6232  198E  3472               	retlw	114	;'r'
  6233  198F  3420               	retlw	32	;' '
  6234  1990  346D               	retlw	109	;'m'
  6235  1991  3469               	retlw	105	;'i'
  6236  1992  3474               	retlw	116	;'t'
  6237  1993  3420               	retlw	32	;' '
  6238  1994  3454               	retlw	84	;'T'
  6239  1995  3430               	retlw	48	;'0'
  6240  1996  342E               	retlw	46	;'.'
  6241  1997  342E               	retlw	46	;'.'
  6242  1998  342E               	retlw	46	;'.'
  6243  1999  3400               	retlw	0
  6244                           
  6245                           	psect	stringtext11
  6246  199A                     __pstringtext11:
  6247  199A                     STR_10:
  6248  199A  3455               	retlw	85	;'U'
  6249  199B  3441               	retlw	65	;'A'
  6250  199C  3452               	retlw	82	;'R'
  6251  199D  3454               	retlw	84	;'T'
  6252  199E  3420               	retlw	32	;' '
  6253  199F  3442               	retlw	66	;'B'
  6254  19A0  3461               	retlw	97	;'a'
  6255  19A1  3475               	retlw	117	;'u'
  6256  19A2  3464               	retlw	100	;'d'
  6257  19A3  343A               	retlw	58	;':'
  6258  19A4  3420               	retlw	32	;' '
  6259  19A5  3431               	retlw	49	;'1'
  6260  19A6  3431               	retlw	49	;'1'
  6261  19A7  3435               	retlw	53	;'5'
  6262  19A8  3432               	retlw	50	;'2'
  6263  19A9  3430               	retlw	48	;'0'
  6264  19AA  3430               	retlw	48	;'0'
  6265  19AB  340A               	retlw	10
  6266  19AC  340A               	retlw	10
  6267  19AD  340A               	retlw	10
  6268  19AE  3477               	retlw	119	;'w'
  6269  19AF  3465               	retlw	101	;'e'
  6270  19B0  3469               	retlw	105	;'i'
  6271  19B1  3474               	retlw	116	;'t'
  6272  19B2  3465               	retlw	101	;'e'
  6273  19B3  3472               	retlw	114	;'r'
  6274  19B4  3420               	retlw	32	;' '
  6275  19B5  346D               	retlw	109	;'m'
  6276  19B6  3469               	retlw	105	;'i'
  6277  19B7  3474               	retlw	116	;'t'
  6278  19B8  3420               	retlw	32	;' '
  6279  19B9  3454               	retlw	84	;'T'
  6280  19BA  3430               	retlw	48	;'0'
  6281  19BB  342E               	retlw	46	;'.'
  6282  19BC  342E               	retlw	46	;'.'
  6283  19BD  342E               	retlw	46	;'.'
  6284  19BE  3400               	retlw	0
  6285                           
  6286                           	psect	stringtext12
  6287  19BF                     __pstringtext12:
  6288  19BF                     STR_2:
  6289  19BF  3453               	retlw	83	;'S'
  6290  19C0  3475               	retlw	117	;'u'
  6291  19C1  346D               	retlw	109	;'m'
  6292  19C2  346D               	retlw	109	;'m'
  6293  19C3  3465               	retlw	101	;'e'
  6294  19C4  3472               	retlw	114	;'r'
  6295  19C5  3420               	retlw	32	;' '
  6296  19C6  3454               	retlw	84	;'T'
  6297  19C7  3465               	retlw	101	;'e'
  6298  19C8  3473               	retlw	115	;'s'
  6299  19C9  3474               	retlw	116	;'t'
  6300  19CA  340A               	retlw	10
  6301  19CB  340A               	retlw	10
  6302  19CC  340A               	retlw	10
  6303  19CD  3477               	retlw	119	;'w'
  6304  19CE  3465               	retlw	101	;'e'
  6305  19CF  3469               	retlw	105	;'i'
  6306  19D0  3474               	retlw	116	;'t'
  6307  19D1  3465               	retlw	101	;'e'
  6308  19D2  3472               	retlw	114	;'r'
  6309  19D3  3420               	retlw	32	;' '
  6310  19D4  346D               	retlw	109	;'m'
  6311  19D5  3469               	retlw	105	;'i'
  6312  19D6  3474               	retlw	116	;'t'
  6313  19D7  3420               	retlw	32	;' '
  6314  19D8  3454               	retlw	84	;'T'
  6315  19D9  3430               	retlw	48	;'0'
  6316  19DA  342E               	retlw	46	;'.'
  6317  19DB  342E               	retlw	46	;'.'
  6318  19DC  342E               	retlw	46	;'.'
  6319  19DD  3400               	retlw	0
  6320                           
  6321                           	psect	stringtext13
  6322  19DE                     __pstringtext13:
  6323  19DE                     STR_16:
  6324  19DE  340A               	retlw	10
  6325  19DF  3442               	retlw	66	;'B'
  6326  19E0  3469               	retlw	105	;'i'
  6327  19E1  3474               	retlw	116	;'t'
  6328  19E2  3474               	retlw	116	;'t'
  6329  19E3  3465               	retlw	101	;'e'
  6330  19E4  3420               	retlw	32	;' '
  6331  19E5  3454               	retlw	84	;'T'
  6332  19E6  3465               	retlw	101	;'e'
  6333  19E7  3478               	retlw	120	;'x'
  6334  19E8  3474               	retlw	116	;'t'
  6335  19E9  3420               	retlw	32	;' '
  6336  19EA  3465               	retlw	101	;'e'
  6337  19EB  3469               	retlw	105	;'i'
  6338  19EC  346E               	retlw	110	;'n'
  6339  19ED  3467               	retlw	103	;'g'
  6340  19EE  3465               	retlw	101	;'e'
  6341  19EF  3462               	retlw	98	;'b'
  6342  19F0  3465               	retlw	101	;'e'
  6343  19F1  346E               	retlw	110	;'n'
  6344  19F2  343A               	retlw	58	;':'
  6345  19F3  340A               	retlw	10
  6346  19F4  340D               	retlw	13
  6347  19F5  3400               	retlw	0
  6348                           
  6349                           	psect	stringtext14
  6350  19F6                     __pstringtext14:
  6351  19F6                     STR_9:
  6352  19F6  340A               	retlw	10
  6353  19F7  3450               	retlw	80	;'P'
  6354  19F8  346F               	retlw	111	;'o'
  6355  19F9  3474               	retlw	116	;'t'
  6356  19FA  3431               	retlw	49	;'1'
  6357  19FB  343A               	retlw	58	;':'
  6358  19FC  3420               	retlw	32	;' '
  6359  19FD  3425               	retlw	37	;'%'
  6360  19FE  3430               	retlw	48	;'0'
  6361  19FF  3431               	retlw	49	;'1'
  6362  1A00  3469               	retlw	105	;'i'
  6363  1A01  342E               	retlw	46	;'.'
  6364  1A02  3425               	retlw	37	;'%'
  6365  1A03  3430               	retlw	48	;'0'
  6366  1A04  3431               	retlw	49	;'1'
  6367  1A05  3469               	retlw	105	;'i'
  6368  1A06  3456               	retlw	86	;'V'
  6369  1A07  3400               	retlw	0
  6370                           
  6371                           	psect	stringtext15
  6372  1A08                     __pstringtext15:
  6373  1A08                     STR_8:
  6374  1A08  3450               	retlw	80	;'P'
  6375  1A09  346F               	retlw	111	;'o'
  6376  1A0A  3474               	retlw	116	;'t'
  6377  1A0B  3430               	retlw	48	;'0'
  6378  1A0C  343A               	retlw	58	;':'
  6379  1A0D  3420               	retlw	32	;' '
  6380  1A0E  3425               	retlw	37	;'%'
  6381  1A0F  3430               	retlw	48	;'0'
  6382  1A10  3431               	retlw	49	;'1'
  6383  1A11  3469               	retlw	105	;'i'
  6384  1A12  342E               	retlw	46	;'.'
  6385  1A13  3425               	retlw	37	;'%'
  6386  1A14  3430               	retlw	48	;'0'
  6387  1A15  3431               	retlw	49	;'1'
  6388  1A16  3469               	retlw	105	;'i'
  6389  1A17  3456               	retlw	86	;'V'
  6390  1A18  3400               	retlw	0
  6391                           
  6392                           	psect	stringtext16
  6393  1A19                     __pstringtext16:
  6394  1A19                     STR_4:
  6395  1A19  3425               	retlw	37	;'%'
  6396  1A1A  3430               	retlw	48	;'0'
  6397  1A1B  3432               	retlw	50	;'2'
  6398  1A1C  3469               	retlw	105	;'i'
  6399  1A1D  343A               	retlw	58	;':'
  6400  1A1E  3425               	retlw	37	;'%'
  6401  1A1F  3430               	retlw	48	;'0'
  6402  1A20  3432               	retlw	50	;'2'
  6403  1A21  3469               	retlw	105	;'i'
  6404  1A22  343A               	retlw	58	;':'
  6405  1A23  3425               	retlw	37	;'%'
  6406  1A24  3430               	retlw	48	;'0'
  6407  1A25  3432               	retlw	50	;'2'
  6408  1A26  3469               	retlw	105	;'i'
  6409  1A27  3400               	retlw	0
  6410                           
  6411                           	psect	stringtext17
  6412  1A28                     __pstringtext17:
  6413  1A28                     STR_6:
  6414  1A28  3425               	retlw	37	;'%'
  6415  1A29  3433               	retlw	51	;'3'
  6416  1A2A  3469               	retlw	105	;'i'
  6417  1A2B  3425               	retlw	37	;'%'
  6418  1A2C  3463               	retlw	99	;'c'
  6419  1A2D  3443               	retlw	67	;'C'
  6420  1A2E  3400               	retlw	0
  6421                           
  6422                           	psect	stringtext18
  6423  0000                     __pstringtext18:
  6424  1834                     
  6425                           	psect	cinit
  6426  0071                     start_initialization:	
  6427                           ; #config settings
  6428                           
  6429  0071                     __initialization:
  6430                           
  6431                           ; Initialize objects allocated to BANK0
  6432  0071  30F3               	movlw	low __pidataBANK0
  6433  0072  0084               	movwf	4
  6434  0073  309B               	movlw	(high __pidataBANK0)| (0+128)
  6435  0074  0085               	movwf	5
  6436  0075  305E               	movlw	low __pdataBANK0
  6437  0076  0086               	movwf	6
  6438  0077  3000               	movlw	high __pdataBANK0
  6439  0078  0087               	movwf	7
  6440  0079  3009               	movlw	9
  6441  007A  319B  23A3  3180   	fcall	init_ram
  6442                           
  6443                           ; Clear objects allocated to COMMON
  6444  007D  01F0               	clrf	__pbssCOMMON& (0+127)
  6445  007E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  6446  007F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  6447  0080  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  6448                           
  6449                           ; Clear objects allocated to BANK0
  6450  0081  3020               	movlw	low __pbssBANK0
  6451  0082  0084               	movwf	4
  6452  0083  3000               	movlw	high __pbssBANK0
  6453  0084  0085               	movwf	5
  6454  0085  303E               	movlw	62
  6455  0086  319B  239D  3180   	fcall	clear_ram0
  6456                           
  6457                           ; Clear objects allocated to BANK1
  6458  0089  30A0               	movlw	low __pbssBANK1
  6459  008A  0084               	movwf	4
  6460  008B  3000               	movlw	high __pbssBANK1
  6461  008C  0085               	movwf	5
  6462  008D  3032               	movlw	50
  6463  008E  319B  239D  3180   	fcall	clear_ram0
  6464                           
  6465                           ; Clear objects allocated to BANK2
  6466  0091  3020               	movlw	low __pbssBANK2
  6467  0092  0084               	movwf	4
  6468  0093  3001               	movlw	high __pbssBANK2
  6469  0094  0085               	movwf	5
  6470  0095  3020               	movlw	32
  6471  0096  319B  239D  3180   	fcall	clear_ram0
  6472  0099                     end_of_initialization:	
  6473                           ;End of C runtime variable initialization code
  6474                           
  6475  0099                     __end_of__initialization:
  6476  0099  0140               	movlb	0
  6477                           
  6478                           ;Initialize the stack pointer (FSR1)
  6479  009A  30C0               	movlw	low ___sp
  6480  009B  0086               	movwf	6
  6481  009C  3020               	movlw	high ___sp
  6482  009D  0087               	movwf	7
  6483  009E  3180  28A0         	ljmp	_main	;jump to C main() function
  6484                           
  6485                           	psect	bssCOMMON
  6486  0070                     __pbssCOMMON:
  6487  0070                     _addY:
  6488  0070                     	ds	1
  6489  0071                     _addX:
  6490  0071                     	ds	1
  6491  0072                     _eusart1RxHead:
  6492  0072                     	ds	1
  6493  0073                     _eusart1TxHead:
  6494  0073                     	ds	1
  6495                           
  6496                           	psect	bssBANK0
  6497  0020                     __pbssBANK0:
  6498  0020                     _eusart1RxStatusBuffer:
  6499  0020                     	ds	8
  6500  0028                     _eusart1TxBuffer:
  6501  0028                     	ds	8
  6502  0030                     _i2c2_object:
  6503  0030                     	ds	5
  6504  0035                     _nout:
  6505  0035                     	ds	2
  6506  0037                     _width:
  6507  0037                     	ds	2
  6508  0039                     _prec:
  6509  0039                     	ds	2
  6510  003B                     _flags:
  6511  003B                     	ds	2
  6512  003D                     _p_state:
  6513  003D                     	ds	2
  6514  003F                     I2C2_ISR@pi2c_buf_ptr:
  6515  003F                     	ds	2
  6516  0041                     _currentState:
  6517  0041                     	ds	1
  6518  0042                     OLED_Putc@arrowCnt:
  6519  0042                     	ds	1
  6520  0043                     _printfEnableUART:
  6521  0043                     	ds	1
  6522  0044                     I2C2_ISR@i2c_10bit_address_restart:
  6523  0044                     	ds	1
  6524  0045                     I2C2_ISR@i2c_bytes_left:
  6525  0045                     	ds	1
  6526  0046                     _p_i2c2_current:
  6527  0046                     	ds	1
  6528  0047                     _p_i2c2_trb_current:
  6529  0047                     	ds	1
  6530  0048                     _i2c2_trb_count:
  6531  0048                     	ds	1
  6532  0049                     _i2c2_state:
  6533  0049                     	ds	1
  6534  004A                     _eusart1RxLastError:
  6535  004A                     	ds	1
  6536  004B                     _eusart1RxCount:
  6537  004B                     	ds	1
  6538  004C                     _eusart1RxTail:
  6539  004C                     	ds	1
  6540  004D                     _eusart1TxTail:
  6541  004D                     	ds	1
  6542  004E                     I2C2_MasterRead@trBlock:
  6543  004E                     	ds	5
  6544  0053                     I2C2_MasterWrite@trBlock:
  6545  0053                     	ds	5
  6546  0058                     _i2c2_tr_queue:
  6547  0058                     	ds	4
  6548  005C                     I2C2_ISR@i2c_address:
  6549  005C                     	ds	2
  6550                           
  6551                           	psect	dataBANK0
  6552  005E                     __pdataBANK0:
  6553  005E                     RTC_IsTempConvDone@F8248:
  6554  005E                     	ds	2
  6555  0060                     RTC_ConvertTemp@F8244:
  6556  0060                     	ds	2
  6557  0062                     RTC_Init@F8216:
  6558  0062                     	ds	2
  6559  0064                     _previousState:
  6560  0064                     	ds	1
  6561  0065                     _printfEnableOLED:
  6562  0065                     	ds	1
  6563  0066                     BTN_GetPosEdge@flags:
  6564  0066                     	ds	1
  6565                           
  6566                           	psect	bssBANK1
  6567  00A0                     __pbssBANK1:
  6568  00A0                     _softTimer:
  6569  00A0                     	ds	42
  6570  00CA                     _eusart1RxBuffer:
  6571  00CA                     	ds	8
  6572                           
  6573                           	psect	bssBANK2
  6574  0120                     __pbssBANK2:
  6575  0120                     _dbuf:
  6576  0120                     	ds	32
  6577                           
  6578                           	psect	inittext
  6579  1BA3                     init_ram:
  6580  1BA3  00F4               	movwf	btemp
  6581  1BA4                     initloop:
  6582  1BA4  0012               	moviw fsr0++
  6583  1BA5  001E               	movwi fsr1++
  6584  1BA6  0BF4               	decfsz	btemp,f
  6585  1BA7  2BA4               	goto	initloop
  6586  1BA8  3400               	retlw	0
  6587                           
  6588                           	psect	clrtext
  6589  1B9D                     clear_ram0:	
  6590                           ;	Called with FSR0 containing the base address, and
  6591                           ;	WREG with the size to clear
  6592                           
  6593  1B9D  0064               	clrwdt	;clear the watchdog before getting into this loop
  6594  1B9E                     clrloop0:
  6595  1B9E  0180               	clrf	0	;clear RAM location pointed to by FSR
  6596  1B9F  3101               	addfsr 0,1
  6597  1BA0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6598  1BA1  2B9E               	goto	clrloop0	;have we reached the end yet?
  6599  1BA2  3400               	retlw	0	;all done for this memory range, return
  6600                           
  6601                           	psect	cstackCOMMON
  6602  0000                     __pcstackCOMMON:
  6603  0000                     ?_INTERRUPT_InterruptManager:
  6604                           
  6605                           	psect	cstackBANK0
  6606  0067                     __pcstackBANK0:	
  6607                           ; 1 bytes @ 0x0
  6608                           
  6609  0067                     ??_INTERRUPT_InterruptManager:
  6610                           
  6611                           ; 1 bytes @ 0x0
  6612  0067                     	ds	5
  6613                           
  6614                           	psect	maintext
  6615  00A0                     __pmaintext:	
  6616 ;;
  6617 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  6618 ;;
  6619 ;; *************** function _main *****************
  6620 ;; Defined at:
  6621 ;;		line 77 in file "main.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;		None
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  myState         1  [STACK] enum E8747
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      void 
  6628 ;; Registers used:
  6629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10
      +, btemp+11, ___BTEMP12, ___BTEMP13, ___BTEMP14, ___BTEMP15, ___BTEMP16, ___BTEMP17, ___BTEMP18, ___BTEMP19, ___BTEMP36, 
      +___BTEMP37, ___BTEMP38, ___BTEMP39, ___BTEMP40, ___BTEMP41, ___BTEMP42, ___BTEMP43, pclath
  6630 ;; Tracked objects:
  6631 ;;		On entry : B3F/0
  6632 ;;		On exit  : 3F/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;Total ram usage:        0 bytes
  6640 ;; Hardware stack levels required when called:   20
  6641 ;; This function calls:
  6642 ;;		_ADC_GetConversion
  6643 ;;		_BTN_GetPosEdge
  6644 ;;		_EUSART1_SetRxInterruptHandler
  6645 ;;		_OLED_Clear
  6646 ;;		_OLED_CursorOn
  6647 ;;		_OLED_GotoXY
  6648 ;;		_OLED_SelectROM
  6649 ;;		_PBA_ConfigPrintf
  6650 ;;		_PBA_Init
  6651 ;;		_RTC_ConvertTemp
  6652 ;;		_RTC_GetHours
  6653 ;;		_RTC_GetMinutes
  6654 ;;		_RTC_GetSeconds
  6655 ;;		_RTC_GetTemp
  6656 ;;		_RTC_IsTempConvDone
  6657 ;;		_RTC_SetHours
  6658 ;;		_RTC_SetMinutes
  6659 ;;		_RTC_SetSeconds
  6660 ;;		_STATEMACHINE_Init
  6661 ;;		_STATEMACHINE_StateEntry
  6662 ;;		_STATEMACHINE_StateExit
  6663 ;;		_STATEMACHINE_Update
  6664 ;;		_SYSTICK_AddTimeoutHandler
  6665 ;;		_SYSTICK_Timeout
  6666 ;;		_SYSTICK_TimerLoadAndRun
  6667 ;;		_SYSTICK_TimerStop
  6668 ;;		___lwdiv
  6669 ;;		___lwmod
  6670 ;;		_printf
  6671 ;; This function is called by:
  6672 ;;		Startup code after reset
  6673 ;; This function uses a reentrant model
  6674 ;;
  6675                           
  6676                           
  6677                           ;psect for function _main
  6678  00A0                     _main:
  6679                           
  6680                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6681  00A0  3141               	addfsr 1,1
  6682  00A1                     l5165:	
  6683                           ;incstack = 0
  6684 ;; hardware stack exceeded
  6685                           ; Regs used in _main: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+3+btemp+8-___BTEMP19+___BTE
      +                          MP36-___BTEMP43+pclath]
  6686                           
  6687                           
  6688                           ;main.c: 79:     PBA_Init();
  6689  00A1  319D  2504  3180   	fcall	_PBA_Init
  6690  00A4                     l5167:
  6691                           
  6692                           ;main.c: 80:     state_t myState = S_TASTER;
  6693                           ;stkvar	_myState @ sp[(-1)+0]
  6694  00A4  3000               	movlw	0
  6695  00A5  3FFF               	movwi [-1]fsr1
  6696  00A6                     l5169:
  6697                           
  6698                           ;main.c: 81:     STATEMACHINE_Init(&myState);
  6699                           ;stkvar	_myState @ sp[(-1)+0]
  6700  00A6  30FF               	movlw	255
  6701  00A7  0706               	addwf	6,w
  6702  00A8  00F6               	movwf	btemp+2
  6703  00A9  30FF               	movlw	255
  6704  00AA  3D07               	addwfc	7,w
  6705  00AB  00F7               	movwf	btemp+3
  6706  00AC  0876               	movf	btemp+2,w
  6707  00AD  001E               	movwi fsr1++
  6708  00AE  0877               	movf	btemp+3,w
  6709  00AF  001E               	movwi fsr1++
  6710  00B0  319C  2435  3180   	fcall	_STATEMACHINE_Init
  6711  00B3                     l5171:
  6712                           
  6713                           ;main.c: 82:     SYSTICK_TimerLoadAndRun(LOOP_TIMER,10);
  6714  00B3  300A               	movlw	10
  6715  00B4  001E               	movwi fsr1++
  6716  00B5  3000               	movlw	0
  6717  00B6  001E               	movwi fsr1++
  6718  00B7  3000               	movlw	0
  6719  00B8  001E               	movwi fsr1++
  6720  00B9  3000               	movlw	0
  6721  00BA  001E               	movwi fsr1++
  6722  00BB  3000               	movlw	0
  6723  00BC  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  6724  00BF                     l5173:
  6725  00BF  3000               	movlw	0
  6726  00C0  3193  2356  3180   	fcall	_SYSTICK_Timeout
  6727  00C3  3A00               	xorlw	0
  6728  00C4  1903               	skipnz
  6729  00C5  28C7               	goto	u4191
  6730  00C6  28C8               	goto	u4190
  6731  00C7                     u4191:
  6732  00C7  28BF               	goto	l5173
  6733  00C8                     u4190:
  6734  00C8                     l5175:
  6735                           
  6736                           ;main.c: 86:         SYSTICK_TimerLoadAndRun(LOOP_TIMER,10);
  6737  00C8  300A               	movlw	10
  6738  00C9  001E               	movwi fsr1++
  6739  00CA  3000               	movlw	0
  6740  00CB  001E               	movwi fsr1++
  6741  00CC  3000               	movlw	0
  6742  00CD  001E               	movwi fsr1++
  6743  00CE  3000               	movlw	0
  6744  00CF  001E               	movwi fsr1++
  6745  00D0  3000               	movlw	0
  6746  00D1  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  6747                           
  6748                           ;main.c: 87:         switch(myState){
  6749  00D4  2C8E               	goto	l5415
  6750  00D5                     l5177:
  6751                           
  6752                           ;main.c: 90:                 if(STATEMACHINE_StateEntry()){
  6753  00D5  319C  2410  3180   	fcall	_STATEMACHINE_StateEntry
  6754  00D8  3A00               	xorlw	0
  6755  00D9  1903               	skipnz
  6756  00DA  28DC               	goto	u4201
  6757  00DB  28DD               	goto	u4200
  6758  00DC                     u4201:
  6759  00DC  28FC               	goto	l5187
  6760  00DD                     u4200:
  6761  00DD                     l5179:
  6762                           
  6763                           ;main.c: 91:                     printf("Taster und LEDs Test\n\nweiter mit T0...");
  6764  00DD  304D               	movlw	low (STR_1| (0+32768))
  6765  00DE  001E               	movwi fsr1++
  6766  00DF  3099               	movlw	high (STR_1| (0+32768))
  6767  00E0  001E               	movwi fsr1++
  6768  00E1  3002               	movlw	2
  6769  00E2  001E               	movwi fsr1++
  6770  00E3  319F  270F  3180   	fcall	_printf
  6771  00E6                     l5181:
  6772                           
  6773                           ;main.c: 92:                     LATDbits.LATD0 = 1;
  6774  00E6  141B               	bsf	27,0	;volatile
  6775  00E7                     l5183:
  6776                           
  6777                           ;main.c: 93:                     LATEbits.LATE0 = LATEbits.LATE1 = 1;
  6778  00E7  149C               	bsf	28,1	;volatile
  6779  00E8  189C               	btfsc	28,1	;volatile
  6780  00E9  28EB               	goto	u4211
  6781  00EA  28EE               	goto	u4210
  6782  00EB                     u4211:
  6783  00EB  0140               	movlb	0	; select bank0
  6784  00EC  141C               	bsf	28,0	;volatile
  6785  00ED  28F0               	goto	u4224
  6786  00EE                     u4210:
  6787  00EE  0140               	movlb	0	; select bank0
  6788  00EF  101C               	bcf	28,0	;volatile
  6789  00F0                     u4224:
  6790  00F0                     l5185:
  6791                           
  6792                           ;main.c: 94:                     SYSTICK_TimerLoadAndRun(BLINK_TIMER, 500);
  6793  00F0  30F4               	movlw	244
  6794  00F1  001E               	movwi fsr1++
  6795  00F2  3001               	movlw	1
  6796  00F3  001E               	movwi fsr1++
  6797  00F4  3000               	movlw	0
  6798  00F5  001E               	movwi fsr1++
  6799  00F6  3000               	movlw	0
  6800  00F7  001E               	movwi fsr1++
  6801  00F8  3001               	movlw	1
  6802  00F9  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  6803  00FC                     l5187:
  6804                           
  6805                           ;main.c: 98:                 LATD |= PORTC & 0xFE;
  6806  00FC  0140               	movlb	0	; select bank0
  6807  00FD  080E               	movf	14,w	;volatile
  6808  00FE  39FE               	andlw	254
  6809  00FF  049B               	iorwf	27,f	;volatile
  6810  0100                     l5189:
  6811                           
  6812                           ;main.c: 99:                 LATD &= PORTC | 0x01;
  6813  0100  080E               	movf	14,w	;volatile
  6814  0101  3801               	iorlw	1
  6815  0102  059B               	andwf	27,f	;volatile
  6816  0103                     l5191:
  6817                           
  6818                           ;main.c: 102:                 if(SYSTICK_Timeout(BLINK_TIMER)){
  6819  0103  3001               	movlw	1
  6820  0104  3193  2356  3180   	fcall	_SYSTICK_Timeout
  6821  0107  3A00               	xorlw	0
  6822  0108  1903               	skipnz
  6823  0109  290B               	goto	u4231
  6824  010A  290C               	goto	u4230
  6825  010B                     u4231:
  6826  010B  2924               	goto	l5197
  6827  010C                     u4230:
  6828  010C                     l5193:
  6829                           
  6830                           ;main.c: 103:                     LATDbits.LATD0 = !LATDbits.LATD0;
  6831  010C  1003               	clrc
  6832  010D  0140               	movlb	0	; select bank0
  6833  010E  1C1B               	btfss	27,0	;volatile
  6834  010F  1403               	setc
  6835  0110  1803               	btfsc	3,0
  6836  0111  2913               	goto	u4241
  6837  0112  2916               	goto	u4240
  6838  0113                     u4241:
  6839  0113  0140               	movlb	0	; select bank0
  6840  0114  141B               	bsf	27,0	;volatile
  6841  0115  2918               	goto	u4254
  6842  0116                     u4240:
  6843  0116  0140               	movlb	0	; select bank0
  6844  0117  101B               	bcf	27,0	;volatile
  6845  0118                     u4254:
  6846  0118                     l5195:
  6847                           
  6848                           ;main.c: 104:                     SYSTICK_TimerLoadAndRun(BLINK_TIMER, 500);
  6849  0118  30F4               	movlw	244
  6850  0119  001E               	movwi fsr1++
  6851  011A  3001               	movlw	1
  6852  011B  001E               	movwi fsr1++
  6853  011C  3000               	movlw	0
  6854  011D  001E               	movwi fsr1++
  6855  011E  3000               	movlw	0
  6856  011F  001E               	movwi fsr1++
  6857  0120  3001               	movlw	1
  6858  0121  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  6859  0124                     l5197:
  6860                           
  6861                           ;main.c: 108:                 if(BTN_GetPosEdge(0)){
  6862  0124  3000               	movlw	0
  6863  0125  3192  22E2  3180   	fcall	_BTN_GetPosEdge
  6864  0128  3A00               	xorlw	0
  6865  0129  1903               	skipnz
  6866  012A  292C               	goto	u4261
  6867  012B  292D               	goto	u4260
  6868  012C                     u4261:
  6869  012C  292F               	goto	l5201
  6870  012D                     u4260:
  6871  012D                     l5199:
  6872                           
  6873                           ;main.c: 109:                     myState = S_SUMMER;
  6874  012D  3001               	movlw	1
  6875                           
  6876                           ;stkvar	_myState @ sp[(-1)+0]
  6877  012E  3FFF               	movwi [-1]fsr1
  6878  012F                     l5201:
  6879                           
  6880                           ;main.c: 113:                 if(STATEMACHINE_StateExit()){
  6881  012F  319C  2450  3180   	fcall	_STATEMACHINE_StateExit
  6882  0132  3A00               	xorlw	0
  6883  0133  1903               	skipnz
  6884  0134  2936               	goto	u4271
  6885  0135  2937               	goto	u4270
  6886  0136                     u4271:
  6887  0136  2CAA               	goto	l5417
  6888  0137                     u4270:
  6889  0137                     l5203:
  6890                           
  6891                           ;main.c: 114:                     OLED_Clear();
  6892  0137  319C  245F  3180   	fcall	_OLED_Clear
  6893  013A                     l5205:
  6894                           
  6895                           ;main.c: 115:                     SYSTICK_TimerStop(BLINK_TIMER);
  6896  013A  3001               	movlw	1
  6897  013B  319D  251A  3180   	fcall	_SYSTICK_TimerStop
  6898  013E                     l5207:
  6899                           
  6900                           ;main.c: 116:                     LATD = 0;
  6901  013E  0140               	movlb	0	; select bank0
  6902  013F  019B               	clrf	27	;volatile
  6903  0140                     l5209:
  6904                           
  6905                           ;main.c: 117:                     LATEbits.LATE0 = LATEbits.LATE1 = 0;
  6906  0140  109C               	bcf	28,1	;volatile
  6907  0141  101C               	bcf	28,0	;volatile
  6908  0142  2CAA               	goto	l5417
  6909  0143                     l5211:
  6910                           
  6911                           ;main.c: 123:                 if(STATEMACHINE_StateEntry()){
  6912  0143  319C  2410  3180   	fcall	_STATEMACHINE_StateEntry
  6913  0146  3A00               	xorlw	0
  6914  0147  1903               	skipnz
  6915  0148  294A               	goto	u4281
  6916  0149  294B               	goto	u4280
  6917  014A                     u4281:
  6918  014A  2976               	goto	l5223
  6919  014B                     u4280:
  6920  014B                     l5213:
  6921                           
  6922                           ;main.c: 124:                     printf("Summer Test\n\n\nweiter mit T0...");
  6923  014B  30BF               	movlw	low (STR_2| (0+32768))
  6924  014C  001E               	movwi fsr1++
  6925  014D  3099               	movlw	high (STR_2| (0+32768))
  6926  014E  001E               	movwi fsr1++
  6927  014F  3002               	movlw	2
  6928  0150  001E               	movwi fsr1++
  6929  0151  319F  270F  3180   	fcall	_printf
  6930  0154                     l5215:
  6931                           
  6932                           ;main.c: 127:                     SYSTICK_TimerLoadAndRun(SUMMER_TIMER, 1);
  6933  0154  3001               	movlw	1
  6934  0155  001E               	movwi fsr1++
  6935  0156  3000               	movlw	0
  6936  0157  001E               	movwi fsr1++
  6937  0158  3000               	movlw	0
  6938  0159  001E               	movwi fsr1++
  6939  015A  3000               	movlw	0
  6940  015B  001E               	movwi fsr1++
  6941  015C  3002               	movlw	2
  6942  015D  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  6943  0160                     l5217:
  6944                           
  6945                           ;main.c: 128:                     SYSTICK_AddTimeoutHandler(SUMMER_TIMER, Summer);
  6946  0160  306E               	movlw	low _Summer
  6947  0161  001E               	movwi fsr1++
  6948  0162  301C               	movlw	high _Summer
  6949  0163  001E               	movwi fsr1++
  6950  0164  3002               	movlw	2
  6951  0165  319C  248F  3180   	fcall	_SYSTICK_AddTimeoutHandler
  6952  0168                     l5219:
  6953                           
  6954                           ;main.c: 129:                     SYSTICK_TimerLoadAndRun(BLINK_TIMER, 500);
  6955  0168  30F4               	movlw	244
  6956  0169  001E               	movwi fsr1++
  6957  016A  3001               	movlw	1
  6958  016B  001E               	movwi fsr1++
  6959  016C  3000               	movlw	0
  6960  016D  001E               	movwi fsr1++
  6961  016E  3000               	movlw	0
  6962  016F  001E               	movwi fsr1++
  6963  0170  3001               	movlw	1
  6964  0171  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  6965  0174                     l5221:
  6966                           
  6967                           ;main.c: 130:                     LATDbits.LATD1 = 1;
  6968  0174  0140               	movlb	0	; select bank0
  6969  0175  149B               	bsf	27,1	;volatile
  6970  0176                     l5223:
  6971                           
  6972                           ;main.c: 133:                 if(SYSTICK_Timeout(BLINK_TIMER)){
  6973  0176  3001               	movlw	1
  6974  0177  3193  2356  3180   	fcall	_SYSTICK_Timeout
  6975  017A  3A00               	xorlw	0
  6976  017B  1903               	skipnz
  6977  017C  297E               	goto	u4291
  6978  017D  297F               	goto	u4290
  6979  017E                     u4291:
  6980  017E  2997               	goto	l5229
  6981  017F                     u4290:
  6982  017F                     l5225:
  6983                           
  6984                           ;main.c: 134:                     LATDbits.LATD1 = !LATDbits.LATD1;
  6985  017F  1003               	clrc
  6986  0180  0140               	movlb	0	; select bank0
  6987  0181  1C9B               	btfss	27,1	;volatile
  6988  0182  1403               	setc
  6989  0183  1803               	btfsc	3,0
  6990  0184  2986               	goto	u4301
  6991  0185  2989               	goto	u4300
  6992  0186                     u4301:
  6993  0186  0140               	movlb	0	; select bank0
  6994  0187  149B               	bsf	27,1	;volatile
  6995  0188  298B               	goto	u4314
  6996  0189                     u4300:
  6997  0189  0140               	movlb	0	; select bank0
  6998  018A  109B               	bcf	27,1	;volatile
  6999  018B                     u4314:
  7000  018B                     l5227:
  7001                           
  7002                           ;main.c: 135:                     SYSTICK_TimerLoadAndRun(BLINK_TIMER,500);
  7003  018B  30F4               	movlw	244
  7004  018C  001E               	movwi fsr1++
  7005  018D  3001               	movlw	1
  7006  018E  001E               	movwi fsr1++
  7007  018F  3000               	movlw	0
  7008  0190  001E               	movwi fsr1++
  7009  0191  3000               	movlw	0
  7010  0192  001E               	movwi fsr1++
  7011  0193  3001               	movlw	1
  7012  0194  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  7013  0197                     l5229:
  7014                           
  7015                           ;main.c: 139:                 if(BTN_GetPosEdge(0)){
  7016  0197  3000               	movlw	0
  7017  0198  3192  22E2  3180   	fcall	_BTN_GetPosEdge
  7018  019B  3A00               	xorlw	0
  7019  019C  1903               	skipnz
  7020  019D  299F               	goto	u4321
  7021  019E  29A0               	goto	u4320
  7022  019F                     u4321:
  7023  019F  29A2               	goto	l5233
  7024  01A0                     u4320:
  7025  01A0                     l5231:
  7026                           
  7027                           ;main.c: 140:                     myState = S_RTC;
  7028  01A0  3002               	movlw	2
  7029                           
  7030                           ;stkvar	_myState @ sp[(-1)+0]
  7031  01A1  3FFF               	movwi [-1]fsr1
  7032  01A2                     l5233:
  7033                           
  7034                           ;main.c: 144:                 if(STATEMACHINE_StateExit()){
  7035  01A2  319C  2450  3180   	fcall	_STATEMACHINE_StateExit
  7036  01A5  3A00               	xorlw	0
  7037  01A6  1903               	skipnz
  7038  01A7  29A9               	goto	u4331
  7039  01A8  29AA               	goto	u4330
  7040  01A9                     u4331:
  7041  01A9  2CAA               	goto	l5417
  7042  01AA                     u4330:
  7043  01AA                     l5235:
  7044                           
  7045                           ;main.c: 145:                     OLED_Clear();
  7046  01AA  319C  245F  3180   	fcall	_OLED_Clear
  7047  01AD                     l5237:
  7048                           
  7049                           ;main.c: 146:                     SYSTICK_TimerStop(BLINK_TIMER);
  7050  01AD  3001               	movlw	1
  7051  01AE  319D  251A  3180   	fcall	_SYSTICK_TimerStop
  7052  01B1                     l5239:
  7053                           
  7054                           ;main.c: 147:                     SYSTICK_TimerStop(SUMMER_TIMER);
  7055  01B1  3002               	movlw	2
  7056  01B2  319D  251A  3180   	fcall	_SYSTICK_TimerStop
  7057  01B5                     l5241:
  7058                           
  7059                           ;main.c: 148:                     LATD = 0;
  7060  01B5  0140               	movlb	0	; select bank0
  7061  01B6  019B               	clrf	27	;volatile
  7062  01B7  2CAA               	goto	l5417
  7063  01B8                     l5243:
  7064                           
  7065                           ;main.c: 155:                 if(STATEMACHINE_StateEntry()){
  7066  01B8  319C  2410  3180   	fcall	_STATEMACHINE_StateEntry
  7067  01BB  3A00               	xorlw	0
  7068  01BC  1903               	skipnz
  7069  01BD  29BF               	goto	u4341
  7070  01BE  29C0               	goto	u4340
  7071  01BF                     u4341:
  7072  01BF  29E2               	goto	l5257
  7073  01C0                     u4340:
  7074  01C0                     l5245:
  7075                           
  7076                           ;main.c: 156:                     LATDbits.LATD2 = 1;
  7077  01C0  151B               	bsf	27,2	;volatile
  7078  01C1                     l5247:
  7079                           
  7080                           ;main.c: 157:                     SYSTICK_TimerLoadAndRun(BLINK_TIMER, 500);
  7081  01C1  30F4               	movlw	244
  7082  01C2  001E               	movwi fsr1++
  7083  01C3  3001               	movlw	1
  7084  01C4  001E               	movwi fsr1++
  7085  01C5  3000               	movlw	0
  7086  01C6  001E               	movwi fsr1++
  7087  01C7  3000               	movlw	0
  7088  01C8  001E               	movwi fsr1++
  7089  01C9  3001               	movlw	1
  7090  01CA  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  7091  01CD                     l5249:
  7092                           
  7093                           ;main.c: 158:                     printf("RTC Test\nVerstrichene Zeit:\n\nweiter mit T0.
      +                          ..");
  7094  01CD  301F               	movlw	low (STR_3| (0+32768))
  7095  01CE  001E               	movwi fsr1++
  7096  01CF  3099               	movlw	high (STR_3| (0+32768))
  7097  01D0  001E               	movwi fsr1++
  7098  01D1  3002               	movlw	2
  7099  01D2  001E               	movwi fsr1++
  7100  01D3  319F  270F  3180   	fcall	_printf
  7101  01D6                     l5251:
  7102                           
  7103                           ;main.c: 159:                     RTC_SetHours(0);
  7104  01D6  3000               	movlw	0
  7105  01D7  3192  2276  3180   	fcall	_RTC_SetHours
  7106  01DA                     l5253:
  7107                           
  7108                           ;main.c: 160:                     RTC_SetMinutes(0);
  7109  01DA  3000               	movlw	0
  7110  01DB  3192  2212  3180   	fcall	_RTC_SetMinutes
  7111  01DE                     l5255:
  7112                           
  7113                           ;main.c: 161:                     RTC_SetSeconds(0);
  7114  01DE  3000               	movlw	0
  7115  01DF  3192  2244  3180   	fcall	_RTC_SetSeconds
  7116  01E2                     l5257:
  7117                           
  7118                           ;main.c: 165:                 OLED_GotoXY(0,2);
  7119  01E2  3002               	movlw	2
  7120  01E3  001E               	movwi fsr1++
  7121  01E4  3000               	movlw	0
  7122  01E5  3191  2127  3180   	fcall	_OLED_GotoXY
  7123  01E8                     l5259:
  7124                           
  7125                           ;main.c: 166:                 printf("%02i:%02i:%02i", RTC_GetHours(), RTC_GetMinutes(),
      +                           RTC_GetSeconds());
  7126  01E8  3195  25C6  3180   	fcall	_RTC_GetSeconds
  7127  01EB  00FE               	movwf	btemp+10
  7128  01EC  01FF               	clrf	btemp+11
  7129  01ED  087E               	movf	wtemp5,w
  7130  01EE  001E               	movwi fsr1++
  7131  01EF  087F               	movf	wtemp5+1,w
  7132  01F0  001E               	movwi fsr1++
  7133  01F1  3195  2577  3180   	fcall	_RTC_GetMinutes
  7134  01F4  00FE               	movwf	btemp+10
  7135  01F5  01FF               	clrf	btemp+11
  7136  01F6  087E               	movf	wtemp5,w
  7137  01F7  001E               	movwi fsr1++
  7138  01F8  087F               	movf	wtemp5+1,w
  7139  01F9  001E               	movwi fsr1++
  7140  01FA  3196  2615  3180   	fcall	_RTC_GetHours
  7141  01FD  00FE               	movwf	btemp+10
  7142  01FE  01FF               	clrf	btemp+11
  7143  01FF  087E               	movf	wtemp5,w
  7144  0200  001E               	movwi fsr1++
  7145  0201  087F               	movf	wtemp5+1,w
  7146  0202  001E               	movwi fsr1++
  7147  0203  3019               	movlw	low (STR_4| (0+32768))
  7148  0204  001E               	movwi fsr1++
  7149  0205  309A               	movlw	high (STR_4| (0+32768))
  7150  0206  001E               	movwi fsr1++
  7151  0207  3008               	movlw	8
  7152  0208  001E               	movwi fsr1++
  7153  0209  319F  270F  3180   	fcall	_printf
  7154  020C                     l5261:
  7155                           
  7156                           ;main.c: 169:                 if(SYSTICK_Timeout(BLINK_TIMER)){
  7157  020C  3001               	movlw	1
  7158  020D  3193  2356  3180   	fcall	_SYSTICK_Timeout
  7159  0210  3A00               	xorlw	0
  7160  0211  1903               	skipnz
  7161  0212  2A14               	goto	u4351
  7162  0213  2A15               	goto	u4350
  7163  0214                     u4351:
  7164  0214  2A2D               	goto	l5267
  7165  0215                     u4350:
  7166  0215                     l5263:
  7167                           
  7168                           ;main.c: 170:                     SYSTICK_TimerLoadAndRun(BLINK_TIMER, 500);
  7169  0215  30F4               	movlw	244
  7170  0216  001E               	movwi fsr1++
  7171  0217  3001               	movlw	1
  7172  0218  001E               	movwi fsr1++
  7173  0219  3000               	movlw	0
  7174  021A  001E               	movwi fsr1++
  7175  021B  3000               	movlw	0
  7176  021C  001E               	movwi fsr1++
  7177  021D  3001               	movlw	1
  7178  021E  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  7179  0221                     l5265:
  7180                           
  7181                           ;main.c: 171:                     LATDbits.LATD2 = !LATDbits.LATD2;
  7182  0221  1003               	clrc
  7183  0222  0140               	movlb	0	; select bank0
  7184  0223  1D1B               	btfss	27,2	;volatile
  7185  0224  1403               	setc
  7186  0225  1803               	btfsc	3,0
  7187  0226  2A28               	goto	u4361
  7188  0227  2A2B               	goto	u4360
  7189  0228                     u4361:
  7190  0228  0140               	movlb	0	; select bank0
  7191  0229  151B               	bsf	27,2	;volatile
  7192  022A  2A2D               	goto	u4374
  7193  022B                     u4360:
  7194  022B  0140               	movlb	0	; select bank0
  7195  022C  111B               	bcf	27,2	;volatile
  7196  022D                     u4374:
  7197  022D                     l5267:
  7198                           
  7199                           ;main.c: 175:                 if(BTN_GetPosEdge(0)){
  7200  022D  3000               	movlw	0
  7201  022E  3192  22E2  3180   	fcall	_BTN_GetPosEdge
  7202  0231  3A00               	xorlw	0
  7203  0232  1903               	skipnz
  7204  0233  2A35               	goto	u4381
  7205  0234  2A36               	goto	u4380
  7206  0235                     u4381:
  7207  0235  2A38               	goto	l5271
  7208  0236                     u4380:
  7209  0236                     l5269:
  7210                           
  7211                           ;main.c: 176:                     myState = S_TEMP_RTC;
  7212  0236  3003               	movlw	3
  7213                           
  7214                           ;stkvar	_myState @ sp[(-1)+0]
  7215  0237  3FFF               	movwi [-1]fsr1
  7216  0238                     l5271:
  7217                           
  7218                           ;main.c: 180:                 if(STATEMACHINE_StateExit()){
  7219  0238  319C  2450  3180   	fcall	_STATEMACHINE_StateExit
  7220  023B  3A00               	xorlw	0
  7221  023C  1903               	skipnz
  7222  023D  2A3F               	goto	u4391
  7223  023E  2A40               	goto	u4390
  7224  023F                     u4391:
  7225  023F  2CAA               	goto	l5417
  7226  0240                     u4390:
  7227  0240                     l5273:
  7228                           
  7229                           ;main.c: 181:                     OLED_Clear();
  7230  0240  319C  245F  3180   	fcall	_OLED_Clear
  7231  0243                     l5275:
  7232                           
  7233                           ;main.c: 182:                     SYSTICK_TimerStop(BLINK_TIMER);
  7234  0243  3001               	movlw	1
  7235  0244  319D  251A  3180   	fcall	_SYSTICK_TimerStop
  7236  0247                     l5277:
  7237                           
  7238                           ;main.c: 183:                     LATDbits.LATD2 = 0;
  7239  0247  0140               	movlb	0	; select bank0
  7240  0248  111B               	bcf	27,2	;volatile
  7241  0249  2CAA               	goto	l5417
  7242  024A                     l5279:
  7243                           
  7244                           ;main.c: 189:                 if(STATEMACHINE_StateEntry()){
  7245  024A  319C  2410  3180   	fcall	_STATEMACHINE_StateEntry
  7246  024D  3A00               	xorlw	0
  7247  024E  1903               	skipnz
  7248  024F  2A51               	goto	u4401
  7249  0250  2A52               	goto	u4400
  7250  0251                     u4401:
  7251  0251  2A6D               	goto	l5289
  7252  0252                     u4400:
  7253  0252                     l5281:
  7254                           
  7255                           ;main.c: 190:                     printf("RTC Temperatur Test\nTemperatur:\n\nweiter mit
      +                           T0...");
  7256  0252  3000               	movlw	low (STR_5| (0+32768))
  7257  0253  001E               	movwi fsr1++
  7258  0254  3098               	movlw	high (STR_5| (0+32768))
  7259  0255  001E               	movwi fsr1++
  7260  0256  3002               	movlw	2
  7261  0257  001E               	movwi fsr1++
  7262  0258  319F  270F  3180   	fcall	_printf
  7263  025B                     l5283:
  7264                           
  7265                           ;main.c: 191:                     SYSTICK_TimerLoadAndRun(BLINK_TIMER, 500);
  7266  025B  30F4               	movlw	244
  7267  025C  001E               	movwi fsr1++
  7268  025D  3001               	movlw	1
  7269  025E  001E               	movwi fsr1++
  7270  025F  3000               	movlw	0
  7271  0260  001E               	movwi fsr1++
  7272  0261  3000               	movlw	0
  7273  0262  001E               	movwi fsr1++
  7274  0263  3001               	movlw	1
  7275  0264  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  7276  0267                     l5285:
  7277                           
  7278                           ;main.c: 192:                     LATDbits.LATD3 = 1;
  7279  0267  0140               	movlb	0	; select bank0
  7280  0268  159B               	bsf	27,3	;volatile
  7281  0269                     l5287:
  7282                           
  7283                           ;main.c: 194:                     OLED_SelectROM(ROMC);
  7284  0269  3002               	movlw	2
  7285  026A  3193  23CF  3180   	fcall	_OLED_SelectROM
  7286  026D                     l5289:
  7287                           
  7288                           ;main.c: 198:                 if(SYSTICK_Timeout(BLINK_TIMER)){
  7289  026D  3001               	movlw	1
  7290  026E  3193  2356  3180   	fcall	_SYSTICK_Timeout
  7291  0271  3A00               	xorlw	0
  7292  0272  1903               	skipnz
  7293  0273  2A75               	goto	u4411
  7294  0274  2A76               	goto	u4410
  7295  0275                     u4411:
  7296  0275  2A91               	goto	l5297
  7297  0276                     u4410:
  7298  0276                     l5291:
  7299                           
  7300                           ;main.c: 199:                     SYSTICK_TimerLoadAndRun(BLINK_TIMER, 500);
  7301  0276  30F4               	movlw	244
  7302  0277  001E               	movwi fsr1++
  7303  0278  3001               	movlw	1
  7304  0279  001E               	movwi fsr1++
  7305  027A  3000               	movlw	0
  7306  027B  001E               	movwi fsr1++
  7307  027C  3000               	movlw	0
  7308  027D  001E               	movwi fsr1++
  7309  027E  3001               	movlw	1
  7310  027F  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  7311  0282                     l5293:
  7312                           
  7313                           ;main.c: 200:                     RTC_ConvertTemp();
  7314  0282  3191  21B2  3180   	fcall	_RTC_ConvertTemp
  7315  0285                     l5295:
  7316                           
  7317                           ;main.c: 201:                     LATDbits.LATD3 = !LATDbits.LATD3;
  7318  0285  1003               	clrc
  7319  0286  0140               	movlb	0	; select bank0
  7320  0287  1D9B               	btfss	27,3	;volatile
  7321  0288  1403               	setc
  7322  0289  1803               	btfsc	3,0
  7323  028A  2A8C               	goto	u4421
  7324  028B  2A8F               	goto	u4420
  7325  028C                     u4421:
  7326  028C  0140               	movlb	0	; select bank0
  7327  028D  159B               	bsf	27,3	;volatile
  7328  028E  2A91               	goto	u4434
  7329  028F                     u4420:
  7330  028F  0140               	movlb	0	; select bank0
  7331  0290  119B               	bcf	27,3	;volatile
  7332  0291                     u4434:
  7333  0291                     l5297:
  7334                           
  7335                           ;main.c: 205:                 if(RTC_IsTempConvDone()){
  7336  0291  3196  26C3  3180   	fcall	_RTC_IsTempConvDone
  7337  0294  3A00               	xorlw	0
  7338  0295  1903               	skipnz
  7339  0296  2A98               	goto	u4441
  7340  0297  2A99               	goto	u4440
  7341  0298                     u4441:
  7342  0298  2AB7               	goto	l5303
  7343  0299                     u4440:
  7344  0299                     l5299:
  7345                           
  7346                           ;main.c: 206:                     OLED_GotoXY(11,1);
  7347  0299  3001               	movlw	1
  7348  029A  001E               	movwi fsr1++
  7349  029B  300B               	movlw	11
  7350  029C  3191  2127  3180   	fcall	_OLED_GotoXY
  7351  029F                     l5301:
  7352                           
  7353                           ;main.c: 207:                     printf("%3i%cC", RTC_GetTemp(), 0xDF);
  7354  029F  30DF               	movlw	223
  7355  02A0  001E               	movwi fsr1++
  7356  02A1  3000               	movlw	0
  7357  02A2  001E               	movwi fsr1++
  7358  02A3  3195  252B  3180   	fcall	_RTC_GetTemp
  7359  02A6  00FE               	movwf	btemp+10
  7360  02A7  01FF               	clrf	btemp+11
  7361  02A8  1BFE               	btfsc	btemp+10,7
  7362  02A9  03FF               	decf	btemp+11,f
  7363  02AA  087E               	movf	wtemp5,w
  7364  02AB  001E               	movwi fsr1++
  7365  02AC  087F               	movf	wtemp5+1,w
  7366  02AD  001E               	movwi fsr1++
  7367  02AE  3028               	movlw	low (STR_6| (0+32768))
  7368  02AF  001E               	movwi fsr1++
  7369  02B0  309A               	movlw	high (STR_6| (0+32768))
  7370  02B1  001E               	movwi fsr1++
  7371  02B2  3006               	movlw	6
  7372  02B3  001E               	movwi fsr1++
  7373  02B4  319F  270F  3180   	fcall	_printf
  7374  02B7                     l5303:
  7375                           
  7376                           ;main.c: 211:                 if(BTN_GetPosEdge(0)){
  7377  02B7  3000               	movlw	0
  7378  02B8  3192  22E2  3180   	fcall	_BTN_GetPosEdge
  7379  02BB  3A00               	xorlw	0
  7380  02BC  1903               	skipnz
  7381  02BD  2ABF               	goto	u4451
  7382  02BE  2AC0               	goto	u4450
  7383  02BF                     u4451:
  7384  02BF  2AC2               	goto	l5307
  7385  02C0                     u4450:
  7386  02C0                     l5305:
  7387                           
  7388                           ;main.c: 212:                     myState = S_POTI;
  7389  02C0  3004               	movlw	4
  7390                           
  7391                           ;stkvar	_myState @ sp[(-1)+0]
  7392  02C1  3FFF               	movwi [-1]fsr1
  7393  02C2                     l5307:
  7394                           
  7395                           ;main.c: 216:                 if(STATEMACHINE_StateExit()){
  7396  02C2  319C  2450  3180   	fcall	_STATEMACHINE_StateExit
  7397  02C5  3A00               	xorlw	0
  7398  02C6  1903               	skipnz
  7399  02C7  2AC9               	goto	u4461
  7400  02C8  2ACA               	goto	u4460
  7401  02C9                     u4461:
  7402  02C9  2CAA               	goto	l5417
  7403  02CA                     u4460:
  7404  02CA                     l5309:
  7405                           
  7406                           ;main.c: 217:                     OLED_SelectROM(ROMB);
  7407  02CA  3001               	movlw	1
  7408  02CB  3193  23CF  3180   	fcall	_OLED_SelectROM
  7409  02CE                     l5311:
  7410                           
  7411                           ;main.c: 218:                     OLED_Clear();
  7412  02CE  319C  245F  3180   	fcall	_OLED_Clear
  7413  02D1                     l5313:
  7414                           
  7415                           ;main.c: 219:                     SYSTICK_TimerStop(BLINK_TIMER);
  7416  02D1  3001               	movlw	1
  7417  02D2  319D  251A  3180   	fcall	_SYSTICK_TimerStop
  7418  02D5                     l5315:
  7419                           
  7420                           ;main.c: 220:                     LATDbits.LATD3 = 0;
  7421  02D5  0140               	movlb	0	; select bank0
  7422  02D6  119B               	bcf	27,3	;volatile
  7423  02D7  2CAA               	goto	l5417
  7424  02D8                     l5317:
  7425                           
  7426                           ;main.c: 226:                 if(STATEMACHINE_StateEntry()){
  7427  02D8  319C  2410  3180   	fcall	_STATEMACHINE_StateEntry
  7428  02DB  3A00               	xorlw	0
  7429  02DC  1903               	skipnz
  7430  02DD  2ADF               	goto	u4471
  7431  02DE  2AE0               	goto	u4470
  7432  02DF                     u4471:
  7433  02DF  2AF7               	goto	l5325
  7434  02E0                     u4470:
  7435  02E0                     l5319:
  7436                           
  7437                           ;main.c: 227:                     printf("Potentiometer Test\n\n\nweiter mit T0...");
  7438  02E0  3074               	movlw	low (STR_7| (0+32768))
  7439  02E1  001E               	movwi fsr1++
  7440  02E2  3099               	movlw	high (STR_7| (0+32768))
  7441  02E3  001E               	movwi fsr1++
  7442  02E4  3002               	movlw	2
  7443  02E5  001E               	movwi fsr1++
  7444  02E6  319F  270F  3180   	fcall	_printf
  7445  02E9                     l5321:
  7446                           
  7447                           ;main.c: 228:                     SYSTICK_TimerLoadAndRun(BLINK_TIMER, 500);
  7448  02E9  30F4               	movlw	244
  7449  02EA  001E               	movwi fsr1++
  7450  02EB  3001               	movlw	1
  7451  02EC  001E               	movwi fsr1++
  7452  02ED  3000               	movlw	0
  7453  02EE  001E               	movwi fsr1++
  7454  02EF  3000               	movlw	0
  7455  02F0  001E               	movwi fsr1++
  7456  02F1  3001               	movlw	1
  7457  02F2  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  7458  02F5                     l5323:
  7459                           
  7460                           ;main.c: 229:                     LATDbits.LATD4 = 1;
  7461  02F5  0140               	movlb	0	; select bank0
  7462  02F6  161B               	bsf	27,4	;volatile
  7463  02F7                     l5325:
  7464                           
  7465                           ;main.c: 233:                 if(SYSTICK_Timeout(BLINK_TIMER)){
  7466  02F7  3001               	movlw	1
  7467  02F8  3193  2356  3180   	fcall	_SYSTICK_Timeout
  7468  02FB  3A00               	xorlw	0
  7469  02FC  1903               	skipnz
  7470  02FD  2AFF               	goto	u4481
  7471  02FE  2B00               	goto	u4480
  7472  02FF                     u4481:
  7473  02FF  2B18               	goto	l5331
  7474  0300                     u4480:
  7475  0300                     l5327:
  7476                           
  7477                           ;main.c: 234:                     SYSTICK_TimerLoadAndRun(BLINK_TIMER, 500);
  7478  0300  30F4               	movlw	244
  7479  0301  001E               	movwi fsr1++
  7480  0302  3001               	movlw	1
  7481  0303  001E               	movwi fsr1++
  7482  0304  3000               	movlw	0
  7483  0305  001E               	movwi fsr1++
  7484  0306  3000               	movlw	0
  7485  0307  001E               	movwi fsr1++
  7486  0308  3001               	movlw	1
  7487  0309  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  7488  030C                     l5329:
  7489                           
  7490                           ;main.c: 235:                     LATDbits.LATD4 = !LATDbits.LATD4;
  7491  030C  1003               	clrc
  7492  030D  0140               	movlb	0	; select bank0
  7493  030E  1E1B               	btfss	27,4	;volatile
  7494  030F  1403               	setc
  7495  0310  1803               	btfsc	3,0
  7496  0311  2B13               	goto	u4491
  7497  0312  2B16               	goto	u4490
  7498  0313                     u4491:
  7499  0313  0140               	movlb	0	; select bank0
  7500  0314  161B               	bsf	27,4	;volatile
  7501  0315  2B18               	goto	u4504
  7502  0316                     u4490:
  7503  0316  0140               	movlb	0	; select bank0
  7504  0317  121B               	bcf	27,4	;volatile
  7505  0318                     u4504:
  7506  0318                     l5331:
  7507                           
  7508                           ;main.c: 239:                 OLED_GotoXY(0,1);
  7509  0318  3001               	movlw	1
  7510  0319  001E               	movwi fsr1++
  7511  031A  3000               	movlw	0
  7512  031B  3191  2127  3180   	fcall	_OLED_GotoXY
  7513  031E                     l5333:
  7514                           
  7515                           ;main.c: 240:                 printf("Pot0: %01i.%01iV", ADC_GetConversion(POT0)/310, (A
      +                          DC_GetConversion(POT0)/31)%10);
  7516  031E  3000               	movlw	0
  7517  031F  319E  262C  3180   	fcall	_ADC_GetConversion
  7518  0322  0874               	movf	wtemp0,w
  7519  0323  001E               	movwi fsr1++
  7520  0324  0875               	movf	wtemp0+1,w
  7521  0325  001E               	movwi fsr1++
  7522  0326  301F               	movlw	31
  7523  0327  001E               	movwi fsr1++
  7524  0328  3000               	movlw	0
  7525  0329  001E               	movwi fsr1++
  7526  032A  3188  2003  3180   	fcall	___lwdiv
  7527  032D  0874               	movf	wtemp0,w
  7528  032E  001E               	movwi fsr1++
  7529  032F  0875               	movf	wtemp0+1,w
  7530  0330  001E               	movwi fsr1++
  7531  0331  300A               	movlw	10
  7532  0332  001E               	movwi fsr1++
  7533  0333  3000               	movlw	0
  7534  0334  001E               	movwi fsr1++
  7535  0335  3194  2454  3180   	fcall	___lwmod
  7536  0338  0874               	movf	wtemp0,w
  7537  0339  001E               	movwi fsr1++
  7538  033A  0875               	movf	wtemp0+1,w
  7539  033B  001E               	movwi fsr1++
  7540  033C  3000               	movlw	0
  7541  033D  319E  262C  3180   	fcall	_ADC_GetConversion
  7542  0340  0874               	movf	wtemp0,w
  7543  0341  001E               	movwi fsr1++
  7544  0342  0875               	movf	wtemp0+1,w
  7545  0343  001E               	movwi fsr1++
  7546  0344  3036               	movlw	54
  7547  0345  001E               	movwi fsr1++
  7548  0346  3001               	movlw	1
  7549  0347  001E               	movwi fsr1++
  7550  0348  3188  2003  3180   	fcall	___lwdiv
  7551  034B  0874               	movf	wtemp0,w
  7552  034C  001E               	movwi fsr1++
  7553  034D  0875               	movf	wtemp0+1,w
  7554  034E  001E               	movwi fsr1++
  7555  034F  3008               	movlw	low (STR_8| (0+32768))
  7556  0350  001E               	movwi fsr1++
  7557  0351  309A               	movlw	high (STR_8| (0+32768))
  7558  0352  001E               	movwi fsr1++
  7559  0353  3006               	movlw	6
  7560  0354  001E               	movwi fsr1++
  7561  0355  319F  270F  3180   	fcall	_printf
  7562  0358                     l5335:
  7563                           
  7564                           ;main.c: 241:                 printf("\nPot1: %01i.%01iV", ADC_GetConversion(POT1)/310, 
      +                          (ADC_GetConversion(POT1)/31)%10);
  7565  0358  3001               	movlw	1
  7566  0359  319E  262C  3180   	fcall	_ADC_GetConversion
  7567  035C  0874               	movf	wtemp0,w
  7568  035D  001E               	movwi fsr1++
  7569  035E  0875               	movf	wtemp0+1,w
  7570  035F  001E               	movwi fsr1++
  7571  0360  301F               	movlw	31
  7572  0361  001E               	movwi fsr1++
  7573  0362  3000               	movlw	0
  7574  0363  001E               	movwi fsr1++
  7575  0364  3188  2003  3180   	fcall	___lwdiv
  7576  0367  0874               	movf	wtemp0,w
  7577  0368  001E               	movwi fsr1++
  7578  0369  0875               	movf	wtemp0+1,w
  7579  036A  001E               	movwi fsr1++
  7580  036B  300A               	movlw	10
  7581  036C  001E               	movwi fsr1++
  7582  036D  3000               	movlw	0
  7583  036E  001E               	movwi fsr1++
  7584  036F  3194  2454  3180   	fcall	___lwmod
  7585  0372  0874               	movf	wtemp0,w
  7586  0373  001E               	movwi fsr1++
  7587  0374  0875               	movf	wtemp0+1,w
  7588  0375  001E               	movwi fsr1++
  7589  0376  3001               	movlw	1
  7590  0377  319E  262C  3180   	fcall	_ADC_GetConversion
  7591  037A  0874               	movf	wtemp0,w
  7592  037B  001E               	movwi fsr1++
  7593  037C  0875               	movf	wtemp0+1,w
  7594  037D  001E               	movwi fsr1++
  7595  037E  3036               	movlw	54
  7596  037F  001E               	movwi fsr1++
  7597  0380  3001               	movlw	1
  7598  0381  001E               	movwi fsr1++
  7599  0382  3188  2003  3180   	fcall	___lwdiv
  7600  0385  0874               	movf	wtemp0,w
  7601  0386  001E               	movwi fsr1++
  7602  0387  0875               	movf	wtemp0+1,w
  7603  0388  001E               	movwi fsr1++
  7604  0389  30F6               	movlw	low (STR_9| (0+32768))
  7605  038A  001E               	movwi fsr1++
  7606  038B  3099               	movlw	high (STR_9| (0+32768))
  7607  038C  001E               	movwi fsr1++
  7608  038D  3006               	movlw	6
  7609  038E  001E               	movwi fsr1++
  7610  038F  319F  270F  3180   	fcall	_printf
  7611  0392                     l5337:
  7612                           
  7613                           ;main.c: 244:                 if(BTN_GetPosEdge(0)){
  7614  0392  3000               	movlw	0
  7615  0393  3192  22E2  3180   	fcall	_BTN_GetPosEdge
  7616  0396  3A00               	xorlw	0
  7617  0397  1903               	skipnz
  7618  0398  2B9A               	goto	u4511
  7619  0399  2B9B               	goto	u4510
  7620  039A                     u4511:
  7621  039A  2B9D               	goto	l5341
  7622  039B                     u4510:
  7623  039B                     l5339:
  7624                           
  7625                           ;main.c: 245:                     myState = S_UART;
  7626  039B  3005               	movlw	5
  7627                           
  7628                           ;stkvar	_myState @ sp[(-1)+0]
  7629  039C  3FFF               	movwi [-1]fsr1
  7630  039D                     l5341:
  7631                           
  7632                           ;main.c: 249:                 if(STATEMACHINE_StateExit()){
  7633  039D  319C  2450  3180   	fcall	_STATEMACHINE_StateExit
  7634  03A0  3A00               	xorlw	0
  7635  03A1  1903               	skipnz
  7636  03A2  2BA4               	goto	u4521
  7637  03A3  2BA5               	goto	u4520
  7638  03A4                     u4521:
  7639  03A4  2CAA               	goto	l5417
  7640  03A5                     u4520:
  7641  03A5                     l5343:
  7642                           
  7643                           ;main.c: 250:                     OLED_Clear();
  7644  03A5  319C  245F  3180   	fcall	_OLED_Clear
  7645  03A8                     l5345:
  7646                           
  7647                           ;main.c: 251:                     SYSTICK_TimerStop(BLINK_TIMER);
  7648  03A8  3001               	movlw	1
  7649  03A9  319D  251A  3180   	fcall	_SYSTICK_TimerStop
  7650  03AC                     l5347:
  7651                           
  7652                           ;main.c: 252:                     LATDbits.LATD4 = 0;
  7653  03AC  0140               	movlb	0	; select bank0
  7654  03AD  121B               	bcf	27,4	;volatile
  7655  03AE  2CAA               	goto	l5417
  7656  03AF                     l5349:
  7657                           
  7658                           ;main.c: 258:                 if(STATEMACHINE_StateEntry()){
  7659  03AF  319C  2410  3180   	fcall	_STATEMACHINE_StateEntry
  7660  03B2  3A00               	xorlw	0
  7661  03B3  1903               	skipnz
  7662  03B4  2BB6               	goto	u4531
  7663  03B5  2BB7               	goto	u4530
  7664  03B6                     u4531:
  7665  03B6  2C23               	goto	l5381
  7666  03B7                     u4530:
  7667  03B7                     l5351:
  7668                           
  7669                           ;main.c: 259:                     printf("UART Baud: 115200\n\n\nweiter mit T0...");
  7670  03B7  309A               	movlw	low (STR_10| (0+32768))
  7671  03B8  001E               	movwi fsr1++
  7672  03B9  3099               	movlw	high (STR_10| (0+32768))
  7673  03BA  001E               	movwi fsr1++
  7674  03BB  3002               	movlw	2
  7675  03BC  001E               	movwi fsr1++
  7676  03BD  319F  270F  3180   	fcall	_printf
  7677  03C0                     l5353:
  7678                           
  7679                           ;main.c: 260:                     OLED_GotoXY(0,1);
  7680  03C0  3001               	movlw	1
  7681  03C1  001E               	movwi fsr1++
  7682  03C2  3000               	movlw	0
  7683  03C3  3191  2127  3180   	fcall	_OLED_GotoXY
  7684  03C6                     l5355:
  7685                           
  7686                           ;main.c: 261:                     OLED_CursorOn(1);
  7687  03C6  3001               	movlw	1
  7688  03C7  319E  26A7  3180   	fcall	_OLED_CursorOn
  7689  03CA                     l5357:
  7690                           
  7691                           ;main.c: 262:                     PBA_ConfigPrintf(0, 1);
  7692  03CA  3001               	movlw	1
  7693  03CB  001E               	movwi fsr1++
  7694  03CC  3000               	movlw	0
  7695  03CD  319B  23EA  3180   	fcall	_PBA_ConfigPrintf
  7696  03D0                     l5359:
  7697                           
  7698                           ;main.c: 263:                     printf("********************************************\n
      +                          \r");
  7699  03D0  3034               	movlw	low ((STR_17+2)| (0+32768))
  7700  03D1  001E               	movwi fsr1++
  7701  03D2  3098               	movlw	high ((STR_17+2)| (0+32768))
  7702  03D3  001E               	movwi fsr1++
  7703  03D4  3002               	movlw	2
  7704  03D5  001E               	movwi fsr1++
  7705  03D6  319F  270F  3180   	fcall	_printf
  7706  03D9                     l5361:
  7707                           
  7708                           ;main.c: 264:                     printf("*       PIC Board Advanced 7               *\n
      +                          \r");
  7709  03D9  3063               	movlw	low (STR_12| (0+32768))
  7710  03DA  001E               	movwi fsr1++
  7711  03DB  3098               	movlw	high (STR_12| (0+32768))
  7712  03DC  001E               	movwi fsr1++
  7713  03DD  3002               	movlw	2
  7714  03DE  001E               	movwi fsr1++
  7715  03DF  319F  270F  3180   	fcall	_printf
  7716  03E2                     l5363:
  7717                           
  7718                           ;main.c: 265:                     printf("*       ICT Berufsbildungscenter AG        *\n
      +                          \r");
  7719  03E2  30F0               	movlw	low (STR_13| (0+32768))
  7720  03E3  001E               	movwi fsr1++
  7721  03E4  3098               	movlw	high (STR_13| (0+32768))
  7722  03E5  001E               	movwi fsr1++
  7723  03E6  3002               	movlw	2
  7724  03E7  001E               	movwi fsr1++
  7725  03E8  319F  270F  3180   	fcall	_printf
  7726  03EB                     l5365:
  7727                           
  7728                           ;main.c: 266:                     printf("*       Hardware-Testsoftware              *\n
      +                          \r");
  7729  03EB  3092               	movlw	low (STR_14| (0+32768))
  7730  03EC  001E               	movwi fsr1++
  7731  03ED  3098               	movlw	high (STR_14| (0+32768))
  7732  03EE  001E               	movwi fsr1++
  7733  03EF  3002               	movlw	2
  7734  03F0  001E               	movwi fsr1++
  7735  03F1  319F  270F  3180   	fcall	_printf
  7736  03F4                     l5367:
  7737                           
  7738                           ;main.c: 267:                     printf("********************************************\n
      +                          \r");
  7739  03F4  3034               	movlw	low ((STR_17+2)| (0+32768))
  7740  03F5  001E               	movwi fsr1++
  7741  03F6  3098               	movlw	high ((STR_17+2)| (0+32768))
  7742  03F7  001E               	movwi fsr1++
  7743  03F8  3002               	movlw	2
  7744  03F9  001E               	movwi fsr1++
  7745  03FA  319F  270F  3180   	fcall	_printf
  7746  03FD                     l5369:
  7747                           
  7748                           ;main.c: 268:                     printf("\nBitte Text eingeben:\n\r");
  7749  03FD  30DE               	movlw	low (STR_16| (0+32768))
  7750  03FE  001E               	movwi fsr1++
  7751  03FF  3099               	movlw	high (STR_16| (0+32768))
  7752  0400  001E               	movwi fsr1++
  7753  0401  3002               	movlw	2
  7754  0402  001E               	movwi fsr1++
  7755  0403  319F  270F  3180   	fcall	_printf
  7756  0406                     l5371:
  7757                           
  7758                           ;main.c: 269:                     PBA_ConfigPrintf(1, 0);
  7759  0406  3000               	movlw	0
  7760  0407  001E               	movwi fsr1++
  7761  0408  3001               	movlw	1
  7762  0409  319B  23EA  3180   	fcall	_PBA_ConfigPrintf
  7763  040C                     l5373:
  7764                           
  7765                           ;main.c: 271:                     EUSART1_SetRxInterruptHandler(ReceiveHandler);
  7766  040C  3042               	movlw	low _ReceiveHandler
  7767  040D  001E               	movwi fsr1++
  7768  040E  301C               	movlw	high _ReceiveHandler
  7769  040F  001E               	movwi fsr1++
  7770  0410  319B  23C5  3180   	fcall	_EUSART1_SetRxInterruptHandler
  7771  0413                     l5375:
  7772                           
  7773                           ;main.c: 272:                     PIE3bits.RC1IE = 1;
  7774  0413  014E               	movlb	14	; select bank14
  7775  0414  1699               	bsf	25,5	;volatile
  7776  0415                     l5377:
  7777                           
  7778                           ;main.c: 273:                     SYSTICK_TimerLoadAndRun(BLINK_TIMER, 500);
  7779  0415  30F4               	movlw	244
  7780  0416  001E               	movwi fsr1++
  7781  0417  3001               	movlw	1
  7782  0418  001E               	movwi fsr1++
  7783  0419  3000               	movlw	0
  7784  041A  001E               	movwi fsr1++
  7785  041B  3000               	movlw	0
  7786  041C  001E               	movwi fsr1++
  7787  041D  3001               	movlw	1
  7788  041E  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  7789  0421                     l5379:
  7790                           
  7791                           ;main.c: 274:                     LATDbits.LATD5 = 1;
  7792  0421  0140               	movlb	0	; select bank0
  7793  0422  169B               	bsf	27,5	;volatile
  7794  0423                     l5381:
  7795                           
  7796                           ;main.c: 278:                 if(SYSTICK_Timeout(BLINK_TIMER)){
  7797  0423  3001               	movlw	1
  7798  0424  3193  2356  3180   	fcall	_SYSTICK_Timeout
  7799  0427  3A00               	xorlw	0
  7800  0428  1903               	skipnz
  7801  0429  2C2B               	goto	u4541
  7802  042A  2C2C               	goto	u4540
  7803  042B                     u4541:
  7804  042B  2C44               	goto	l5387
  7805  042C                     u4540:
  7806  042C                     l5383:
  7807                           
  7808                           ;main.c: 279:                     SYSTICK_TimerLoadAndRun(BLINK_TIMER, 500);
  7809  042C  30F4               	movlw	244
  7810  042D  001E               	movwi fsr1++
  7811  042E  3001               	movlw	1
  7812  042F  001E               	movwi fsr1++
  7813  0430  3000               	movlw	0
  7814  0431  001E               	movwi fsr1++
  7815  0432  3000               	movlw	0
  7816  0433  001E               	movwi fsr1++
  7817  0434  3001               	movlw	1
  7818  0435  319C  24C6  3180   	fcall	_SYSTICK_TimerLoadAndRun
  7819  0438                     l5385:
  7820                           
  7821                           ;main.c: 280:                     LATDbits.LATD5 = !LATDbits.LATD5;
  7822  0438  1003               	clrc
  7823  0439  0140               	movlb	0	; select bank0
  7824  043A  1E9B               	btfss	27,5	;volatile
  7825  043B  1403               	setc
  7826  043C  1803               	btfsc	3,0
  7827  043D  2C3F               	goto	u4551
  7828  043E  2C42               	goto	u4550
  7829  043F                     u4551:
  7830  043F  0140               	movlb	0	; select bank0
  7831  0440  169B               	bsf	27,5	;volatile
  7832  0441  2C44               	goto	u4564
  7833  0442                     u4550:
  7834  0442  0140               	movlb	0	; select bank0
  7835  0443  129B               	bcf	27,5	;volatile
  7836  0444                     u4564:
  7837  0444                     l5387:
  7838                           
  7839                           ;main.c: 284:                 if(BTN_GetPosEdge(0)){
  7840  0444  3000               	movlw	0
  7841  0445  3192  22E2  3180   	fcall	_BTN_GetPosEdge
  7842  0448  3A00               	xorlw	0
  7843  0449  1903               	skipnz
  7844  044A  2C4C               	goto	u4571
  7845  044B  2C4D               	goto	u4570
  7846  044C                     u4571:
  7847  044C  2C4F               	goto	l5391
  7848  044D                     u4570:
  7849  044D                     l5389:
  7850                           
  7851                           ;main.c: 285:                     myState = S_TASTER;
  7852                           ;stkvar	_myState @ sp[(-1)+0]
  7853  044D  3000               	movlw	0
  7854  044E  3FFF               	movwi [-1]fsr1
  7855  044F                     l5391:
  7856                           
  7857                           ;main.c: 288:                 if(STATEMACHINE_StateExit()){
  7858  044F  319C  2450  3180   	fcall	_STATEMACHINE_StateExit
  7859  0452  3A00               	xorlw	0
  7860  0453  1903               	skipnz
  7861  0454  2C56               	goto	u4581
  7862  0455  2C57               	goto	u4580
  7863  0456                     u4581:
  7864  0456  2CAA               	goto	l5417
  7865  0457                     u4580:
  7866  0457                     l5393:
  7867                           
  7868                           ;main.c: 289:                     PBA_ConfigPrintf(0, 1);
  7869  0457  3001               	movlw	1
  7870  0458  001E               	movwi fsr1++
  7871  0459  3000               	movlw	0
  7872  045A  319B  23EA  3180   	fcall	_PBA_ConfigPrintf
  7873  045D                     l5395:
  7874                           
  7875                           ;main.c: 290:                     printf("\n\r******************************************
      +                          **\n\r");
  7876  045D  3032               	movlw	low (STR_17| (0+32768))
  7877  045E  001E               	movwi fsr1++
  7878  045F  3098               	movlw	high (STR_17| (0+32768))
  7879  0460  001E               	movwi fsr1++
  7880  0461  3002               	movlw	2
  7881  0462  001E               	movwi fsr1++
  7882  0463  319F  270F  3180   	fcall	_printf
  7883  0466                     l5397:
  7884                           
  7885                           ;main.c: 291:                     printf("*       UART Test wurde beendet            *\n
      +                          \r");
  7886  0466  30C1               	movlw	low (STR_18| (0+32768))
  7887  0467  001E               	movwi fsr1++
  7888  0468  3098               	movlw	high (STR_18| (0+32768))
  7889  0469  001E               	movwi fsr1++
  7890  046A  3002               	movlw	2
  7891  046B  001E               	movwi fsr1++
  7892  046C  319F  270F  3180   	fcall	_printf
  7893  046F                     l5399:
  7894                           
  7895                           ;main.c: 292:                     printf("********************************************\n
      +                          \r");
  7896  046F  3034               	movlw	low ((STR_17+2)| (0+32768))
  7897  0470  001E               	movwi fsr1++
  7898  0471  3098               	movlw	high ((STR_17+2)| (0+32768))
  7899  0472  001E               	movwi fsr1++
  7900  0473  3002               	movlw	2
  7901  0474  001E               	movwi fsr1++
  7902  0475  319F  270F  3180   	fcall	_printf
  7903  0478                     l5401:
  7904                           
  7905                           ;main.c: 293:                     PBA_ConfigPrintf(1, 0);
  7906  0478  3000               	movlw	0
  7907  0479  001E               	movwi fsr1++
  7908  047A  3001               	movlw	1
  7909  047B  319B  23EA  3180   	fcall	_PBA_ConfigPrintf
  7910  047E                     l5403:
  7911                           
  7912                           ;main.c: 294:                     OLED_Clear();
  7913  047E  319C  245F  3180   	fcall	_OLED_Clear
  7914  0481                     l5405:
  7915                           
  7916                           ;main.c: 295:                     OLED_CursorOn(0);
  7917  0481  3000               	movlw	0
  7918  0482  319E  26A7  3180   	fcall	_OLED_CursorOn
  7919  0485                     l5407:
  7920                           
  7921                           ;main.c: 296:                     SYSTICK_TimerStop(BLINK_TIMER);
  7922  0485  3001               	movlw	1
  7923  0486  319D  251A  3180   	fcall	_SYSTICK_TimerStop
  7924  0489                     l5409:
  7925                           
  7926                           ;main.c: 297:                     LATDbits.LATD5 = 0;
  7927  0489  0140               	movlb	0	; select bank0
  7928  048A  129B               	bcf	27,5	;volatile
  7929  048B                     l5411:
  7930                           
  7931                           ;main.c: 298:                     PIE3bits.RC1IE = 0;
  7932  048B  014E               	movlb	14	; select bank14
  7933  048C  1299               	bcf	25,5	;volatile
  7934  048D  2CAA               	goto	l5417
  7935  048E                     l5415:
  7936                           
  7937                           ;stkvar	_myState @ sp[(-1)+0]
  7938  048E  3F7F               	moviw [-1]fsr1
  7939  048F  00FE               	movwf	btemp+10
  7940  0490  01FF               	clrf	btemp+11
  7941                           
  7942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7943                           ; Switch size 1, requested type "simple"
  7944                           ; Number of cases is 1, Range of values is 0 to 0
  7945                           ; switch strategies available:
  7946                           ; Name         Instructions Cycles
  7947                           ; simple_byte            4     3 (average)
  7948                           ; direct_byte            8     6 (fixed)
  7949                           ; jumptable            260     6 (fixed)
  7950                           ;	Chosen strategy is simple_byte
  7951  0491  087F               	movf	wtemp5+1,w
  7952  0492  3A00               	xorlw	0	; case 0
  7953  0493  1903               	skipnz
  7954  0494  2C96               	goto	l5643
  7955  0495  2CAA               	goto	l5417
  7956  0496                     l5643:
  7957                           
  7958                           ; Switch size 1, requested type "simple"
  7959                           ; Number of cases is 6, Range of values is 0 to 5
  7960                           ; switch strategies available:
  7961                           ; Name         Instructions Cycles
  7962                           ; direct_byte           18     6 (fixed)
  7963                           ; simple_byte           19    10 (average)
  7964                           ; jumptable            260     6 (fixed)
  7965                           ;	Chosen strategy is simple_byte
  7966  0496  087E               	movf	wtemp5,w
  7967  0497  3A00               	xorlw	0	; case 0
  7968  0498  1903               	skipnz
  7969  0499  28D5               	goto	l5177
  7970  049A  3A01               	xorlw	1	; case 1
  7971  049B  1903               	skipnz
  7972  049C  2943               	goto	l5211
  7973  049D  3A03               	xorlw	3	; case 2
  7974  049E  1903               	skipnz
  7975  049F  29B8               	goto	l5243
  7976  04A0  3A01               	xorlw	1	; case 3
  7977  04A1  1903               	skipnz
  7978  04A2  2A4A               	goto	l5279
  7979  04A3  3A07               	xorlw	7	; case 4
  7980  04A4  1903               	skipnz
  7981  04A5  2AD8               	goto	l5317
  7982  04A6  3A01               	xorlw	1	; case 5
  7983  04A7  1903               	skipnz
  7984  04A8  2BAF               	goto	l5349
  7985  04A9  2CAA               	goto	l5417
  7986  04AA                     l5417:
  7987                           
  7988                           ;main.c: 303:         STATEMACHINE_Update();
  7989  04AA  319C  2406  3180   	fcall	_STATEMACHINE_Update
  7990  04AD  28BF               	goto	l5173
  7991                           
  7992                           ; _main: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize 
      +                          = 0, vargsize = 0
  7993  04AE  317F               	addfsr 1,-1
  7994  04AF  3180  286F         	ljmp	start
  7995  04B1                     __end_of_main:
  7996                           
  7997                           	psect	text1
  7998  1F0F                     __ptext1:	
  7999 ;; *************** function _printf *****************
  8000 ;; Defined at:
  8001 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  8002 ;; Parameters:    Size  Location     Type
  8003 ;;  fmt             2  [STACK] PTR const unsigned char 
  8004 ;;		 -> STR_19(47), STR_18(47), STR_17(49), STR_16(24), 
  8005 ;;		 -> STR_15(47), STR_14(47), STR_13(47), STR_12(47), 
  8006 ;;		 -> STR_11(47), STR_10(37), STR_9(18), STR_8(17), 
  8007 ;;		 -> STR_7(38), STR_6(7), STR_5(50), STR_4(15), 
  8008 ;;		 -> STR_3(46), STR_2(31), STR_1(39), 
  8009 ;; Auto vars:     Size  Location     Type
  8010 ;;  ap              2  [STACK] PTR void [1]
  8011 ;;		 -> ?_printf(2), 
  8012 ;;  ret             2    0        int 
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  2  [STACK] int 
  8015 ;; Registers used:
  8016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10
      +, btemp+11, ___BTEMP12, ___BTEMP13, ___BTEMP14, ___BTEMP15, ___BTEMP16, ___BTEMP17, ___BTEMP18, ___BTEMP19, ___BTEMP36, 
      +___BTEMP37, ___BTEMP38, ___BTEMP39, ___BTEMP40, ___BTEMP41, ___BTEMP42, ___BTEMP43, pclath
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 3F/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;Total ram usage:        0 bytes
  8027 ;; Hardware stack levels used:    1
  8028 ;; Hardware stack levels required when called:   19
  8029 ;; This function calls:
  8030 ;;		_vfprintf
  8031 ;; This function is called by:
  8032 ;;		_main
  8033 ;; This function uses a reentrant model
  8034 ;;
  8035                           
  8036                           
  8037                           ;psect for function _printf
  8038  1F0F                     _printf:
  8039                           
  8040                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8041  1F0F  3142               	addfsr 1,2
  8042  1F10                     l4925:	
  8043                           ;incstack = 0
  8044 ;; hardware stack exceeded
  8045                           ; Regs used in _printf: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+3+btemp+8-___BTEMP19+___B
      +                          TEMP36-___BTEMP43+pclath]
  8046                           
  8047                           
  8048                           ;stkvar	?_printf @ sp[(-2)+-3]
  8049  1F10  30FB               	movlw	251
  8050  1F11  0706               	addwf	6,w
  8051  1F12  00FE               	movwf	btemp+10
  8052  1F13  30FF               	movlw	255
  8053  1F14  3D07               	addwfc	7,w
  8054  1F15  00FF               	movwf	btemp+11
  8055                           
  8056                           ;stkvar	_ap @ sp[(-2)+0]
  8057  1F16  087E               	movf	btemp+10,w
  8058  1F17  3FFE               	movwi [-2]fsr1
  8059  1F18  087F               	movf	btemp+11,w
  8060  1F19  3FFF               	movwi [-1]fsr1
  8061  1F1A                     l4927:
  8062                           
  8063                           ;stkvar	_ap @ sp[(-2)+0]
  8064  1F1A  30FE               	movlw	254
  8065  1F1B  0706               	addwf	6,w
  8066  1F1C  00F6               	movwf	btemp+2
  8067  1F1D  30FF               	movlw	255
  8068  1F1E  3D07               	addwfc	7,w
  8069  1F1F  00F7               	movwf	btemp+3
  8070  1F20  0876               	movf	btemp+2,w
  8071  1F21  001E               	movwi fsr1++
  8072  1F22  0877               	movf	btemp+3,w
  8073  1F23  001E               	movwi fsr1++
  8074                           
  8075                           ;stkvar	_fmt @ sp[(-4)+-3]
  8076  1F24  3F79               	moviw [-7]fsr1
  8077  1F25  001E               	movwi fsr1++
  8078  1F26  3F79               	moviw [-7]fsr1
  8079  1F27  001E               	movwi fsr1++
  8080  1F28  3000               	movlw	0
  8081  1F29  3191  21E2  319F   	fcall	_vfprintf
  8082  1F2C                     l1624:
  8083                           
  8084                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 2, vargsize = 0
  8085  1F2C  317E               	addfsr 1,-2
  8086  1F2D  0015               	moviw --fsr1
  8087  1F2E  0286               	subwf	6,f
  8088  1F2F  3000               	movlw	0
  8089  1F30  3B87               	subwfb	7,f
  8090  1F31  0008               	return
  8091  1F32                     __end_of_printf:
  8092                           
  8093                           	psect	text2
  8094  11E2                     __ptext2:	
  8095 ;; *************** function _vfprintf *****************
  8096 ;; Defined at:
  8097 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;  fp              1    wreg     PTR struct _IO_FILE
  8100 ;;		 -> NULL(0), 
  8101 ;;  fmt             2  [STACK] PTR const unsigned char 
  8102 ;;		 -> STR_19(47), STR_18(47), STR_17(49), STR_16(24), 
  8103 ;;		 -> STR_15(47), STR_14(47), STR_13(47), STR_12(47), 
  8104 ;;		 -> STR_11(47), STR_10(37), STR_9(18), STR_8(17), 
  8105 ;;		 -> STR_7(38), STR_6(7), STR_5(50), STR_4(15), 
  8106 ;;		 -> STR_3(46), STR_2(31), STR_1(39), 
  8107 ;;  ap              2  [STACK] PTR PTR void 
  8108 ;;		 -> ap(2), 
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;  fp              1  [STACK] PTR struct _IO_FILE
  8111 ;;		 -> NULL(0), 
  8112 ;;  cfmt            2  [STACK] PTR unsigned char 
  8113 ;;		 -> STR_19(47), STR_18(47), STR_17(49), STR_16(24), 
  8114 ;;		 -> STR_15(47), STR_14(47), STR_13(47), STR_12(47), 
  8115 ;;		 -> STR_11(47), STR_10(37), STR_9(18), STR_8(17), 
  8116 ;;		 -> STR_7(38), STR_6(7), STR_5(50), STR_4(15), 
  8117 ;;		 -> STR_3(46), STR_2(31), STR_1(39), 
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  2  [STACK] int 
  8120 ;; Registers used:
  8121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10
      +, btemp+11, ___BTEMP12, ___BTEMP13, ___BTEMP14, ___BTEMP15, ___BTEMP16, ___BTEMP17, ___BTEMP18, ___BTEMP19, ___BTEMP36, 
      +___BTEMP37, ___BTEMP38, ___BTEMP39, ___BTEMP40, ___BTEMP41, ___BTEMP42, ___BTEMP43, pclath
  8122 ;; Tracked objects:
  8123 ;;		On entry : 0/0
  8124 ;;		On exit  : 3F/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;Total ram usage:        0 bytes
  8132 ;; Hardware stack levels used:    1
  8133 ;; Hardware stack levels required when called:   18
  8134 ;; This function calls:
  8135 ;;		_vfpfcnvrt
  8136 ;; This function is called by:
  8137 ;;		_printf
  8138 ;; This function uses a reentrant model
  8139 ;;
  8140                           
  8141                           
  8142                           ;psect for function _vfprintf
  8143  11E2                     _vfprintf:
  8144                           
  8145                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8146  11E2  3143               	addfsr 1,3
  8147                           
  8148                           ;incstack = 0
  8149 ;; hardware stack exceeded
  8150                           ; Regs used in _vfprintf: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+3+btemp+8-___BTEMP19+__
      +                          _BTEMP36-___BTEMP43+pclath]
  8151                           ;_fp stored from wreg
  8152                           ;stkvar	_fp @ sp[(-3)+0]
  8153  11E3  3FFD               	movwi [-3]fsr1
  8154  11E4                     l4685:
  8155                           
  8156                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  8157                           ;stkvar	_fmt @ sp[(-3)+-2]
  8158                           ;stkvar	_cfmt @ sp[(-3)+1]
  8159  11E4  3F7B               	moviw [-5]fsr1
  8160  11E5  3FFE               	movwi [-2]fsr1
  8161  11E6  3F7C               	moviw [-4]fsr1
  8162  11E7  3FFF               	movwi [-1]fsr1
  8163  11E8                     l4687:
  8164                           
  8165                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  8166  11E8  0140               	movlb	0	; select bank0
  8167  11E9  01B5               	clrf	_nout
  8168  11EA  01B6               	clrf	_nout+1
  8169                           
  8170                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  8171  11EB  2A03               	goto	l4691
  8172  11EC                     l4689:
  8173                           
  8174                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  8175                           ;stkvar	_ap @ sp[(-3)+-4]
  8176  11EC  3F79               	moviw [-7]fsr1
  8177  11ED  001E               	movwi fsr1++
  8178  11EE  3F79               	moviw [-7]fsr1
  8179  11EF  001E               	movwi fsr1++
  8180                           
  8181                           ;stkvar	_cfmt @ sp[(-5)+1]
  8182  11F0  30FC               	movlw	252
  8183  11F1  0706               	addwf	6,w
  8184  11F2  00F6               	movwf	btemp+2
  8185  11F3  30FF               	movlw	255
  8186  11F4  3D07               	addwfc	7,w
  8187  11F5  00F7               	movwf	btemp+3
  8188  11F6  0876               	movf	btemp+2,w
  8189  11F7  001E               	movwi fsr1++
  8190  11F8  0877               	movf	btemp+3,w
  8191  11F9  001E               	movwi fsr1++
  8192                           
  8193                           ;stkvar	_fp @ sp[(-7)+0]
  8194  11FA  3F79               	moviw [-7]fsr1
  8195  11FB  3184  24B1  3191   	fcall	_vfpfcnvrt
  8196  11FE  0874               	movf	wtemp0,w
  8197  11FF  0140               	movlb	0	; select bank0
  8198  1200  07B5               	addwf	_nout,f
  8199  1201  0875               	movf	wtemp0+1,w
  8200  1202  3DB6               	addwfc	_nout+1,f
  8201  1203                     l4691:
  8202                           
  8203                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  8204                           ;stkvar	_cfmt @ sp[(-3)+1]
  8205  1203  3F7E               	moviw [-2]fsr1
  8206  1204  0084               	movwf	4
  8207  1205  3F7F               	moviw [-1]fsr1
  8208  1206  0085               	movwf	5
  8209  1207  0012               	moviw fsr0++
  8210  1208  1D03               	btfss	3,2
  8211  1209  2A0B               	goto	u3611
  8212  120A  2A0C               	goto	u3610
  8213  120B                     u3611:
  8214  120B  29EC               	goto	l4689
  8215  120C                     u3610:
  8216  120C                     l4693:
  8217                           
  8218                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  8219  120C  0836               	movf	_nout+1,w
  8220  120D  00F5               	movwf	btemp+1
  8221  120E  0835               	movf	_nout,w
  8222  120F  00F4               	movwf	btemp
  8223  1210                     l1739:
  8224                           
  8225                           ; _vfprintf: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8226  1210  3179               	addfsr 1,-7
  8227  1211  0008               	return
  8228  1212                     __end_of_vfprintf:
  8229                           
  8230                           	psect	text3
  8231  04B1                     __ptext3:	
  8232 ;; *************** function _vfpfcnvrt *****************
  8233 ;; Defined at:
  8234 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  fp              1    wreg     PTR struct _IO_FILE
  8237 ;;		 -> NULL(0), 
  8238 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8239 ;;		 -> cfmt(2), 
  8240 ;;  ap              2  [STACK] PTR PTR void 
  8241 ;;		 -> ap(2), 
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;  fp              1  [STACK] PTR struct _IO_FILE
  8244 ;;		 -> NULL(0), 
  8245 ;;  ll              8  [STACK] long long 
  8246 ;;  llu             8    0        unsigned long long 
  8247 ;;  f               4    0        unsigned long long 
  8248 ;;  ct              3    0        unsigned char [3]
  8249 ;;  done            2  [STACK] int 
  8250 ;;  vp              2    0        PTR void 
  8251 ;;  i               2    0        int 
  8252 ;;  cp              2    0        PTR unsigned char 
  8253 ;;  c               1  [STACK] unsigned char 
  8254 ;; Return value:  Size  Location     Type
  8255 ;;                  2  [STACK] int 
  8256 ;; Registers used:
  8257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, ___BTE
      +MP12, ___BTEMP13, ___BTEMP14, ___BTEMP15, ___BTEMP16, ___BTEMP17, ___BTEMP18, ___BTEMP19, ___BTEMP36, ___BTEMP37, ___BTE
      +MP38, ___BTEMP39, ___BTEMP40, ___BTEMP41, ___BTEMP42, ___BTEMP43, pclath
  8258 ;; Tracked objects:
  8259 ;;		On entry : 0/0
  8260 ;;		On exit  : 0/0
  8261 ;;		Unchanged: 0/0
  8262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8267 ;;Total ram usage:        0 bytes
  8268 ;; Hardware stack levels used:    1
  8269 ;; Hardware stack levels required when called:   17
  8270 ;; This function calls:
  8271 ;;		_atoi
  8272 ;;		_ctoa
  8273 ;;		_dtoa
  8274 ;;		_fputc
  8275 ;;		_isdigit
  8276 ;; This function is called by:
  8277 ;;		_vfprintf
  8278 ;; This function uses a reentrant model
  8279 ;;
  8280                           
  8281                           
  8282                           ;psect for function _vfpfcnvrt
  8283  04B1                     _vfpfcnvrt:
  8284                           
  8285                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8286  04B1  314E               	addfsr 1,14
  8287                           
  8288                           ;incstack = 0
  8289 ;; hardware stack exceeded
  8290                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+1+btemp+8-___BTEMP19+_
      +                          __BTEMP36-___BTEMP43+pclath]
  8291                           ;_fp stored from wreg
  8292                           ;stkvar	_fp @ sp[(-14)+0]
  8293  04B2  3FF2               	movwi [-14]fsr1
  8294  04B3                     l4351:
  8295                           
  8296                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  8297                           ;stkvar	_fmt @ sp[(-14)+-2]
  8298  04B3  3F70               	moviw [-16]fsr1
  8299  04B4  0084               	movwf	4
  8300  04B5  3F71               	moviw [-15]fsr1
  8301  04B6  0085               	movwf	5
  8302  04B7  3F00               	moviw [0]fsr0
  8303  04B8  00FE               	movwf	btemp+10
  8304  04B9  3F01               	moviw [1]fsr0
  8305  04BA  00FF               	movwf	btemp+11
  8306  04BB  087E               	movf	wtemp5,w
  8307  04BC  0084               	movwf	4
  8308  04BD  087F               	movf	wtemp5+1,w
  8309  04BE  0085               	movwf	5
  8310  04BF  0012               	moviw fsr0++
  8311  04C0  3A25               	xorlw	37
  8312  04C1  1D03               	btfss	3,2
  8313  04C2  2CC4               	goto	u3251
  8314  04C3  2CC5               	goto	u3250
  8315  04C4                     u3251:
  8316  04C4  2E93               	goto	l4441
  8317  04C5                     u3250:
  8318  04C5                     l4353:
  8319                           
  8320                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  8321                           ;stkvar	_fmt @ sp[(-14)+-2]
  8322  04C5  3F70               	moviw [-16]fsr1
  8323  04C6  0084               	movwf	4
  8324  04C7  3F71               	moviw [-15]fsr1
  8325  04C8  0085               	movwf	5
  8326  04C9  3001               	movlw	1
  8327  04CA  0780               	addwf	0,f
  8328  04CB  3101               	addfsr 0,1
  8329  04CC  1803               	skipnc
  8330  04CD  0A80               	incf	0,f
  8331  04CE                     l4355:
  8332                           
  8333                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  8334  04CE  0140               	movlb	0	; select bank0
  8335  04CF  01B7               	clrf	_width
  8336  04D0  01B8               	clrf	_width+1
  8337  04D1  01BB               	clrf	_flags
  8338  04D2  01BC               	clrf	_flags+1
  8339  04D3                     l4357:
  8340                           
  8341                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  8342  04D3  30FF               	movlw	255
  8343  04D4  00B9               	movwf	_prec
  8344  04D5  30FF               	movlw	255
  8345  04D6  00BA               	movwf	_prec+1
  8346  04D7                     l4359:
  8347                           
  8348                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  8349                           ;stkvar	_done @ sp[(-14)+11]
  8350  04D7  3000               	movlw	0
  8351  04D8  3FFD               	movwi [-3]fsr1
  8352  04D9  3FFE               	movwi [-2]fsr1
  8353                           
  8354                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  8355  04DA  2D1D               	goto	l4377
  8356  04DB                     l1709:	
  8357                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
  8358                           
  8359                           
  8360                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  8361  04DB  0140               	movlb	0	; select bank0
  8362  04DC  143B               	bsf	_flags,0
  8363  04DD                     l4361:
  8364                           
  8365                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  8366                           ;stkvar	_fmt @ sp[(-14)+-2]
  8367  04DD  3F70               	moviw [-16]fsr1
  8368  04DE  0084               	movwf	4
  8369  04DF  3F71               	moviw [-15]fsr1
  8370  04E0  0085               	movwf	5
  8371  04E1  3001               	movlw	1
  8372  04E2  0780               	addwf	0,f
  8373  04E3  3101               	addfsr 0,1
  8374  04E4  1803               	skipnc
  8375  04E5  0A80               	incf	0,f
  8376                           
  8377                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  8378  04E6  2D1D               	goto	l4377
  8379  04E7                     l1711:	
  8380                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
  8381                           
  8382                           
  8383                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  8384  04E7  0140               	movlb	0	; select bank0
  8385  04E8  14BB               	bsf	_flags,1
  8386  04E9  2CDD               	goto	l4361
  8387  04EA                     l1712:	
  8388                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
  8389                           
  8390                           
  8391                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  8392  04EA  0140               	movlb	0	; select bank0
  8393  04EB  153B               	bsf	_flags,2
  8394  04EC  2CDD               	goto	l4361
  8395  04ED                     l1713:	
  8396                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
  8397                           
  8398                           
  8399                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  8400  04ED  0140               	movlb	0	; select bank0
  8401  04EE  15BB               	bsf	_flags,3
  8402  04EF  2CDD               	goto	l4361
  8403  04F0                     l1714:	
  8404                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
  8405                           
  8406                           
  8407                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  8408  04F0  0140               	movlb	0	; select bank0
  8409  04F1  163B               	bsf	_flags,4
  8410  04F2  2CDD               	goto	l4361
  8411  04F3                     l4371:
  8412                           
  8413                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  8414                           ;stkvar	_done @ sp[(-14)+11]
  8415  04F3  3001               	movlw	1
  8416  04F4  3FFD               	movwi [-3]fsr1
  8417  04F5  3000               	movlw	0
  8418  04F6  3FFE               	movwi [-2]fsr1
  8419                           
  8420                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  8421  04F7  2D1D               	goto	l4377
  8422  04F8                     l4375:
  8423                           
  8424                           ;stkvar	_fmt @ sp[(-14)+-2]
  8425  04F8  3F70               	moviw [-16]fsr1
  8426  04F9  0084               	movwf	4
  8427  04FA  3F71               	moviw [-15]fsr1
  8428  04FB  0085               	movwf	5
  8429  04FC  3F00               	moviw [0]fsr0
  8430  04FD  00FE               	movwf	btemp+10
  8431  04FE  3F01               	moviw [1]fsr0
  8432  04FF  00FF               	movwf	btemp+11
  8433  0500  087E               	movf	wtemp5,w
  8434  0501  0084               	movwf	4
  8435  0502  087F               	movf	wtemp5+1,w
  8436  0503  0085               	movwf	5
  8437  0504  0800               	movf	0,w	;code access
  8438  0505  00FE               	movwf	btemp+10
  8439  0506  01FF               	clrf	btemp+11
  8440                           
  8441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8442                           ; Switch size 1, requested type "simple"
  8443                           ; Number of cases is 1, Range of values is 0 to 0
  8444                           ; switch strategies available:
  8445                           ; Name         Instructions Cycles
  8446                           ; simple_byte            4     3 (average)
  8447                           ; direct_byte            8     6 (fixed)
  8448                           ; jumptable            260     6 (fixed)
  8449                           ;	Chosen strategy is simple_byte
  8450  0507  087F               	movf	wtemp5+1,w
  8451  0508  3A00               	xorlw	0	; case 0
  8452  0509  1903               	skipnz
  8453  050A  2D0C               	goto	l5645
  8454  050B  2CF3               	goto	l4371
  8455  050C                     l5645:
  8456                           
  8457                           ; Switch size 1, requested type "simple"
  8458                           ; Number of cases is 5, Range of values is 32 to 48
  8459                           ; switch strategies available:
  8460                           ; Name         Instructions Cycles
  8461                           ; simple_byte           16     9 (average)
  8462                           ; direct_byte           43     9 (fixed)
  8463                           ; jumptable            263     9 (fixed)
  8464                           ;	Chosen strategy is simple_byte
  8465  050C  087E               	movf	wtemp5,w
  8466  050D  3A20               	xorlw	32	; case 32
  8467  050E  1903               	skipnz
  8468  050F  2CED               	goto	l1713
  8469  0510  3A03               	xorlw	3	; case 35
  8470  0511  1903               	skipnz
  8471  0512  2CF0               	goto	l1714
  8472  0513  3A08               	xorlw	8	; case 43
  8473  0514  1903               	skipnz
  8474  0515  2CEA               	goto	l1712
  8475  0516  3A06               	xorlw	6	; case 45
  8476  0517  1903               	skipnz
  8477  0518  2CDB               	goto	l1709
  8478  0519  3A1D               	xorlw	29	; case 48
  8479  051A  1903               	skipnz
  8480  051B  2CE7               	goto	l1711
  8481  051C  2CF3               	goto	l4371
  8482  051D                     l4377:
  8483                           
  8484                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  8485                           ;stkvar	_done @ sp[(-14)+11]
  8486  051D  3F7D               	moviw [-3]fsr1
  8487  051E  1903               	skipnz
  8488  051F  3F7E               	moviw [-2]fsr1
  8489  0520  1903               	skipnz
  8490  0521  2D23               	goto	u3261
  8491  0522  2D24               	goto	u3260
  8492  0523                     u3261:
  8493  0523  2CF8               	goto	l4375
  8494  0524                     u3260:
  8495  0524                     l1716:
  8496                           
  8497                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  8498  0524  0140               	movlb	0	; select bank0
  8499  0525  1C3B               	btfss	_flags,0
  8500  0526  2D28               	goto	u3271
  8501  0527  2D29               	goto	u3270
  8502  0528                     u3271:
  8503  0528  2D2A               	goto	l4381
  8504  0529                     u3270:
  8505  0529                     l4379:
  8506                           
  8507                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  8508  0529  10BB               	bcf	_flags,1
  8509  052A                     l4381:
  8510                           
  8511                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  8512                           ;stkvar	_fmt @ sp[(-14)+-2]
  8513  052A  3F70               	moviw [-16]fsr1
  8514  052B  0084               	movwf	4
  8515  052C  3F71               	moviw [-15]fsr1
  8516  052D  0085               	movwf	5
  8517  052E  3F00               	moviw [0]fsr0
  8518  052F  00FE               	movwf	btemp+10
  8519  0530  3F01               	moviw [1]fsr0
  8520  0531  00FF               	movwf	btemp+11
  8521  0532  087E               	movf	wtemp5,w
  8522  0533  0084               	movwf	4
  8523  0534  087F               	movf	wtemp5+1,w
  8524  0535  0085               	movwf	5
  8525  0536  0012               	moviw fsr0++
  8526  0537  3A2A               	xorlw	42
  8527  0538  1D03               	btfss	3,2
  8528  0539  2D3B               	goto	u3281
  8529  053A  2D3C               	goto	u3280
  8530  053B                     u3281:
  8531  053B  2D66               	goto	l4393
  8532  053C                     u3280:
  8533  053C                     l4383:
  8534                           
  8535                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  8536                           ;stkvar	_fmt @ sp[(-14)+-2]
  8537  053C  3F70               	moviw [-16]fsr1
  8538  053D  0084               	movwf	4
  8539  053E  3F71               	moviw [-15]fsr1
  8540  053F  0085               	movwf	5
  8541  0540  3001               	movlw	1
  8542  0541  0780               	addwf	0,f
  8543  0542  3101               	addfsr 0,1
  8544  0543  1803               	skipnc
  8545  0544  0A80               	incf	0,f
  8546  0545                     l4385:
  8547                           
  8548                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8549                           ;stkvar	_ap @ sp[(-14)+-4]
  8550  0545  3F6E               	moviw [-18]fsr1
  8551  0546  0084               	movwf	4
  8552  0547  3F6F               	moviw [-17]fsr1
  8553  0548  0085               	movwf	5
  8554  0549  3002               	movlw	2
  8555  054A  0280               	subwf	0,f
  8556  054B  3101               	addfsr 0,1
  8557  054C  3000               	movlw	0
  8558  054D  3B80               	subwfb	0,f
  8559  054E  313F               	addfsr 0,-1
  8560  054F  3F00               	moviw [0]fsr0
  8561  0550  00FE               	movwf	btemp+10
  8562  0551  3F01               	moviw [1]fsr0
  8563  0552  00FF               	movwf	btemp+11
  8564  0553  087E               	movf	wtemp5,w
  8565  0554  0084               	movwf	4
  8566  0555  087F               	movf	wtemp5+1,w
  8567  0556  0085               	movwf	5
  8568  0557  3F00               	moviw [0]fsr0
  8569  0558  00B7               	movwf	_width
  8570  0559  3F01               	moviw [1]fsr0
  8571  055A  00B8               	movwf	_width+1
  8572  055B                     l4387:
  8573                           
  8574                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  8575  055B  1FB8               	btfss	_width+1,7
  8576  055C  2D5E               	goto	u3291
  8577  055D  2D5F               	goto	u3290
  8578  055E                     u3291:
  8579  055E  2DAF               	goto	l4403
  8580  055F                     u3290:
  8581  055F                     l4389:
  8582                           
  8583                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  8584  055F  143B               	bsf	_flags,0
  8585  0560                     l4391:
  8586                           
  8587                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  8588  0560  09B7               	comf	_width,f
  8589  0561  09B8               	comf	_width+1,f
  8590  0562  0AB7               	incf	_width,f
  8591  0563  1903               	skipnz
  8592  0564  0AB8               	incf	_width+1,f
  8593  0565  2DAF               	goto	l4403
  8594  0566                     l4393:
  8595                           
  8596                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  8597                           ;stkvar	_fmt @ sp[(-14)+-2]
  8598  0566  3F70               	moviw [-16]fsr1
  8599  0567  0084               	movwf	4
  8600  0568  3F71               	moviw [-15]fsr1
  8601  0569  0085               	movwf	5
  8602  056A  3F00               	moviw [0]fsr0
  8603  056B  00FE               	movwf	btemp+10
  8604  056C  3F01               	moviw [1]fsr0
  8605  056D  00FF               	movwf	btemp+11
  8606  056E  087E               	movf	wtemp5,w
  8607  056F  001E               	movwi fsr1++
  8608  0570  087F               	movf	wtemp5+1,w
  8609  0571  001E               	movwi fsr1++
  8610  0572  3188  20E1  3184   	fcall	_atoi
  8611  0575  0874               	movf	btemp,w
  8612  0576  0140               	movlb	0	; select bank0
  8613  0577  00B7               	movwf	_width
  8614  0578  0875               	movf	btemp+1,w
  8615  0579  00B8               	movwf	_width+1
  8616                           
  8617                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8618  057A  2D84               	goto	l4397
  8619  057B                     l4395:
  8620                           
  8621                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  8622                           ;stkvar	_fmt @ sp[(-14)+-2]
  8623  057B  3F70               	moviw [-16]fsr1
  8624  057C  0084               	movwf	4
  8625  057D  3F71               	moviw [-15]fsr1
  8626  057E  0085               	movwf	5
  8627  057F  3001               	movlw	1
  8628  0580  0780               	addwf	0,f
  8629  0581  3101               	addfsr 0,1
  8630  0582  1803               	skipnc
  8631  0583  0A80               	incf	0,f
  8632  0584                     l4397:
  8633                           
  8634                           ;stkvar	_fmt @ sp[(-14)+-2]
  8635  0584  3F70               	moviw [-16]fsr1
  8636  0585  0084               	movwf	4
  8637  0586  3F71               	moviw [-15]fsr1
  8638  0587  0085               	movwf	5
  8639  0588  3F00               	moviw [0]fsr0
  8640  0589  00FE               	movwf	btemp+10
  8641  058A  3F01               	moviw [1]fsr0
  8642  058B  00FF               	movwf	btemp+11
  8643  058C  087E               	movf	wtemp5,w
  8644  058D  0084               	movwf	4
  8645  058E  087F               	movf	wtemp5+1,w
  8646  058F  0085               	movwf	5
  8647  0590  0800               	movf	0,w	;code access
  8648  0591  3ED0               	addlw	208
  8649  0592  00FE               	movwf	wtemp5
  8650  0593  30FF               	movlw	255
  8651  0594  1803               	skipnc
  8652  0595  3000               	movlw	0
  8653  0596  00FF               	movwf	wtemp5+1
  8654  0597  3000               	movlw	0
  8655  0598  027F               	subwf	wtemp5+1,w
  8656  0599  300A               	movlw	10
  8657  059A  1903               	skipnz
  8658  059B  027E               	subwf	wtemp5,w
  8659  059C  1C03               	skipc
  8660  059D  2D9F               	goto	u3301
  8661  059E  2DA1               	goto	u3300
  8662  059F                     u3301:
  8663  059F  3001               	movlw	1
  8664  05A0  2DA2               	goto	u3310
  8665  05A1                     u3300:
  8666  05A1  3000               	movlw	0
  8667  05A2                     u3310:
  8668  05A2  00FE               	movwf	btemp+10
  8669  05A3  01FF               	clrf	btemp+11
  8670                           
  8671                           ;stkvar	_vfpfcnvrt$2152 @ sp[(-14)+1]
  8672  05A4  087E               	movf	btemp+10,w
  8673  05A5  3FF3               	movwi [-13]fsr1
  8674  05A6  087F               	movf	btemp+11,w
  8675  05A7  3FF4               	movwi [-12]fsr1
  8676  05A8                     l4401:
  8677                           
  8678                           ;stkvar	_vfpfcnvrt$2152 @ sp[(-14)+1]
  8679  05A8  3F73               	moviw [-13]fsr1
  8680  05A9  1903               	skipnz
  8681  05AA  3F74               	moviw [-12]fsr1
  8682  05AB  1D03               	skipz
  8683  05AC  2DAE               	goto	u3321
  8684  05AD  2DAF               	goto	u3320
  8685  05AE                     u3321:
  8686  05AE  2D7B               	goto	l4395
  8687  05AF                     u3320:
  8688  05AF                     l4403:
  8689                           
  8690                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  8691                           ;stkvar	_fmt @ sp[(-14)+-2]
  8692  05AF  3F70               	moviw [-16]fsr1
  8693  05B0  0084               	movwf	4
  8694  05B1  3F71               	moviw [-15]fsr1
  8695  05B2  0085               	movwf	5
  8696  05B3  3F00               	moviw [0]fsr0
  8697  05B4  00FE               	movwf	btemp+10
  8698  05B5  3F01               	moviw [1]fsr0
  8699  05B6  00FF               	movwf	btemp+11
  8700  05B7  087E               	movf	wtemp5,w
  8701  05B8  0084               	movwf	4
  8702  05B9  087F               	movf	wtemp5+1,w
  8703  05BA  0085               	movwf	5
  8704  05BB  0012               	moviw fsr0++
  8705  05BC  3A63               	xorlw	99
  8706  05BD  1D03               	btfss	3,2
  8707  05BE  2DC0               	goto	u3331
  8708  05BF  2DC1               	goto	u3330
  8709  05C0                     u3331:
  8710  05C0  2DE5               	goto	l4413
  8711  05C1                     u3330:
  8712  05C1                     l4405:
  8713                           
  8714                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  8715                           ;stkvar	_fmt @ sp[(-14)+-2]
  8716  05C1  3F70               	moviw [-16]fsr1
  8717  05C2  0084               	movwf	4
  8718  05C3  3F71               	moviw [-15]fsr1
  8719  05C4  0085               	movwf	5
  8720  05C5  3001               	movlw	1
  8721  05C6  0780               	addwf	0,f
  8722  05C7  3101               	addfsr 0,1
  8723  05C8  1803               	skipnc
  8724  05C9  0A80               	incf	0,f
  8725  05CA                     l4407:
  8726                           
  8727                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8728                           ;stkvar	_ap @ sp[(-14)+-4]
  8729  05CA  3F6E               	moviw [-18]fsr1
  8730  05CB  0084               	movwf	4
  8731  05CC  3F6F               	moviw [-17]fsr1
  8732  05CD  0085               	movwf	5
  8733  05CE  3002               	movlw	2
  8734  05CF  0280               	subwf	0,f
  8735  05D0  3101               	addfsr 0,1
  8736  05D1  3000               	movlw	0
  8737  05D2  3B80               	subwfb	0,f
  8738  05D3  313F               	addfsr 0,-1
  8739  05D4  3F00               	moviw [0]fsr0
  8740  05D5  00FE               	movwf	btemp+10
  8741  05D6  3F01               	moviw [1]fsr0
  8742  05D7  00FF               	movwf	btemp+11
  8743  05D8  087E               	movf	wtemp5,w
  8744  05D9  0084               	movwf	4
  8745  05DA  087F               	movf	wtemp5+1,w
  8746  05DB  0085               	movwf	5
  8747  05DC  0800               	movf	0,w
  8748                           
  8749                           ;stkvar	_c @ sp[(-14)+13]
  8750  05DD  3FFF               	movwi [-1]fsr1
  8751  05DE                     l4409:
  8752                           
  8753                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  8754                           ;stkvar	_c @ sp[(-14)+13]
  8755  05DE  3F7F               	moviw [-1]fsr1
  8756  05DF  001E               	movwi fsr1++
  8757                           
  8758                           ;stkvar	_fp @ sp[(-15)+0]
  8759  05E0  3F71               	moviw [-15]fsr1
  8760  05E1  3197  2784  3184   	fcall	_ctoa
  8761  05E4  2EB5               	goto	l1729
  8762  05E5                     l4413:
  8763                           
  8764                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8765                           ;stkvar	_fmt @ sp[(-14)+-2]
  8766  05E5  3F70               	moviw [-16]fsr1
  8767  05E6  0084               	movwf	4
  8768  05E7  3F71               	moviw [-15]fsr1
  8769  05E8  0085               	movwf	5
  8770  05E9  3F00               	moviw [0]fsr0
  8771  05EA  00FE               	movwf	btemp+10
  8772  05EB  3F01               	moviw [1]fsr0
  8773  05EC  00FF               	movwf	btemp+11
  8774  05ED  087E               	movf	wtemp5,w
  8775  05EE  0084               	movwf	4
  8776  05EF  087F               	movf	wtemp5+1,w
  8777  05F0  0085               	movwf	5
  8778  05F1  0012               	moviw fsr0++
  8779  05F2  3A64               	xorlw	100
  8780  05F3  1903               	btfsc	3,2
  8781  05F4  2DF6               	goto	u3341
  8782  05F5  2DF7               	goto	u3340
  8783  05F6                     u3341:
  8784  05F6  2E09               	goto	l4417
  8785  05F7                     u3340:
  8786  05F7                     l4415:
  8787                           
  8788                           ;stkvar	_fmt @ sp[(-14)+-2]
  8789  05F7  3F70               	moviw [-16]fsr1
  8790  05F8  0084               	movwf	4
  8791  05F9  3F71               	moviw [-15]fsr1
  8792  05FA  0085               	movwf	5
  8793  05FB  3F00               	moviw [0]fsr0
  8794  05FC  00FE               	movwf	btemp+10
  8795  05FD  3F01               	moviw [1]fsr0
  8796  05FE  00FF               	movwf	btemp+11
  8797  05FF  087E               	movf	wtemp5,w
  8798  0600  0084               	movwf	4
  8799  0601  087F               	movf	wtemp5+1,w
  8800  0602  0085               	movwf	5
  8801  0603  0012               	moviw fsr0++
  8802  0604  3A69               	xorlw	105
  8803  0605  1D03               	btfss	3,2
  8804  0606  2E08               	goto	u3351
  8805  0607  2E09               	goto	u3350
  8806  0608                     u3351:
  8807  0608  2E5E               	goto	l4425
  8808  0609                     u3350:
  8809  0609                     l4417:
  8810                           
  8811                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  8812                           ;stkvar	_fmt @ sp[(-14)+-2]
  8813  0609  3F70               	moviw [-16]fsr1
  8814  060A  0084               	movwf	4
  8815  060B  3F71               	moviw [-15]fsr1
  8816  060C  0085               	movwf	5
  8817  060D  3001               	movlw	1
  8818  060E  0780               	addwf	0,f
  8819  060F  3101               	addfsr 0,1
  8820  0610  1803               	skipnc
  8821  0611  0A80               	incf	0,f
  8822  0612                     l4419:
  8823                           
  8824                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8825                           ;stkvar	_ap @ sp[(-14)+-4]
  8826  0612  3F6E               	moviw [-18]fsr1
  8827  0613  0084               	movwf	4
  8828  0614  3F6F               	moviw [-17]fsr1
  8829  0615  0085               	movwf	5
  8830  0616  3002               	movlw	2
  8831  0617  0280               	subwf	0,f
  8832  0618  3101               	addfsr 0,1
  8833  0619  3000               	movlw	0
  8834  061A  3B80               	subwfb	0,f
  8835  061B  313F               	addfsr 0,-1
  8836  061C  3F00               	moviw [0]fsr0
  8837  061D  00FE               	movwf	btemp+10
  8838  061E  3F01               	moviw [1]fsr0
  8839  061F  00FF               	movwf	btemp+11
  8840  0620  087E               	movf	wtemp5,w
  8841  0621  0084               	movwf	4
  8842  0622  087F               	movf	wtemp5+1,w
  8843  0623  0085               	movwf	5
  8844  0624  3F00               	moviw [0]fsr0
  8845  0625  00FE               	movwf	btemp+10
  8846  0626  3F01               	moviw [1]fsr0
  8847  0627  00FF               	movwf	btemp+11
  8848  0628  087E               	movf	wtemp5,w
  8849  0629  0140               	movlb	0	; select bank0
  8850  062A  00EE               	movwf	___BTEMP12& (0+127)
  8851  062B  087F               	movf	wtemp5+1,w
  8852  062C  0141               	movlb	1	; select bank1
  8853  062D  00EA               	movwf	___BTEMP13& (0+127)
  8854  062E  3000               	movlw	0
  8855  062F  1BEA               	btfsc	___BTEMP13& (0+127),7
  8856  0630  30FF               	movlw	255
  8857  0631  00E9               	movwf	___BTEMP14& (0+127)
  8858  0632  00E8               	movwf	___BTEMP15& (0+127)
  8859  0633  00E7               	movwf	___BTEMP16& (0+127)
  8860  0634  00E6               	movwf	___BTEMP17& (0+127)
  8861  0635  00E5               	movwf	___BTEMP18& (0+127)
  8862  0636  00E4               	movwf	___BTEMP19& (0+127)
  8863                           
  8864                           ;stkvar	_ll @ sp[(-14)+3]
  8865  0637  0140               	movlb	0	; select bank0
  8866  0638  086E               	movf	___BTEMP12& (0+127),w
  8867  0639  3FF5               	movwi [-11]fsr1
  8868  063A  0141               	movlb	1	; select bank1
  8869  063B  086A               	movf	___BTEMP13& (0+127),w
  8870  063C  3FF6               	movwi [-10]fsr1
  8871  063D  0869               	movf	___BTEMP14& (0+127),w
  8872  063E  3FF7               	movwi [-9]fsr1
  8873  063F  0868               	movf	___BTEMP15& (0+127),w
  8874  0640  3FF8               	movwi [-8]fsr1
  8875  0641  0867               	movf	___BTEMP16& (0+127),w
  8876  0642  3FF9               	movwi [-7]fsr1
  8877  0643  0866               	movf	___BTEMP17& (0+127),w
  8878  0644  3FFA               	movwi [-6]fsr1
  8879  0645  0865               	movf	___BTEMP18& (0+127),w
  8880  0646  3FFB               	movwi [-5]fsr1
  8881  0647  0864               	movf	___BTEMP19& (0+127),w
  8882  0648  3FFC               	movwi [-4]fsr1
  8883  0649                     l4421:
  8884                           
  8885                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  8886                           ;stkvar	_ll @ sp[(-14)+3]
  8887  0649  3F75               	moviw [-11]fsr1
  8888  064A  001E               	movwi fsr1++
  8889  064B  3F75               	moviw [-11]fsr1
  8890  064C  001E               	movwi fsr1++
  8891  064D  3F75               	moviw [-11]fsr1
  8892  064E  001E               	movwi fsr1++
  8893  064F  3F75               	moviw [-11]fsr1
  8894  0650  001E               	movwi fsr1++
  8895  0651  3F75               	moviw [-11]fsr1
  8896  0652  001E               	movwi fsr1++
  8897  0653  3F75               	moviw [-11]fsr1
  8898  0654  001E               	movwi fsr1++
  8899  0655  3F75               	moviw [-11]fsr1
  8900  0656  001E               	movwi fsr1++
  8901  0657  3F75               	moviw [-11]fsr1
  8902  0658  001E               	movwi fsr1++
  8903                           
  8904                           ;stkvar	_fp @ sp[(-22)+0]
  8905  0659  3F6A               	moviw [-22]fsr1
  8906  065A  318C  244D  3184   	fcall	_dtoa
  8907  065D  2EB5               	goto	l1729
  8908  065E                     l4425:
  8909                           
  8910                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  8911                           ;stkvar	_fmt @ sp[(-14)+-2]
  8912  065E  3F70               	moviw [-16]fsr1
  8913  065F  0084               	movwf	4
  8914  0660  3F71               	moviw [-15]fsr1
  8915  0661  0085               	movwf	5
  8916  0662  3F00               	moviw [0]fsr0
  8917  0663  00FE               	movwf	btemp+10
  8918  0664  3F01               	moviw [1]fsr0
  8919  0665  00FF               	movwf	btemp+11
  8920  0666  087E               	movf	wtemp5,w
  8921  0667  0084               	movwf	4
  8922  0668  087F               	movf	wtemp5+1,w
  8923  0669  0085               	movwf	5
  8924  066A  0012               	moviw fsr0++
  8925  066B  3A25               	xorlw	37
  8926  066C  1D03               	btfss	3,2
  8927  066D  2E6F               	goto	u3361
  8928  066E  2E70               	goto	u3360
  8929  066F                     u3361:
  8930  066F  2E87               	goto	l4435
  8931  0670                     u3360:
  8932  0670                     l4427:
  8933                           
  8934                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  8935                           ;stkvar	_fmt @ sp[(-14)+-2]
  8936  0670  3F70               	moviw [-16]fsr1
  8937  0671  0084               	movwf	4
  8938  0672  3F71               	moviw [-15]fsr1
  8939  0673  0085               	movwf	5
  8940  0674  3001               	movlw	1
  8941  0675  0780               	addwf	0,f
  8942  0676  3101               	addfsr 0,1
  8943  0677  1803               	skipnc
  8944  0678  0A80               	incf	0,f
  8945  0679                     l4429:
  8946                           
  8947                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  8948                           ;stkvar	_fp @ sp[(-14)+0]
  8949  0679  3F72               	moviw [-14]fsr1
  8950  067A  001E               	movwi fsr1++
  8951  067B  3025               	movlw	37
  8952  067C  001E               	movwi fsr1++
  8953  067D  3000               	movlw	0
  8954  067E  001E               	movwi fsr1++
  8955  067F  3194  249A  3184   	fcall	_fputc
  8956  0682                     l4431:
  8957                           
  8958                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  8959  0682  3001               	movlw	1
  8960  0683  00F4               	movwf	btemp
  8961  0684  3000               	movlw	0
  8962  0685  00F5               	movwf	btemp+1
  8963  0686  2EB5               	goto	l1729
  8964  0687                     l4435:
  8965                           
  8966                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  8967                           ;stkvar	_fmt @ sp[(-14)+-2]
  8968  0687  3F70               	moviw [-16]fsr1
  8969  0688  0084               	movwf	4
  8970  0689  3F71               	moviw [-15]fsr1
  8971  068A  0085               	movwf	5
  8972  068B  3001               	movlw	1
  8973  068C  0780               	addwf	0,f
  8974  068D  3101               	addfsr 0,1
  8975  068E  1803               	skipnc
  8976  068F  0A80               	incf	0,f
  8977  0690                     l4437:
  8978                           
  8979                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  8980  0690  01F4               	clrf	btemp
  8981  0691  01F5               	clrf	btemp+1
  8982  0692  2EB5               	goto	l1729
  8983  0693                     l4441:
  8984                           
  8985                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  8986                           ;stkvar	_fp @ sp[(-14)+0]
  8987  0693  3F72               	moviw [-14]fsr1
  8988  0694  001E               	movwi fsr1++
  8989                           
  8990                           ;stkvar	_fmt @ sp[(-15)+-2]
  8991  0695  3F6F               	moviw [-17]fsr1
  8992  0696  0084               	movwf	4
  8993  0697  3F70               	moviw [-16]fsr1
  8994  0698  0085               	movwf	5
  8995  0699  3F00               	moviw [0]fsr0
  8996  069A  00FE               	movwf	btemp+10
  8997  069B  3F01               	moviw [1]fsr0
  8998  069C  00FF               	movwf	btemp+11
  8999  069D  087E               	movf	wtemp5,w
  9000  069E  0084               	movwf	4
  9001  069F  087F               	movf	wtemp5+1,w
  9002  06A0  0085               	movwf	5
  9003  06A1  0800               	movf	0,w	;code access
  9004  06A2  00FE               	movwf	btemp+10
  9005  06A3  01FF               	clrf	btemp+11
  9006  06A4  087E               	movf	wtemp5,w
  9007  06A5  001E               	movwi fsr1++
  9008  06A6  087F               	movf	wtemp5+1,w
  9009  06A7  001E               	movwi fsr1++
  9010  06A8  3194  249A  3184   	fcall	_fputc
  9011  06AB                     l4443:
  9012                           
  9013                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  9014                           ;stkvar	_fmt @ sp[(-14)+-2]
  9015  06AB  3F70               	moviw [-16]fsr1
  9016  06AC  0084               	movwf	4
  9017  06AD  3F71               	moviw [-15]fsr1
  9018  06AE  0085               	movwf	5
  9019  06AF  3001               	movlw	1
  9020  06B0  0780               	addwf	0,f
  9021  06B1  3101               	addfsr 0,1
  9022  06B2  1803               	skipnc
  9023  06B3  0A80               	incf	0,f
  9024  06B4  2E82               	goto	l4431
  9025  06B5                     l1729:
  9026                           
  9027                           ; _vfpfcnvrt: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, ar
      +                          gsize = 4, vargsize = 0
  9028  06B5  316E               	addfsr 1,-18
  9029  06B6  0008               	return
  9030  06B7                     __end_of_vfpfcnvrt:
  9031                           
  9032                           	psect	text4
  9033  0C4D                     __ptext4:	
  9034 ;; *************** function _dtoa *****************
  9035 ;; Defined at:
  9036 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  9037 ;; Parameters:    Size  Location     Type
  9038 ;;  fp              1    wreg     PTR struct _IO_FILE
  9039 ;;		 -> NULL(0), 
  9040 ;;  d               8  [STACK] long long 
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;  fp              1  [STACK] PTR struct _IO_FILE
  9043 ;;		 -> NULL(0), 
  9044 ;;  n               8  [STACK] long long 
  9045 ;;  i               2  [STACK] int 
  9046 ;;  s               2  [STACK] int 
  9047 ;;  w               2  [STACK] int 
  9048 ;;  p               2  [STACK] int 
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  2  [STACK] int 
  9051 ;; Registers used:
  9052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, ___BTE
      +MP12, ___BTEMP13, ___BTEMP14, ___BTEMP15, ___BTEMP16, ___BTEMP17, ___BTEMP18, ___BTEMP19, ___BTEMP36, ___BTEMP37, ___BTE
      +MP38, ___BTEMP39, ___BTEMP40, ___BTEMP41, ___BTEMP42, ___BTEMP43, pclath
  9053 ;; Tracked objects:
  9054 ;;		On entry : 3F/1
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9062 ;;Total ram usage:        0 bytes
  9063 ;; Hardware stack levels used:    1
  9064 ;; Hardware stack levels required when called:   16
  9065 ;; This function calls:
  9066 ;;		___aodiv
  9067 ;;		___aomod
  9068 ;;		_abs
  9069 ;;		_pad
  9070 ;; This function is called by:
  9071 ;;		_vfpfcnvrt
  9072 ;; This function uses a reentrant model
  9073 ;;
  9074                           
  9075                           
  9076                           ;psect for function _dtoa
  9077  0C4D                     _dtoa:
  9078                           
  9079                           ; autosize = 19, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9080  0C4D  3153               	addfsr 1,19
  9081                           
  9082                           ;incstack = 0
  9083 ;; hardware stack exceeded
  9084                           ; Regs used in _dtoa: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+1+btemp+8-___BTEMP19+___BTE
      +                          MP36-___BTEMP43+pclath]
  9085                           ;_fp stored from wreg
  9086                           ;stkvar	_fp @ sp[(-19)+0]
  9087  0C4E  3FED               	movwi [-19]fsr1
  9088  0C4F                     l4123:
  9089                           
  9090                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  9091                           ;stkvar	_d @ sp[(-19)+-8]
  9092                           ;stkvar	_n @ sp[(-19)+3]
  9093                           ;copy 8 bytes
  9094  0C4F  3F6C               	moviw [-20]fsr1
  9095  0C50  3FF7               	movwi [-9]fsr1
  9096  0C51  3F6B               	moviw [-21]fsr1
  9097  0C52  3FF6               	movwi [-10]fsr1
  9098  0C53  3F6A               	moviw [-22]fsr1
  9099  0C54  3FF5               	movwi [-11]fsr1
  9100  0C55  3F69               	moviw [-23]fsr1
  9101  0C56  3FF4               	movwi [-12]fsr1
  9102  0C57  3F68               	moviw [-24]fsr1
  9103  0C58  3FF3               	movwi [-13]fsr1
  9104  0C59  3F67               	moviw [-25]fsr1
  9105  0C5A  3FF2               	movwi [-14]fsr1
  9106  0C5B  3F66               	moviw [-26]fsr1
  9107  0C5C  3FF1               	movwi [-15]fsr1
  9108  0C5D  3F65               	moviw [-27]fsr1
  9109  0C5E  3FF0               	movwi [-16]fsr1
  9110  0C5F                     l4125:
  9111                           
  9112                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  9113                           ;stkvar	_n @ sp[(-19)+3]
  9114  0C5F  3F77               	moviw [-9]fsr1
  9115  0C60  00FF               	movwf	btemp+11
  9116  0C61  1BFF               	btfsc	btemp+11,7
  9117  0C62  2C64               	goto	u2921
  9118  0C63  2C66               	goto	u2920
  9119  0C64                     u2921:
  9120  0C64  3001               	movlw	1
  9121  0C65  2C67               	goto	u2930
  9122  0C66                     u2920:
  9123  0C66  3000               	movlw	0
  9124  0C67                     u2930:
  9125  0C67  00FE               	movwf	btemp+10
  9126  0C68  01FF               	clrf	btemp+11
  9127                           
  9128                           ;stkvar	_s @ sp[(-19)+13]
  9129  0C69  087E               	movf	btemp+10,w
  9130  0C6A  3FFA               	movwi [-6]fsr1
  9131  0C6B  087F               	movf	btemp+11,w
  9132  0C6C  3FFB               	movwi [-5]fsr1
  9133  0C6D                     l4127:
  9134                           
  9135                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  9136                           ;stkvar	_s @ sp[(-19)+13]
  9137  0C6D  3F7A               	moviw [-6]fsr1
  9138  0C6E  1903               	skipnz
  9139  0C6F  3F7B               	moviw [-5]fsr1
  9140  0C70  1903               	skipnz
  9141  0C71  2C73               	goto	u2941
  9142  0C72  2C74               	goto	u2940
  9143  0C73                     u2941:
  9144  0C73  2CB7               	goto	l4131
  9145  0C74                     u2940:
  9146  0C74                     l4129:
  9147                           
  9148                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  9149                           ;stkvar	_n @ sp[(-19)+3]
  9150                           ;stkvar	_n @ sp[(-19)+3]
  9151  0C74  3F77               	moviw [-9]fsr1
  9152  0C75  0989               	comf	9,f
  9153  0C76  0141               	movlb	1	; select bank1
  9154  0C77  00E4               	movwf	___BTEMP19& (0+127)
  9155  0C78  3F76               	moviw [-10]fsr1
  9156  0C79  0989               	comf	9,f
  9157  0C7A  00E5               	movwf	___BTEMP18& (0+127)
  9158  0C7B  3F75               	moviw [-11]fsr1
  9159  0C7C  0989               	comf	9,f
  9160  0C7D  00E6               	movwf	___BTEMP17& (0+127)
  9161  0C7E  3F74               	moviw [-12]fsr1
  9162  0C7F  0989               	comf	9,f
  9163  0C80  00E7               	movwf	___BTEMP16& (0+127)
  9164  0C81  3F73               	moviw [-13]fsr1
  9165  0C82  0989               	comf	9,f
  9166  0C83  00E8               	movwf	___BTEMP15& (0+127)
  9167  0C84  3F72               	moviw [-14]fsr1
  9168  0C85  0989               	comf	9,f
  9169  0C86  00E9               	movwf	___BTEMP14& (0+127)
  9170  0C87  3F71               	moviw [-15]fsr1
  9171  0C88  0989               	comf	9,f
  9172  0C89  00EA               	movwf	___BTEMP13& (0+127)
  9173  0C8A  3F70               	moviw [-16]fsr1
  9174  0C8B  0989               	comf	9,f
  9175  0C8C  0140               	movlb	0	; select bank0
  9176  0C8D  00EE               	movwf	___BTEMP12& (0+127)
  9177  0C8E  0AEE               	incf	___BTEMP12& (0+127),f
  9178  0C8F  1D03               	skipz
  9179  0C90  2CA5               	goto	u295lld
  9180  0C91  0141               	movlb	1	; select bank1
  9181  0C92  0AEA               	incf	___BTEMP13& (0+127),f
  9182  0C93  1D03               	skipz
  9183  0C94  2CA5               	goto	u295lld
  9184  0C95  0AE9               	incf	___BTEMP14& (0+127),f
  9185  0C96  1D03               	skipz
  9186  0C97  2CA5               	goto	u295lld
  9187  0C98  0AE8               	incf	___BTEMP15& (0+127),f
  9188  0C99  1D03               	skipz
  9189  0C9A  2CA5               	goto	u295lld
  9190  0C9B  0AE7               	incf	___BTEMP16& (0+127),f
  9191  0C9C  1D03               	skipz
  9192  0C9D  2CA5               	goto	u295lld
  9193  0C9E  0AE6               	incf	___BTEMP17& (0+127),f
  9194  0C9F  1D03               	skipz
  9195  0CA0  2CA5               	goto	u295lld
  9196  0CA1  0AE5               	incf	___BTEMP18& (0+127),f
  9197  0CA2  1D03               	skipz
  9198  0CA3  2CA5               	goto	u295lld
  9199  0CA4  0AE4               	incf	___BTEMP19& (0+127),f
  9200  0CA5                     u295lld:
  9201  0CA5  0140               	movlb	0	; select bank0
  9202  0CA6  086E               	movf	___BTEMP12& (0+127),w
  9203  0CA7  3FF0               	movwi [-16]fsr1
  9204  0CA8  0141               	movlb	1	; select bank1
  9205  0CA9  086A               	movf	___BTEMP13& (0+127),w
  9206  0CAA  3FF1               	movwi [-15]fsr1
  9207  0CAB  0869               	movf	___BTEMP14& (0+127),w
  9208  0CAC  3FF2               	movwi [-14]fsr1
  9209  0CAD  0868               	movf	___BTEMP15& (0+127),w
  9210  0CAE  3FF3               	movwi [-13]fsr1
  9211  0CAF  0867               	movf	___BTEMP16& (0+127),w
  9212  0CB0  3FF4               	movwi [-12]fsr1
  9213  0CB1  0866               	movf	___BTEMP17& (0+127),w
  9214  0CB2  3FF5               	movwi [-11]fsr1
  9215  0CB3  0865               	movf	___BTEMP18& (0+127),w
  9216  0CB4  3FF6               	movwi [-10]fsr1
  9217  0CB5  0864               	movf	___BTEMP19& (0+127),w
  9218  0CB6  3FF7               	movwi [-9]fsr1
  9219  0CB7                     l4131:
  9220                           
  9221                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  9222  0CB7  0140               	movlb	0	; select bank0
  9223  0CB8  1BBA               	btfsc	_prec+1,7
  9224  0CB9  2CBB               	goto	u2961
  9225  0CBA  2CBC               	goto	u2960
  9226  0CBB                     u2961:
  9227  0CBB  2CBD               	goto	l4135
  9228  0CBC                     u2960:
  9229  0CBC                     l4133:
  9230                           
  9231                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  9232  0CBC  10BB               	bcf	_flags,1
  9233  0CBD                     l4135:
  9234                           
  9235                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  9236  0CBD  083A               	movf	_prec+1,w
  9237  0CBE  3A80               	xorlw	128
  9238  0CBF  00F4               	movwf	btemp
  9239  0CC0  3080               	movlw	128
  9240  0CC1  0274               	subwf	btemp,w
  9241  0CC2  1D03               	skipz
  9242  0CC3  2CC6               	goto	u2975
  9243  0CC4  3001               	movlw	1
  9244  0CC5  0239               	subwf	_prec,w
  9245  0CC6                     u2975:
  9246  0CC6  1803               	skipnc
  9247  0CC7  2CC9               	goto	u2971
  9248  0CC8  2CCA               	goto	u2970
  9249  0CC9                     u2971:
  9250  0CC9  2CCF               	goto	l4139
  9251  0CCA                     u2970:
  9252  0CCA                     l4137:
  9253                           
  9254                           ;stkvar	_p @ sp[(-19)+17]
  9255  0CCA  3001               	movlw	1
  9256  0CCB  3FFE               	movwi [-2]fsr1
  9257  0CCC  3000               	movlw	0
  9258  0CCD  3FFF               	movwi [-1]fsr1
  9259  0CCE  2CD8               	goto	l1684
  9260  0CCF                     l4139:
  9261  0CCF  0140               	movlb	0	; select bank0
  9262  0CD0  083A               	movf	_prec+1,w
  9263  0CD1  00FF               	movwf	btemp+11
  9264  0CD2  0839               	movf	_prec,w
  9265  0CD3  00FE               	movwf	btemp+10
  9266                           
  9267                           ;stkvar	_p @ sp[(-19)+17]
  9268  0CD4  087E               	movf	btemp+10,w
  9269  0CD5  3FFE               	movwi [-2]fsr1
  9270  0CD6  087F               	movf	btemp+11,w
  9271  0CD7  3FFF               	movwi [-1]fsr1
  9272  0CD8                     l1684:
  9273                           
  9274                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  9275  0CD8  0140               	movlb	0	; select bank0
  9276  0CD9  0838               	movf	_width+1,w
  9277  0CDA  00FF               	movwf	btemp+11
  9278  0CDB  0837               	movf	_width,w
  9279  0CDC  00FE               	movwf	btemp+10
  9280                           
  9281                           ;stkvar	_w @ sp[(-19)+15]
  9282  0CDD  087E               	movf	btemp+10,w
  9283  0CDE  3FFC               	movwi [-4]fsr1
  9284  0CDF  087F               	movf	btemp+11,w
  9285  0CE0  3FFD               	movwi [-3]fsr1
  9286  0CE1                     l4141:
  9287                           
  9288                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  9289                           ;stkvar	_s @ sp[(-19)+13]
  9290  0CE1  3F7A               	moviw [-6]fsr1
  9291  0CE2  1903               	skipnz
  9292  0CE3  3F7B               	moviw [-5]fsr1
  9293  0CE4  1D03               	skipz
  9294  0CE5  2CE7               	goto	u2981
  9295  0CE6  2CE8               	goto	u2980
  9296  0CE7                     u2981:
  9297  0CE7  2CEC               	goto	l4145
  9298  0CE8                     u2980:
  9299  0CE8                     l4143:
  9300  0CE8  1D3B               	btfss	_flags,2
  9301  0CE9  2CEB               	goto	u2991
  9302  0CEA  2CEC               	goto	u2990
  9303  0CEB                     u2991:
  9304  0CEB  2CF6               	goto	l4147
  9305  0CEC                     u2990:
  9306  0CEC                     l4145:
  9307                           
  9308                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  9309  0CEC  30FF               	movlw	255
  9310  0CED  00FE               	movwf	btemp+10
  9311  0CEE  30FF               	movlw	255
  9312  0CEF  00FF               	movwf	btemp+11
  9313                           
  9314                           ;stkvar	_w @ sp[(-19)+15]
  9315  0CF0  3F7C               	moviw [-4]fsr1
  9316  0CF1  077E               	addwf	btemp+10,w
  9317  0CF2  3FFC               	movwi [-4]fsr1
  9318  0CF3  3F7D               	moviw [-3]fsr1
  9319  0CF4  3D7F               	addwfc	btemp+11,w
  9320  0CF5  3FFD               	movwi [-3]fsr1
  9321  0CF6                     l4147:
  9322                           
  9323                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  9324                           ;stkvar	_i @ sp[(-19)+11]
  9325  0CF6  301F               	movlw	31
  9326  0CF7  3FF8               	movwi [-8]fsr1
  9327  0CF8  3000               	movlw	0
  9328  0CF9  3FF9               	movwi [-7]fsr1
  9329  0CFA                     l4149:
  9330                           
  9331                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  9332  0CFA  0142               	movlb	2	; select bank2
  9333  0CFB  01BF               	clrf	(_dbuf^(0+256)+31)
  9334                           
  9335                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9336  0CFC  2D88               	goto	l4161
  9337  0CFD                     l4151:
  9338                           
  9339                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  9340  0CFD  30FF               	movlw	255
  9341  0CFE  00FE               	movwf	btemp+10
  9342  0CFF  30FF               	movlw	255
  9343  0D00  00FF               	movwf	btemp+11
  9344                           
  9345                           ;stkvar	_i @ sp[(-19)+11]
  9346  0D01  3F78               	moviw [-8]fsr1
  9347  0D02  077E               	addwf	btemp+10,w
  9348  0D03  3FF8               	movwi [-8]fsr1
  9349  0D04  3F79               	moviw [-7]fsr1
  9350  0D05  3D7F               	addwfc	btemp+11,w
  9351  0D06  3FF9               	movwi [-7]fsr1
  9352  0D07                     l4153:
  9353                           
  9354                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  9355                           ;stkvar	_i @ sp[(-19)+11]
  9356  0D07  3F78               	moviw [-8]fsr1
  9357  0D08  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9358  0D09  0084               	movwf	4
  9359  0D0A  3001               	movlw	1	; select bank2/3
  9360  0D0B  3001               	movlw	1	; select bank2/3
  9361  0D0C  0085               	movwf	5
  9362                           
  9363                           ;stkvar	_n @ sp[(-19)+3]
  9364  0D0D  3F70               	moviw [-16]fsr1
  9365  0D0E  001E               	movwi fsr1++
  9366  0D0F  3F70               	moviw [-16]fsr1
  9367  0D10  001E               	movwi fsr1++
  9368  0D11  3F70               	moviw [-16]fsr1
  9369  0D12  001E               	movwi fsr1++
  9370  0D13  3F70               	moviw [-16]fsr1
  9371  0D14  001E               	movwi fsr1++
  9372  0D15  3F70               	moviw [-16]fsr1
  9373  0D16  001E               	movwi fsr1++
  9374  0D17  3F70               	moviw [-16]fsr1
  9375  0D18  001E               	movwi fsr1++
  9376  0D19  3F70               	moviw [-16]fsr1
  9377  0D1A  001E               	movwi fsr1++
  9378  0D1B  3F70               	moviw [-16]fsr1
  9379  0D1C  001E               	movwi fsr1++
  9380  0D1D  300A               	movlw	10
  9381  0D1E  001E               	movwi fsr1++
  9382  0D1F  3000               	movlw	0
  9383  0D20  001E               	movwi fsr1++
  9384  0D21  001E               	movwi fsr1++
  9385  0D22  001E               	movwi fsr1++
  9386  0D23  001E               	movwi fsr1++
  9387  0D24  001E               	movwi fsr1++
  9388  0D25  001E               	movwi fsr1++
  9389  0D26  001E               	movwi fsr1++
  9390  0D27  318A  229A  318C   	fcall	___aomod
  9391  0D2A  0015               	moviw --fsr1
  9392  0D2B  0141               	movlb	1	; select bank1
  9393  0D2C  00DC               	movwf	___BTEMP43& (0+127)
  9394  0D2D  0015               	moviw --fsr1
  9395  0D2E  00DD               	movwf	___BTEMP42& (0+127)
  9396  0D2F  0015               	moviw --fsr1
  9397  0D30  00DE               	movwf	___BTEMP41& (0+127)
  9398  0D31  0015               	moviw --fsr1
  9399  0D32  00DF               	movwf	___BTEMP40& (0+127)
  9400  0D33  0015               	moviw --fsr1
  9401  0D34  00E0               	movwf	___BTEMP39& (0+127)
  9402  0D35  0015               	moviw --fsr1
  9403  0D36  00E1               	movwf	___BTEMP38& (0+127)
  9404  0D37  0015               	moviw --fsr1
  9405  0D38  00E2               	movwf	___BTEMP37& (0+127)
  9406  0D39  0015               	moviw --fsr1
  9407  0D3A  00E3               	movwf	___BTEMP36& (0+127)
  9408  0D3B  3178               	addfsr 1,-8
  9409  0D3C  0863               	movf	___BTEMP36& (0+127),w
  9410  0D3D  001E               	movwi fsr1++
  9411  0D3E  0862               	movf	___BTEMP37& (0+127),w
  9412  0D3F  001E               	movwi fsr1++
  9413  0D40  319E  2686  318C   	fcall	_abs
  9414  0D43  0874               	movf	wtemp0,w
  9415  0D44  3E30               	addlw	48
  9416  0D45  0080               	movwf	0
  9417  0D46                     l4155:
  9418                           
  9419                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  9420  0D46  30FF               	movlw	255
  9421  0D47  00FE               	movwf	btemp+10
  9422  0D48  30FF               	movlw	255
  9423  0D49  00FF               	movwf	btemp+11
  9424                           
  9425                           ;stkvar	_p @ sp[(-19)+17]
  9426  0D4A  3F7E               	moviw [-2]fsr1
  9427  0D4B  077E               	addwf	btemp+10,w
  9428  0D4C  3FFE               	movwi [-2]fsr1
  9429  0D4D  3F7F               	moviw [-1]fsr1
  9430  0D4E  3D7F               	addwfc	btemp+11,w
  9431  0D4F  3FFF               	movwi [-1]fsr1
  9432  0D50                     l4157:
  9433                           
  9434                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  9435  0D50  30FF               	movlw	255
  9436  0D51  00FE               	movwf	btemp+10
  9437  0D52  30FF               	movlw	255
  9438  0D53  00FF               	movwf	btemp+11
  9439                           
  9440                           ;stkvar	_w @ sp[(-19)+15]
  9441  0D54  3F7C               	moviw [-4]fsr1
  9442  0D55  077E               	addwf	btemp+10,w
  9443  0D56  3FFC               	movwi [-4]fsr1
  9444  0D57  3F7D               	moviw [-3]fsr1
  9445  0D58  3D7F               	addwfc	btemp+11,w
  9446  0D59  3FFD               	movwi [-3]fsr1
  9447  0D5A                     l4159:
  9448                           
  9449                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  9450                           ;stkvar	_n @ sp[(-19)+3]
  9451  0D5A  3F70               	moviw [-16]fsr1
  9452  0D5B  001E               	movwi fsr1++
  9453  0D5C  3F70               	moviw [-16]fsr1
  9454  0D5D  001E               	movwi fsr1++
  9455  0D5E  3F70               	moviw [-16]fsr1
  9456  0D5F  001E               	movwi fsr1++
  9457  0D60  3F70               	moviw [-16]fsr1
  9458  0D61  001E               	movwi fsr1++
  9459  0D62  3F70               	moviw [-16]fsr1
  9460  0D63  001E               	movwi fsr1++
  9461  0D64  3F70               	moviw [-16]fsr1
  9462  0D65  001E               	movwi fsr1++
  9463  0D66  3F70               	moviw [-16]fsr1
  9464  0D67  001E               	movwi fsr1++
  9465  0D68  3F70               	moviw [-16]fsr1
  9466  0D69  001E               	movwi fsr1++
  9467  0D6A  300A               	movlw	10
  9468  0D6B  001E               	movwi fsr1++
  9469  0D6C  3000               	movlw	0
  9470  0D6D  001E               	movwi fsr1++
  9471  0D6E  001E               	movwi fsr1++
  9472  0D6F  001E               	movwi fsr1++
  9473  0D70  001E               	movwi fsr1++
  9474  0D71  001E               	movwi fsr1++
  9475  0D72  001E               	movwi fsr1++
  9476  0D73  001E               	movwi fsr1++
  9477  0D74  318E  2611  318C   	fcall	___aodiv
  9478                           
  9479                           ;stkvar	_n @ sp[(-35)+3]
  9480                           ;copy 8 bytes from retv on stack
  9481  0D77  0015               	moviw --fsr1
  9482  0D78  3FE8               	movwi [-24]fsr1
  9483  0D79  0015               	moviw --fsr1
  9484  0D7A  3FE8               	movwi [-24]fsr1
  9485  0D7B  0015               	moviw --fsr1
  9486  0D7C  3FE8               	movwi [-24]fsr1
  9487  0D7D  0015               	moviw --fsr1
  9488  0D7E  3FE8               	movwi [-24]fsr1
  9489  0D7F  0015               	moviw --fsr1
  9490  0D80  3FE8               	movwi [-24]fsr1
  9491  0D81  0015               	moviw --fsr1
  9492  0D82  3FE8               	movwi [-24]fsr1
  9493  0D83  0015               	moviw --fsr1
  9494  0D84  3FE8               	movwi [-24]fsr1
  9495  0D85  0015               	moviw --fsr1
  9496  0D86  3FE8               	movwi [-24]fsr1
  9497  0D87  3178               	addfsr 1,-8
  9498  0D88                     l4161:
  9499                           
  9500                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9501                           ;stkvar	_i @ sp[(-19)+11]
  9502  0D88  3F78               	moviw [-8]fsr1
  9503  0D89  00FE               	movwf	btemp+10
  9504  0D8A  3F79               	moviw [-7]fsr1
  9505  0D8B  00FF               	movwf	btemp+11
  9506  0D8C  087F               	movf	btemp+11,w
  9507  0D8D  3A80               	xorlw	128
  9508  0D8E  00F4               	movwf	btemp
  9509  0D8F  3080               	movlw	128
  9510  0D90  0274               	subwf	btemp,w
  9511  0D91  1D03               	skipz
  9512  0D92  2D95               	goto	u3005
  9513  0D93  3001               	movlw	1
  9514  0D94  027E               	subwf	btemp+10,w
  9515  0D95                     u3005:
  9516  0D95  1C03               	skipc
  9517  0D96  2D98               	goto	u3001
  9518  0D97  2D99               	goto	u3000
  9519  0D98                     u3001:
  9520  0D98  2DD4               	goto	l4171
  9521  0D99                     u3000:
  9522  0D99                     l4163:
  9523                           
  9524                           ;stkvar	_n @ sp[(-19)+3]
  9525  0D99  3F77               	moviw [-9]fsr1
  9526  0D9A  00F4               	movwf	btemp
  9527  0D9B  3F76               	moviw [-10]fsr1
  9528  0D9C  04F4               	iorwf	btemp,f
  9529  0D9D  3F75               	moviw [-11]fsr1
  9530  0D9E  04F4               	iorwf	btemp,f
  9531  0D9F  3F74               	moviw [-12]fsr1
  9532  0DA0  04F4               	iorwf	btemp,f
  9533  0DA1  3F73               	moviw [-13]fsr1
  9534  0DA2  04F4               	iorwf	btemp,f
  9535  0DA3  3F72               	moviw [-14]fsr1
  9536  0DA4  04F4               	iorwf	btemp,f
  9537  0DA5  3F71               	moviw [-15]fsr1
  9538  0DA6  04F4               	iorwf	btemp,f
  9539  0DA7  3F70               	moviw [-16]fsr1
  9540  0DA8  04F4               	iorwf	btemp,f
  9541  0DA9  1D03               	skipz
  9542  0DAA  2DAC               	goto	u3011
  9543  0DAB  2DAD               	goto	u3010
  9544  0DAC                     u3011:
  9545  0DAC  2CFD               	goto	l4151
  9546  0DAD                     u3010:
  9547  0DAD                     l4165:
  9548                           
  9549                           ;stkvar	_p @ sp[(-19)+17]
  9550  0DAD  3F7E               	moviw [-2]fsr1
  9551  0DAE  00FE               	movwf	btemp+10
  9552  0DAF  3F7F               	moviw [-1]fsr1
  9553  0DB0  00FF               	movwf	btemp+11
  9554  0DB1  087F               	movf	btemp+11,w
  9555  0DB2  3A80               	xorlw	128
  9556  0DB3  00F4               	movwf	btemp
  9557  0DB4  3080               	movlw	128
  9558  0DB5  0274               	subwf	btemp,w
  9559  0DB6  1D03               	skipz
  9560  0DB7  2DBA               	goto	u3025
  9561  0DB8  3001               	movlw	1
  9562  0DB9  027E               	subwf	btemp+10,w
  9563  0DBA                     u3025:
  9564  0DBA  1803               	skipnc
  9565  0DBB  2DBD               	goto	u3021
  9566  0DBC  2DBE               	goto	u3020
  9567  0DBD                     u3021:
  9568  0DBD  2CFD               	goto	l4151
  9569  0DBE                     u3020:
  9570  0DBE                     l4167:
  9571                           
  9572                           ;stkvar	_w @ sp[(-19)+15]
  9573  0DBE  3F7C               	moviw [-4]fsr1
  9574  0DBF  00FE               	movwf	btemp+10
  9575  0DC0  3F7D               	moviw [-3]fsr1
  9576  0DC1  00FF               	movwf	btemp+11
  9577  0DC2  087F               	movf	btemp+11,w
  9578  0DC3  3A80               	xorlw	128
  9579  0DC4  00F4               	movwf	btemp
  9580  0DC5  3080               	movlw	128
  9581  0DC6  0274               	subwf	btemp,w
  9582  0DC7  1D03               	skipz
  9583  0DC8  2DCB               	goto	u3035
  9584  0DC9  3001               	movlw	1
  9585  0DCA  027E               	subwf	btemp+10,w
  9586  0DCB                     u3035:
  9587  0DCB  1C03               	skipc
  9588  0DCC  2DCE               	goto	u3031
  9589  0DCD  2DCF               	goto	u3030
  9590  0DCE                     u3031:
  9591  0DCE  2DD4               	goto	l4171
  9592  0DCF                     u3030:
  9593  0DCF                     l4169:
  9594  0DCF  0140               	movlb	0	; select bank0
  9595  0DD0  18BB               	btfsc	_flags,1
  9596  0DD1  2DD3               	goto	u3041
  9597  0DD2  2DD4               	goto	u3040
  9598  0DD3                     u3041:
  9599  0DD3  2CFD               	goto	l4151
  9600  0DD4                     u3040:
  9601  0DD4                     l4171:
  9602                           
  9603                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  9604                           ;stkvar	_s @ sp[(-19)+13]
  9605  0DD4  3F7A               	moviw [-6]fsr1
  9606  0DD5  1903               	skipnz
  9607  0DD6  3F7B               	moviw [-5]fsr1
  9608  0DD7  1D03               	skipz
  9609  0DD8  2DDA               	goto	u3051
  9610  0DD9  2DDB               	goto	u3050
  9611  0DDA                     u3051:
  9612  0DDA  2DE0               	goto	l4175
  9613  0DDB                     u3050:
  9614  0DDB                     l4173:
  9615  0DDB  0140               	movlb	0	; select bank0
  9616  0DDC  1D3B               	btfss	_flags,2
  9617  0DDD  2DDF               	goto	u3061
  9618  0DDE  2DE0               	goto	u3060
  9619  0DDF                     u3061:
  9620  0DDF  2E02               	goto	l4185
  9621  0DE0                     u3060:
  9622  0DE0                     l4175:
  9623                           
  9624                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  9625  0DE0  30FF               	movlw	255
  9626  0DE1  00FE               	movwf	btemp+10
  9627  0DE2  30FF               	movlw	255
  9628  0DE3  00FF               	movwf	btemp+11
  9629                           
  9630                           ;stkvar	_i @ sp[(-19)+11]
  9631  0DE4  3F78               	moviw [-8]fsr1
  9632  0DE5  077E               	addwf	btemp+10,w
  9633  0DE6  3FF8               	movwi [-8]fsr1
  9634  0DE7  3F79               	moviw [-7]fsr1
  9635  0DE8  3D7F               	addwfc	btemp+11,w
  9636  0DE9  3FF9               	movwi [-7]fsr1
  9637  0DEA                     l4177:
  9638                           
  9639                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  9640                           ;stkvar	_s @ sp[(-19)+13]
  9641  0DEA  3F7A               	moviw [-6]fsr1
  9642  0DEB  1903               	skipnz
  9643  0DEC  3F7B               	moviw [-5]fsr1
  9644  0DED  1D03               	skipz
  9645  0DEE  2DF0               	goto	u3071
  9646  0DEF  2DF1               	goto	u3070
  9647  0DF0                     u3071:
  9648  0DF0  2DF6               	goto	l4181
  9649  0DF1                     u3070:
  9650  0DF1                     l4179:
  9651                           
  9652                           ;stkvar	_dtoa$2137 @ sp[(-19)+1]
  9653  0DF1  302B               	movlw	43
  9654  0DF2  3FEE               	movwi [-18]fsr1
  9655  0DF3  3000               	movlw	0
  9656  0DF4  3FEF               	movwi [-17]fsr1
  9657  0DF5  2DFA               	goto	l4183
  9658  0DF6                     l4181:
  9659                           
  9660                           ;stkvar	_dtoa$2137 @ sp[(-19)+1]
  9661  0DF6  302D               	movlw	45
  9662  0DF7  3FEE               	movwi [-18]fsr1
  9663  0DF8  3000               	movlw	0
  9664  0DF9  3FEF               	movwi [-17]fsr1
  9665  0DFA                     l4183:
  9666                           
  9667                           ;stkvar	_dtoa$2137 @ sp[(-19)+1]
  9668                           ;stkvar	_i @ sp[(-19)+11]
  9669  0DFA  3F78               	moviw [-8]fsr1
  9670  0DFB  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9671  0DFC  0084               	movwf	4
  9672  0DFD  3001               	movlw	1	; select bank2/3
  9673  0DFE  3001               	movlw	1	; select bank2/3
  9674  0DFF  0085               	movwf	5
  9675  0E00  3F6E               	moviw [-18]fsr1
  9676  0E01  0080               	movwf	0
  9677  0E02                     l4185:
  9678                           
  9679                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  9680                           ;stkvar	_w @ sp[(-19)+15]
  9681  0E02  3F7C               	moviw [-4]fsr1
  9682  0E03  001E               	movwi fsr1++
  9683  0E04  3F7C               	moviw [-4]fsr1
  9684  0E05  001E               	movwi fsr1++
  9685                           
  9686                           ;stkvar	_i @ sp[(-21)+11]
  9687  0E06  3020               	movlw	(low (_dbuf| (0+256)))& (0+255)
  9688  0E07  00F4               	movwf	btemp
  9689  0E08  3F76               	moviw [-10]fsr1
  9690  0E09  0774               	addwf	btemp,w
  9691  0E0A  001E               	movwi fsr1++
  9692                           
  9693                           ;stkvar	_fp @ sp[(-22)+0]
  9694  0E0B  3F6A               	moviw [-22]fsr1
  9695  0E0C  3196  2665  318C   	fcall	_pad
  9696  0E0F                     l1702:
  9697                           
  9698                           ; _dtoa: autosize = 19, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize
      +                           = 8, vargsize = 0
  9699  0E0F  3165               	addfsr 1,-27
  9700  0E10  0008               	return
  9701  0E11                     __end_of_dtoa:
  9702                           
  9703                           	psect	text5
  9704  1665                     __ptext5:	
  9705 ;; *************** function _pad *****************
  9706 ;; Defined at:
  9707 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;  fp              1    wreg     PTR struct _IO_FILE
  9710 ;;		 -> NULL(0), 
  9711 ;;  buf             1  [STACK] PTR unsigned char 
  9712 ;;		 -> dbuf(32), 
  9713 ;;  p               2  [STACK] int 
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;  fp              1  [STACK] PTR struct _IO_FILE
  9716 ;;		 -> NULL(0), 
  9717 ;;  w               2  [STACK] int 
  9718 ;;  i               2  [STACK] int 
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  2  [STACK] int 
  9721 ;; Registers used:
  9722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, pclath
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : 0/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9732 ;;Total ram usage:        0 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:   15
  9735 ;; This function calls:
  9736 ;;		_fputc
  9737 ;;		_fputs
  9738 ;;		_strlen
  9739 ;; This function is called by:
  9740 ;;		_dtoa
  9741 ;; This function uses a reentrant model
  9742 ;;
  9743                           
  9744                           
  9745                           ;psect for function _pad
  9746  1665                     _pad:
  9747                           
  9748                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9749  1665  3145               	addfsr 1,5
  9750                           
  9751                           ;incstack = 0
  9752 ;; hardware stack exceeded
  9753                           ; Regs used in _pad: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+1+btemp+8-btemp+11+pclath]
  9754                           ;_fp stored from wreg
  9755                           ;stkvar	_fp @ sp[(-5)+0]
  9756  1666  3FFB               	movwi [-5]fsr1
  9757  1667                     l3999:
  9758                           
  9759                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9760  1667  0140               	movlb	0	; select bank0
  9761  1668  1C3B               	btfss	_flags,0
  9762  1669  2E6B               	goto	u2741
  9763  166A  2E6C               	goto	u2740
  9764  166B                     u2741:
  9765  166B  2E72               	goto	l4003
  9766  166C                     u2740:
  9767  166C                     l4001:
  9768                           
  9769                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9770                           ;stkvar	_fp @ sp[(-5)+0]
  9771  166C  3F7B               	moviw [-5]fsr1
  9772  166D  001E               	movwi fsr1++
  9773                           
  9774                           ;stkvar	_buf @ sp[(-6)+-1]
  9775  166E  3F79               	moviw [-7]fsr1
  9776  166F  319F  27A9  3196   	fcall	_fputs
  9777  1672                     l4003:
  9778                           
  9779                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9780                           ;stkvar	_p @ sp[(-5)+-3]
  9781  1672  3F78               	moviw [-8]fsr1
  9782  1673  00FE               	movwf	btemp+10
  9783  1674  3F79               	moviw [-7]fsr1
  9784  1675  00FF               	movwf	btemp+11
  9785  1676  1BFF               	btfsc	btemp+11,7
  9786  1677  2E79               	goto	u2751
  9787  1678  2E7A               	goto	u2750
  9788  1679                     u2751:
  9789  1679  2E7F               	goto	l4007
  9790  167A                     u2750:
  9791  167A                     l4005:
  9792                           
  9793                           ;stkvar	_p @ sp[(-5)+-3]
  9794                           ;stkvar	_w @ sp[(-5)+1]
  9795  167A  3F78               	moviw [-8]fsr1
  9796  167B  3FFC               	movwi [-4]fsr1
  9797  167C  3F79               	moviw [-7]fsr1
  9798  167D  3FFD               	movwi [-3]fsr1
  9799  167E  2E82               	goto	l1655
  9800  167F                     l4007:
  9801                           
  9802                           ;stkvar	_w @ sp[(-5)+1]
  9803  167F  3000               	movlw	0
  9804  1680  3FFC               	movwi [-4]fsr1
  9805  1681  3FFD               	movwi [-3]fsr1
  9806  1682                     l1655:
  9807                           
  9808                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9809                           ;stkvar	_i @ sp[(-5)+3]
  9810  1682  3000               	movlw	0
  9811  1683  3FFE               	movwi [-2]fsr1
  9812  1684  3FFF               	movwi [-1]fsr1
  9813                           
  9814                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9815  1685  2E96               	goto	l4013
  9816  1686                     l4009:
  9817                           
  9818                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9819                           ;stkvar	_fp @ sp[(-5)+0]
  9820  1686  3F7B               	moviw [-5]fsr1
  9821  1687  001E               	movwi fsr1++
  9822  1688  3020               	movlw	32
  9823  1689  001E               	movwi fsr1++
  9824  168A  3000               	movlw	0
  9825  168B  001E               	movwi fsr1++
  9826  168C  3194  249A  3196   	fcall	_fputc
  9827  168F                     l4011:
  9828                           
  9829                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9830                           ;stkvar	_i @ sp[(-5)+3]
  9831  168F  3F7E               	moviw [-2]fsr1
  9832  1690  3E01               	addlw	1
  9833  1691  3FFE               	movwi [-2]fsr1
  9834  1692  01F4               	clrf	btemp
  9835  1693  3F7F               	moviw [-1]fsr1
  9836  1694  3D74               	addwfc	btemp,w
  9837  1695  3FFF               	movwi [-1]fsr1
  9838  1696                     l4013:
  9839                           
  9840                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9841                           ;stkvar	_w @ sp[(-5)+1]
  9842  1696  3F7C               	moviw [-4]fsr1
  9843  1697  00FE               	movwf	btemp+10
  9844  1698  3F7D               	moviw [-3]fsr1
  9845  1699  00FF               	movwf	btemp+11
  9846                           
  9847                           ;stkvar	_i @ sp[(-5)+3]
  9848  169A  3F7E               	moviw [-2]fsr1
  9849  169B  00FC               	movwf	btemp+8
  9850  169C  3F7F               	moviw [-1]fsr1
  9851  169D  00FD               	movwf	btemp+9
  9852  169E  087D               	movf	btemp+9,w
  9853  169F  3A80               	xorlw	128
  9854  16A0  00F4               	movwf	btemp
  9855  16A1  087F               	movf	btemp+11,w
  9856  16A2  3A80               	xorlw	128
  9857  16A3  0274               	subwf	btemp,w
  9858  16A4  1D03               	skipz
  9859  16A5  2EA8               	goto	u2765
  9860  16A6  087E               	movf	btemp+10,w
  9861  16A7  027C               	subwf	btemp+8,w
  9862  16A8                     u2765:
  9863  16A8  1C03               	skipc
  9864  16A9  2EAB               	goto	u2761
  9865  16AA  2EAC               	goto	u2760
  9866  16AB                     u2761:
  9867  16AB  2E86               	goto	l4009
  9868  16AC                     u2760:
  9869  16AC                     l1658:
  9870                           
  9871                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9872  16AC  0140               	movlb	0	; select bank0
  9873  16AD  183B               	btfsc	_flags,0
  9874  16AE  2EB0               	goto	u2771
  9875  16AF  2EB1               	goto	u2770
  9876  16B0                     u2771:
  9877  16B0  2EB7               	goto	l4017
  9878  16B1                     u2770:
  9879  16B1                     l4015:
  9880                           
  9881                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9882                           ;stkvar	_fp @ sp[(-5)+0]
  9883  16B1  3F7B               	moviw [-5]fsr1
  9884  16B2  001E               	movwi fsr1++
  9885                           
  9886                           ;stkvar	_buf @ sp[(-6)+-1]
  9887  16B3  3F79               	moviw [-7]fsr1
  9888  16B4  319F  27A9  3196   	fcall	_fputs
  9889  16B7                     l4017:
  9890                           
  9891                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  9892                           ;stkvar	_w @ sp[(-5)+1]
  9893                           ;stkvar	_buf @ sp[(-5)+-1]
  9894  16B7  3F7A               	moviw [-6]fsr1
  9895  16B8  319D  25BD  3196   	fcall	_strlen
  9896  16BB  3F7C               	moviw [-4]fsr1
  9897  16BC  0774               	addwf	wtemp0,w
  9898  16BD  00F4               	movwf	wtemp0
  9899  16BE  3F7D               	moviw [-3]fsr1
  9900  16BF  3D75               	addwfc	wtemp0+1,w
  9901  16C0  00F5               	movwf	wtemp0+1
  9902  16C1                     l1660:
  9903                           
  9904                           ; _pad: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize =
      +                           3, vargsize = 0
  9905  16C1  3178               	addfsr 1,-8
  9906  16C2  0008               	return
  9907  16C3                     __end_of_pad:
  9908                           
  9909                           	psect	text6
  9910  1DBD                     __ptext6:	
  9911 ;; *************** function _strlen *****************
  9912 ;; Defined at:
  9913 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;  s               1    wreg     PTR const unsigned char 
  9916 ;;		 -> dbuf(32), 
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;  s               1  [STACK] PTR const unsigned char 
  9919 ;;		 -> dbuf(32), 
  9920 ;;  a               1  [STACK] PTR const unsigned char 
  9921 ;;		 -> dbuf(32), 
  9922 ;; Return value:  Size  Location     Type
  9923 ;;                  2  [STACK] unsigned int 
  9924 ;; Registers used:
  9925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+11
  9926 ;; Tracked objects:
  9927 ;;		On entry : 0/0
  9928 ;;		On exit  : 0/0
  9929 ;;		Unchanged: 0/0
  9930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9935 ;;Total ram usage:        0 bytes
  9936 ;; Hardware stack levels used:    1
  9937 ;; Hardware stack levels required when called:    8
  9938 ;; This function calls:
  9939 ;;		Nothing
  9940 ;; This function is called by:
  9941 ;;		_pad
  9942 ;; This function uses a reentrant model
  9943 ;;
  9944                           
  9945                           
  9946                           ;psect for function _strlen
  9947  1DBD                     _strlen:
  9948                           
  9949                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9950  1DBD  3142               	addfsr 1,2
  9951                           
  9952                           ;incstack = 0
  9953                           ; Regs used in _strlen: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+1+btemp+11]
  9954                           ;_s stored from wreg
  9955                           ;stkvar	_s @ sp[(-2)+0]
  9956  1DBE  3FFE               	movwi [-2]fsr1
  9957  1DBF                     l3877:
  9958                           
  9959                           ;stkvar	_s @ sp[(-2)+0]
  9960  1DBF  3F7E               	moviw [-2]fsr1
  9961                           
  9962                           ;stkvar	_a @ sp[(-2)+1]
  9963  1DC0  3FFF               	movwi [-1]fsr1
  9964  1DC1  2DC5               	goto	l3881
  9965  1DC2                     l3879:
  9966                           
  9967                           ;stkvar	_s @ sp[(-2)+0]
  9968  1DC2  3F7E               	moviw [-2]fsr1
  9969  1DC3  3E01               	addlw	1
  9970  1DC4  3FFE               	movwi [-2]fsr1
  9971  1DC5                     l3881:
  9972                           
  9973                           ;stkvar	_s @ sp[(-2)+0]
  9974  1DC5  3F7E               	moviw [-2]fsr1
  9975  1DC6  0084               	movwf	4
  9976  1DC7  3001               	movlw	1	; select bank2/3
  9977  1DC8  0085               	movwf	5
  9978  1DC9  0800               	movf	0,w
  9979  1DCA  1D03               	btfss	3,2
  9980  1DCB  2DCD               	goto	u2491
  9981  1DCC  2DCE               	goto	u2490
  9982  1DCD                     u2491:
  9983  1DCD  2DC2               	goto	l3879
  9984  1DCE                     u2490:
  9985  1DCE                     l3883:
  9986                           
  9987                           ;stkvar	_s @ sp[(-2)+0]
  9988  1DCE  3F7E               	moviw [-2]fsr1
  9989  1DCF  00FF               	movwf	btemp+11
  9990                           
  9991                           ;stkvar	_a @ sp[(-2)+1]
  9992  1DD0  3F7F               	moviw [-1]fsr1
  9993  1DD1  027F               	subwf	btemp+11,w
  9994  1DD2  00F4               	movwf	btemp
  9995  1DD3  01F5               	clrf	btemp+1
  9996  1DD4  1BF4               	btfsc	btemp,7
  9997  1DD5  03F5               	decf	btemp+1,f
  9998  1DD6                     l1817:
  9999                           
 10000                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsiz
      +                          e = 0, vargsize = 0
 10001  1DD6  317E               	addfsr 1,-2
 10002  1DD7  0008               	return
 10003  1DD8                     __end_of_strlen:
 10004                           
 10005                           	psect	text7
 10006  1FA9                     __ptext7:	
 10007 ;; *************** function _fputs *****************
 10008 ;; Defined at:
 10009 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;  s               1    wreg     PTR const unsigned char 
 10012 ;;		 -> dbuf(32), 
 10013 ;;  fp              1  [STACK] PTR struct _IO_FILE
 10014 ;;		 -> NULL(0), 
 10015 ;; Auto vars:     Size  Location     Type
 10016 ;;  s               1  [STACK] PTR const unsigned char 
 10017 ;;		 -> dbuf(32), 
 10018 ;;  i               2  [STACK] int 
 10019 ;;  c               1  [STACK] unsigned char 
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  2  [STACK] int 
 10022 ;; Registers used:
 10023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+8, btemp+9, btemp+10, btemp+11, pclath
 10024 ;; Tracked objects:
 10025 ;;		On entry : 3F/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10033 ;;Total ram usage:        0 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; Hardware stack levels required when called:   14
 10036 ;; This function calls:
 10037 ;;		_fputc
 10038 ;; This function is called by:
 10039 ;;		_pad
 10040 ;; This function uses a reentrant model
 10041 ;;
 10042                           
 10043                           
 10044                           ;psect for function _fputs
 10045  1FA9                     _fputs:
 10046                           
 10047                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10048  1FA9  3144               	addfsr 1,4
 10049                           
 10050                           ;incstack = 0
 10051 ;; hardware stack exceeded
 10052                           ; Regs used in _fputs: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+8-btemp+11+pclath]
 10053                           ;_s stored from wreg
 10054                           ;stkvar	_s @ sp[(-4)+0]
 10055  1FAA  3FFC               	movwi [-4]fsr1
 10056  1FAB                     l3869:
 10057                           
 10058                           ;stkvar	_i @ sp[(-4)+1]
 10059  1FAB  3000               	movlw	0
 10060  1FAC  3FFD               	movwi [-3]fsr1
 10061  1FAD  3FFE               	movwi [-2]fsr1
 10062  1FAE  2FC2               	goto	l3875
 10063  1FAF                     l3871:
 10064                           
 10065                           ;stkvar	_fp @ sp[(-4)+-1]
 10066  1FAF  3F7B               	moviw [-5]fsr1
 10067  1FB0  001E               	movwi fsr1++
 10068                           
 10069                           ;stkvar	_c @ sp[(-5)+3]
 10070  1FB1  3F7E               	moviw [-2]fsr1
 10071  1FB2  00FE               	movwf	btemp+10
 10072  1FB3  01FF               	clrf	btemp+11
 10073  1FB4  087E               	movf	wtemp5,w
 10074  1FB5  001E               	movwi fsr1++
 10075  1FB6  087F               	movf	wtemp5+1,w
 10076  1FB7  001E               	movwi fsr1++
 10077  1FB8  3194  249A  319F   	fcall	_fputc
 10078  1FBB                     l3873:
 10079                           
 10080                           ;stkvar	_i @ sp[(-4)+1]
 10081  1FBB  3F7D               	moviw [-3]fsr1
 10082  1FBC  3E01               	addlw	1
 10083  1FBD  3FFD               	movwi [-3]fsr1
 10084  1FBE  01F4               	clrf	btemp
 10085  1FBF  3F7E               	moviw [-2]fsr1
 10086  1FC0  3D74               	addwfc	btemp,w
 10087  1FC1  3FFE               	movwi [-2]fsr1
 10088  1FC2                     l3875:
 10089                           
 10090                           ;stkvar	_i @ sp[(-4)+1]
 10091  1FC2  3F7D               	moviw [-3]fsr1
 10092  1FC3  00FF               	movwf	btemp+11
 10093                           
 10094                           ;stkvar	_s @ sp[(-4)+0]
 10095  1FC4  3F7C               	moviw [-4]fsr1
 10096  1FC5  07FF               	addwf	btemp+11,f
 10097  1FC6  087F               	movf	btemp+11,w
 10098  1FC7  0084               	movwf	4
 10099  1FC8  3001               	movlw	1	; select bank2/3
 10100  1FC9  3001               	movlw	1	; select bank2/3
 10101  1FCA  0085               	movwf	5
 10102  1FCB  0800               	movf	0,w
 10103                           
 10104                           ;stkvar	_c @ sp[(-4)+3]
 10105  1FCC  3FFF               	movwi [-1]fsr1
 10106  1FCD  0889               	movf	9,f
 10107  1FCE  1D03               	btfss	3,2
 10108  1FCF  2FD1               	goto	u2481
 10109  1FD0  2FD2               	goto	u2480
 10110  1FD1                     u2481:
 10111  1FD1  2FAF               	goto	l3871
 10112  1FD2                     u2480:
 10113  1FD2                     l1811:
 10114                           
 10115                           ; _fputs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 10116  1FD2  317B               	addfsr 1,-5
 10117  1FD3  0008               	return
 10118  1FD4                     __end_of_fputs:
 10119                           
 10120                           	psect	text8
 10121  1E86                     __ptext8:	
 10122 ;; *************** function _abs *****************
 10123 ;; Defined at:
 10124 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
 10125 ;; Parameters:    Size  Location     Type
 10126 ;;  a               2  [STACK] int 
 10127 ;; Auto vars:     Size  Location     Type
 10128 ;;		None
 10129 ;; Return value:  Size  Location     Type
 10130 ;;                  2  [STACK] int 
 10131 ;; Registers used:
 10132 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+10, btemp+11
 10133 ;; Tracked objects:
 10134 ;;		On entry : 3F/1
 10135 ;;		On exit  : 0/0
 10136 ;;		Unchanged: 0/0
 10137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10142 ;;Total ram usage:        0 bytes
 10143 ;; Hardware stack levels used:    1
 10144 ;; Hardware stack levels required when called:    8
 10145 ;; This function calls:
 10146 ;;		Nothing
 10147 ;; This function is called by:
 10148 ;;		_dtoa
 10149 ;; This function uses a reentrant model
 10150 ;;
 10151                           
 10152                           
 10153                           ;psect for function _abs
 10154  1E86                     _abs:
 10155  1E86                     l4021:	
 10156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10157                           ;incstack = 0
 10158                           ; Regs used in _abs: [wreg+fsr1l+fsr1h+status,2-btemp+1+btemp+10+btemp+11]
 10159                           
 10160                           
 10161                           ;stkvar	_a @ sp[(0)+-2]
 10162  1E86  3F7E               	moviw [-2]fsr1
 10163  1E87  00FE               	movwf	btemp+10
 10164  1E88  3F7F               	moviw [-1]fsr1
 10165  1E89  00FF               	movwf	btemp+11
 10166  1E8A  087F               	movf	btemp+11,w
 10167  1E8B  3A80               	xorlw	128
 10168  1E8C  00F4               	movwf	btemp
 10169  1E8D  3080               	movlw	128
 10170  1E8E  0274               	subwf	btemp,w
 10171  1E8F  1D03               	skipz
 10172  1E90  2E93               	goto	u2785
 10173  1E91  3001               	movlw	1
 10174  1E92  027E               	subwf	btemp+10,w
 10175  1E93                     u2785:
 10176  1E93  1803               	skipnc
 10177  1E94  2E96               	goto	u2781
 10178  1E95  2E97               	goto	u2780
 10179  1E96                     u2781:
 10180  1E96  2EA1               	goto	l4025
 10181  1E97                     u2780:
 10182  1E97                     l4023:
 10183                           
 10184                           ;stkvar	_a @ sp[(0)+-2]
 10185  1E97  3F7E               	moviw [-2]fsr1
 10186  1E98  00F4               	movwf	btemp
 10187  1E99  3F7F               	moviw [-1]fsr1
 10188  1E9A  00F5               	movwf	btemp+1
 10189  1E9B  09F4               	comf	btemp,f
 10190  1E9C  09F5               	comf	btemp+1,f
 10191  1E9D  0AF4               	incf	btemp,f
 10192  1E9E  1903               	skipnz
 10193  1E9F  0AF5               	incf	btemp+1,f
 10194  1EA0  2EA5               	goto	l1746
 10195  1EA1                     l4025:
 10196                           
 10197                           ;stkvar	_a @ sp[(0)+-2]
 10198  1EA1  3F7E               	moviw [-2]fsr1
 10199  1EA2  00F4               	movwf	btemp
 10200  1EA3  3F7F               	moviw [-1]fsr1
 10201  1EA4  00F5               	movwf	btemp+1
 10202  1EA5                     l1746:
 10203                           
 10204                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 10205  1EA5  317E               	addfsr 1,-2
 10206  1EA6  0008               	return
 10207  1EA7                     __end_of_abs:
 10208                           
 10209                           	psect	text9
 10210  0A9A                     __ptext9:	
 10211 ;; *************** function ___aomod *****************
 10212 ;; Defined at:
 10213 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;  divisor         8  [STACK] long long 
 10216 ;;  dividend        8  [STACK] long long 
 10217 ;; Auto vars:     Size  Location     Type
 10218 ;;  sign            1  [STACK] unsigned char 
 10219 ;;  counter         1  [STACK] unsigned char 
 10220 ;; Return value:  Size  Location     Type
 10221 ;;                  8  [STACK] long long 
 10222 ;; Registers used:
 10223 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11, ___BTEMP12, ___BTEMP13, ___BTEMP14, ___BTEMP15, ___BTEMP1
      +6, ___BTEMP17, ___BTEMP18, ___BTEMP19, ___BTEMP36, ___BTEMP37, ___BTEMP38, ___BTEMP39, ___BTEMP40, ___BTEMP41, ___BTEMP4
      +2, ___BTEMP43
 10224 ;; Tracked objects:
 10225 ;;		On entry : 0/2
 10226 ;;		On exit  : 0/0
 10227 ;;		Unchanged: 0/0
 10228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10233 ;;Total ram usage:        0 bytes
 10234 ;; Hardware stack levels used:    1
 10235 ;; Hardware stack levels required when called:    8
 10236 ;; This function calls:
 10237 ;;		Nothing
 10238 ;; This function is called by:
 10239 ;;		_dtoa
 10240 ;; This function uses a reentrant model
 10241 ;;
 10242                           
 10243                           
 10244                           ;psect for function ___aomod
 10245  0A9A                     ___aomod:
 10246                           
 10247                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10248  0A9A  3142               	addfsr 1,2
 10249  0A9B                     l3961:	
 10250                           ;incstack = 0
 10251                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2-btemp+0+btemp+11-___BTEMP19+___BTEMP
      +                          36-___BTEMP43]
 10252                           
 10253                           
 10254                           ;stkvar	_sign @ sp[(-2)+0]
 10255  0A9B  3000               	movlw	0
 10256  0A9C  3FFE               	movwi [-2]fsr1
 10257  0A9D                     l3963:
 10258                           
 10259                           ;stkvar	_dividend @ sp[(-2)+-16]
 10260  0A9D  3F75               	moviw [-11]fsr1
 10261  0A9E  00FF               	movwf	btemp+11
 10262  0A9F  1FFF               	btfss	btemp+11,7
 10263  0AA0  2AA2               	goto	u2641
 10264  0AA1  2AA3               	goto	u2640
 10265  0AA2                     u2641:
 10266  0AA2  2AE8               	goto	l3969
 10267  0AA3                     u2640:
 10268  0AA3                     l3965:
 10269                           
 10270                           ;stkvar	_dividend @ sp[(-2)+-16]
 10271                           ;stkvar	_dividend @ sp[(-2)+-16]
 10272  0AA3  3F75               	moviw [-11]fsr1
 10273  0AA4  0989               	comf	9,f
 10274  0AA5  0141               	movlb	1	; select bank1
 10275  0AA6  00E4               	movwf	___BTEMP19& (0+127)
 10276  0AA7  3F74               	moviw [-12]fsr1
 10277  0AA8  0989               	comf	9,f
 10278  0AA9  00E5               	movwf	___BTEMP18& (0+127)
 10279  0AAA  3F73               	moviw [-13]fsr1
 10280  0AAB  0989               	comf	9,f
 10281  0AAC  00E6               	movwf	___BTEMP17& (0+127)
 10282  0AAD  3F72               	moviw [-14]fsr1
 10283  0AAE  0989               	comf	9,f
 10284  0AAF  00E7               	movwf	___BTEMP16& (0+127)
 10285  0AB0  3F71               	moviw [-15]fsr1
 10286  0AB1  0989               	comf	9,f
 10287  0AB2  00E8               	movwf	___BTEMP15& (0+127)
 10288  0AB3  3F70               	moviw [-16]fsr1
 10289  0AB4  0989               	comf	9,f
 10290  0AB5  00E9               	movwf	___BTEMP14& (0+127)
 10291  0AB6  3F6F               	moviw [-17]fsr1
 10292  0AB7  0989               	comf	9,f
 10293  0AB8  00EA               	movwf	___BTEMP13& (0+127)
 10294  0AB9  3F6E               	moviw [-18]fsr1
 10295  0ABA  0989               	comf	9,f
 10296  0ABB  0140               	movlb	0	; select bank0
 10297  0ABC  00EE               	movwf	___BTEMP12& (0+127)
 10298  0ABD  0AEE               	incf	___BTEMP12& (0+127),f
 10299  0ABE  1D03               	skipz
 10300  0ABF  2AD4               	goto	u265lld
 10301  0AC0  0141               	movlb	1	; select bank1
 10302  0AC1  0AEA               	incf	___BTEMP13& (0+127),f
 10303  0AC2  1D03               	skipz
 10304  0AC3  2AD4               	goto	u265lld
 10305  0AC4  0AE9               	incf	___BTEMP14& (0+127),f
 10306  0AC5  1D03               	skipz
 10307  0AC6  2AD4               	goto	u265lld
 10308  0AC7  0AE8               	incf	___BTEMP15& (0+127),f
 10309  0AC8  1D03               	skipz
 10310  0AC9  2AD4               	goto	u265lld
 10311  0ACA  0AE7               	incf	___BTEMP16& (0+127),f
 10312  0ACB  1D03               	skipz
 10313  0ACC  2AD4               	goto	u265lld
 10314  0ACD  0AE6               	incf	___BTEMP17& (0+127),f
 10315  0ACE  1D03               	skipz
 10316  0ACF  2AD4               	goto	u265lld
 10317  0AD0  0AE5               	incf	___BTEMP18& (0+127),f
 10318  0AD1  1D03               	skipz
 10319  0AD2  2AD4               	goto	u265lld
 10320  0AD3  0AE4               	incf	___BTEMP19& (0+127),f
 10321  0AD4                     u265lld:
 10322  0AD4  0140               	movlb	0	; select bank0
 10323  0AD5  086E               	movf	___BTEMP12& (0+127),w
 10324  0AD6  3FEE               	movwi [-18]fsr1
 10325  0AD7  0141               	movlb	1	; select bank1
 10326  0AD8  086A               	movf	___BTEMP13& (0+127),w
 10327  0AD9  3FEF               	movwi [-17]fsr1
 10328  0ADA  0869               	movf	___BTEMP14& (0+127),w
 10329  0ADB  3FF0               	movwi [-16]fsr1
 10330  0ADC  0868               	movf	___BTEMP15& (0+127),w
 10331  0ADD  3FF1               	movwi [-15]fsr1
 10332  0ADE  0867               	movf	___BTEMP16& (0+127),w
 10333  0ADF  3FF2               	movwi [-14]fsr1
 10334  0AE0  0866               	movf	___BTEMP17& (0+127),w
 10335  0AE1  3FF3               	movwi [-13]fsr1
 10336  0AE2  0865               	movf	___BTEMP18& (0+127),w
 10337  0AE3  3FF4               	movwi [-12]fsr1
 10338  0AE4  0864               	movf	___BTEMP19& (0+127),w
 10339  0AE5  3FF5               	movwi [-11]fsr1
 10340  0AE6                     l3967:
 10341  0AE6  3001               	movlw	1
 10342                           
 10343                           ;stkvar	_sign @ sp[(-2)+0]
 10344  0AE7  3FFE               	movwi [-2]fsr1
 10345  0AE8                     l3969:
 10346                           
 10347                           ;stkvar	_divisor @ sp[(-2)+-8]
 10348  0AE8  3F7D               	moviw [-3]fsr1
 10349  0AE9  00FF               	movwf	btemp+11
 10350  0AEA  1FFF               	btfss	btemp+11,7
 10351  0AEB  2AED               	goto	u2661
 10352  0AEC  2AEE               	goto	u2660
 10353  0AED                     u2661:
 10354  0AED  2B31               	goto	l3973
 10355  0AEE                     u2660:
 10356  0AEE                     l3971:
 10357                           
 10358                           ;stkvar	_divisor @ sp[(-2)+-8]
 10359                           ;stkvar	_divisor @ sp[(-2)+-8]
 10360  0AEE  3F7D               	moviw [-3]fsr1
 10361  0AEF  0989               	comf	9,f
 10362  0AF0  0141               	movlb	1	; select bank1
 10363  0AF1  00E4               	movwf	___BTEMP19& (0+127)
 10364  0AF2  3F7C               	moviw [-4]fsr1
 10365  0AF3  0989               	comf	9,f
 10366  0AF4  00E5               	movwf	___BTEMP18& (0+127)
 10367  0AF5  3F7B               	moviw [-5]fsr1
 10368  0AF6  0989               	comf	9,f
 10369  0AF7  00E6               	movwf	___BTEMP17& (0+127)
 10370  0AF8  3F7A               	moviw [-6]fsr1
 10371  0AF9  0989               	comf	9,f
 10372  0AFA  00E7               	movwf	___BTEMP16& (0+127)
 10373  0AFB  3F79               	moviw [-7]fsr1
 10374  0AFC  0989               	comf	9,f
 10375  0AFD  00E8               	movwf	___BTEMP15& (0+127)
 10376  0AFE  3F78               	moviw [-8]fsr1
 10377  0AFF  0989               	comf	9,f
 10378  0B00  00E9               	movwf	___BTEMP14& (0+127)
 10379  0B01  3F77               	moviw [-9]fsr1
 10380  0B02  0989               	comf	9,f
 10381  0B03  00EA               	movwf	___BTEMP13& (0+127)
 10382  0B04  3F76               	moviw [-10]fsr1
 10383  0B05  0989               	comf	9,f
 10384  0B06  0140               	movlb	0	; select bank0
 10385  0B07  00EE               	movwf	___BTEMP12& (0+127)
 10386  0B08  0AEE               	incf	___BTEMP12& (0+127),f
 10387  0B09  1D03               	skipz
 10388  0B0A  2B1F               	goto	u267lld
 10389  0B0B  0141               	movlb	1	; select bank1
 10390  0B0C  0AEA               	incf	___BTEMP13& (0+127),f
 10391  0B0D  1D03               	skipz
 10392  0B0E  2B1F               	goto	u267lld
 10393  0B0F  0AE9               	incf	___BTEMP14& (0+127),f
 10394  0B10  1D03               	skipz
 10395  0B11  2B1F               	goto	u267lld
 10396  0B12  0AE8               	incf	___BTEMP15& (0+127),f
 10397  0B13  1D03               	skipz
 10398  0B14  2B1F               	goto	u267lld
 10399  0B15  0AE7               	incf	___BTEMP16& (0+127),f
 10400  0B16  1D03               	skipz
 10401  0B17  2B1F               	goto	u267lld
 10402  0B18  0AE6               	incf	___BTEMP17& (0+127),f
 10403  0B19  1D03               	skipz
 10404  0B1A  2B1F               	goto	u267lld
 10405  0B1B  0AE5               	incf	___BTEMP18& (0+127),f
 10406  0B1C  1D03               	skipz
 10407  0B1D  2B1F               	goto	u267lld
 10408  0B1E  0AE4               	incf	___BTEMP19& (0+127),f
 10409  0B1F                     u267lld:
 10410  0B1F  0140               	movlb	0	; select bank0
 10411  0B20  086E               	movf	___BTEMP12& (0+127),w
 10412  0B21  3FF6               	movwi [-10]fsr1
 10413  0B22  0141               	movlb	1	; select bank1
 10414  0B23  086A               	movf	___BTEMP13& (0+127),w
 10415  0B24  3FF7               	movwi [-9]fsr1
 10416  0B25  0869               	movf	___BTEMP14& (0+127),w
 10417  0B26  3FF8               	movwi [-8]fsr1
 10418  0B27  0868               	movf	___BTEMP15& (0+127),w
 10419  0B28  3FF9               	movwi [-7]fsr1
 10420  0B29  0867               	movf	___BTEMP16& (0+127),w
 10421  0B2A  3FFA               	movwi [-6]fsr1
 10422  0B2B  0866               	movf	___BTEMP17& (0+127),w
 10423  0B2C  3FFB               	movwi [-5]fsr1
 10424  0B2D  0865               	movf	___BTEMP18& (0+127),w
 10425  0B2E  3FFC               	movwi [-4]fsr1
 10426  0B2F  0864               	movf	___BTEMP19& (0+127),w
 10427  0B30  3FFD               	movwi [-3]fsr1
 10428  0B31                     l3973:
 10429                           
 10430                           ;stkvar	_divisor @ sp[(-2)+-8]
 10431  0B31  3F7D               	moviw [-3]fsr1
 10432  0B32  00F4               	movwf	btemp
 10433  0B33  3F7C               	moviw [-4]fsr1
 10434  0B34  04F4               	iorwf	btemp,f
 10435  0B35  3F7B               	moviw [-5]fsr1
 10436  0B36  04F4               	iorwf	btemp,f
 10437  0B37  3F7A               	moviw [-6]fsr1
 10438  0B38  04F4               	iorwf	btemp,f
 10439  0B39  3F79               	moviw [-7]fsr1
 10440  0B3A  04F4               	iorwf	btemp,f
 10441  0B3B  3F78               	moviw [-8]fsr1
 10442  0B3C  04F4               	iorwf	btemp,f
 10443  0B3D  3F77               	moviw [-9]fsr1
 10444  0B3E  04F4               	iorwf	btemp,f
 10445  0B3F  3F76               	moviw [-10]fsr1
 10446  0B40  04F4               	iorwf	btemp,f
 10447  0B41  1903               	skipnz
 10448  0B42  2B44               	goto	u2681
 10449  0B43  2B45               	goto	u2680
 10450  0B44                     u2681:
 10451  0B44  2BF3               	goto	l3991
 10452  0B45                     u2680:
 10453  0B45                     l3975:
 10454  0B45  3001               	movlw	1
 10455                           
 10456                           ;stkvar	_counter @ sp[(-2)+1]
 10457  0B46  3FFF               	movwi [-1]fsr1
 10458  0B47  2B63               	goto	l3981
 10459  0B48                     l3977:
 10460                           
 10461                           ;stkvar	_divisor @ sp[(-2)+-8]
 10462  0B48  3F76               	moviw [-10]fsr1
 10463  0B49  3589               	lslf	9,f
 10464  0B4A  3FF6               	movwi [-10]fsr1
 10465  0B4B  3F77               	moviw [-9]fsr1
 10466  0B4C  0D89               	rlf	9,f
 10467  0B4D  3FF7               	movwi [-9]fsr1
 10468  0B4E  3F78               	moviw [-8]fsr1
 10469  0B4F  0D89               	rlf	9,f
 10470  0B50  3FF8               	movwi [-8]fsr1
 10471  0B51  3F79               	moviw [-7]fsr1
 10472  0B52  0D89               	rlf	9,f
 10473  0B53  3FF9               	movwi [-7]fsr1
 10474  0B54  3F7A               	moviw [-6]fsr1
 10475  0B55  0D89               	rlf	9,f
 10476  0B56  3FFA               	movwi [-6]fsr1
 10477  0B57  3F7B               	moviw [-5]fsr1
 10478  0B58  0D89               	rlf	9,f
 10479  0B59  3FFB               	movwi [-5]fsr1
 10480  0B5A  3F7C               	moviw [-4]fsr1
 10481  0B5B  0D89               	rlf	9,f
 10482  0B5C  3FFC               	movwi [-4]fsr1
 10483  0B5D  3F7D               	moviw [-3]fsr1
 10484  0B5E  0D89               	rlf	9,f
 10485  0B5F  3FFD               	movwi [-3]fsr1
 10486  0B60                     l3979:
 10487                           
 10488                           ;stkvar	_counter @ sp[(-2)+1]
 10489  0B60  3F7F               	moviw [-1]fsr1
 10490  0B61  3E01               	addlw	1
 10491  0B62  3FFF               	movwi [-1]fsr1
 10492  0B63                     l3981:
 10493                           
 10494                           ;stkvar	_divisor @ sp[(-2)+-8]
 10495  0B63  3F76               	moviw [-10]fsr1
 10496  0B64  0141               	movlb	1	; select bank1
 10497  0B65  00E3               	movwf	___BTEMP36& (0+127)
 10498  0B66  3F77               	moviw [-9]fsr1
 10499  0B67  00E2               	movwf	___BTEMP37& (0+127)
 10500  0B68  3F78               	moviw [-8]fsr1
 10501  0B69  00E1               	movwf	___BTEMP38& (0+127)
 10502  0B6A  3F79               	moviw [-7]fsr1
 10503  0B6B  00E0               	movwf	___BTEMP39& (0+127)
 10504  0B6C  3F7A               	moviw [-6]fsr1
 10505  0B6D  00DF               	movwf	___BTEMP40& (0+127)
 10506  0B6E  3F7B               	moviw [-5]fsr1
 10507  0B6F  00DE               	movwf	___BTEMP41& (0+127)
 10508  0B70  3F7C               	moviw [-4]fsr1
 10509  0B71  00DD               	movwf	___BTEMP42& (0+127)
 10510  0B72  3F7D               	moviw [-3]fsr1
 10511  0B73  00DC               	movwf	___BTEMP43& (0+127)
 10512  0B74  1FDC               	btfss	___BTEMP43& (0+127),7
 10513  0B75  2B77               	goto	u2691
 10514  0B76  2B78               	goto	u2690
 10515  0B77                     u2691:
 10516  0B77  2B48               	goto	l3977
 10517  0B78                     u2690:
 10518  0B78                     l3983:
 10519                           
 10520                           ;stkvar	_divisor @ sp[(-2)+-8]
 10521                           ;stkvar	_dividend @ sp[(-2)+-16]
 10522  0B78  3F75               	moviw [-11]fsr1
 10523  0B79  00F4               	movwf	btemp
 10524  0B7A  3F7D               	moviw [-3]fsr1
 10525  0B7B  0274               	subwf	btemp,w
 10526  0B7C  1D03               	skipz
 10527  0B7D  2BA6               	goto	u2705
 10528  0B7E  3F74               	moviw [-12]fsr1
 10529  0B7F  00F4               	movwf	btemp
 10530  0B80  3F7C               	moviw [-4]fsr1
 10531  0B81  0274               	subwf	btemp,w
 10532  0B82  1D03               	skipz
 10533  0B83  2BA6               	goto	u2705
 10534  0B84  3F73               	moviw [-13]fsr1
 10535  0B85  00F4               	movwf	btemp
 10536  0B86  3F7B               	moviw [-5]fsr1
 10537  0B87  0274               	subwf	btemp,w
 10538  0B88  1D03               	skipz
 10539  0B89  2BA6               	goto	u2705
 10540  0B8A  3F72               	moviw [-14]fsr1
 10541  0B8B  00F4               	movwf	btemp
 10542  0B8C  3F7A               	moviw [-6]fsr1
 10543  0B8D  0274               	subwf	btemp,w
 10544  0B8E  1D03               	skipz
 10545  0B8F  2BA6               	goto	u2705
 10546  0B90  3F71               	moviw [-15]fsr1
 10547  0B91  00F4               	movwf	btemp
 10548  0B92  3F79               	moviw [-7]fsr1
 10549  0B93  0274               	subwf	btemp,w
 10550  0B94  1D03               	skipz
 10551  0B95  2BA6               	goto	u2705
 10552  0B96  3F70               	moviw [-16]fsr1
 10553  0B97  00F4               	movwf	btemp
 10554  0B98  3F78               	moviw [-8]fsr1
 10555  0B99  0274               	subwf	btemp,w
 10556  0B9A  1D03               	skipz
 10557  0B9B  2BA6               	goto	u2705
 10558  0B9C  3F6F               	moviw [-17]fsr1
 10559  0B9D  00F4               	movwf	btemp
 10560  0B9E  3F77               	moviw [-9]fsr1
 10561  0B9F  0274               	subwf	btemp,w
 10562  0BA0  1D03               	skipz
 10563  0BA1  2BA6               	goto	u2705
 10564  0BA2  3F6E               	moviw [-18]fsr1
 10565  0BA3  00F4               	movwf	btemp
 10566  0BA4  3F76               	moviw [-10]fsr1
 10567  0BA5  0274               	subwf	btemp,w
 10568  0BA6                     u2705:
 10569  0BA6  1C03               	skipc
 10570  0BA7  2BA9               	goto	u2701
 10571  0BA8  2BAA               	goto	u2700
 10572  0BA9                     u2701:
 10573  0BA9  2BD2               	goto	l3987
 10574  0BAA                     u2700:
 10575  0BAA                     l3985:
 10576                           
 10577                           ;stkvar	_divisor @ sp[(-2)+-8]
 10578                           ;stkvar	_dividend @ sp[(-2)+-16]
 10579  0BAA  3F6E               	moviw [-18]fsr1
 10580  0BAB  00F4               	movwf	btemp
 10581  0BAC  3F76               	moviw [-10]fsr1
 10582  0BAD  0274               	subwf	btemp,w
 10583  0BAE  3FEE               	movwi [-18]fsr1
 10584  0BAF  3F6F               	moviw [-17]fsr1
 10585  0BB0  00F4               	movwf	btemp
 10586  0BB1  3F77               	moviw [-9]fsr1
 10587  0BB2  3B74               	subwfb	btemp,w
 10588  0BB3  3FEF               	movwi [-17]fsr1
 10589  0BB4  3F70               	moviw [-16]fsr1
 10590  0BB5  00F4               	movwf	btemp
 10591  0BB6  3F78               	moviw [-8]fsr1
 10592  0BB7  3B74               	subwfb	btemp,w
 10593  0BB8  3FF0               	movwi [-16]fsr1
 10594  0BB9  3F71               	moviw [-15]fsr1
 10595  0BBA  00F4               	movwf	btemp
 10596  0BBB  3F79               	moviw [-7]fsr1
 10597  0BBC  3B74               	subwfb	btemp,w
 10598  0BBD  3FF1               	movwi [-15]fsr1
 10599  0BBE  3F72               	moviw [-14]fsr1
 10600  0BBF  00F4               	movwf	btemp
 10601  0BC0  3F7A               	moviw [-6]fsr1
 10602  0BC1  3B74               	subwfb	btemp,w
 10603  0BC2  3FF2               	movwi [-14]fsr1
 10604  0BC3  3F73               	moviw [-13]fsr1
 10605  0BC4  00F4               	movwf	btemp
 10606  0BC5  3F7B               	moviw [-5]fsr1
 10607  0BC6  3B74               	subwfb	btemp,w
 10608  0BC7  3FF3               	movwi [-13]fsr1
 10609  0BC8  3F74               	moviw [-12]fsr1
 10610  0BC9  00F4               	movwf	btemp
 10611  0BCA  3F7C               	moviw [-4]fsr1
 10612  0BCB  3B74               	subwfb	btemp,w
 10613  0BCC  3FF4               	movwi [-12]fsr1
 10614  0BCD  3F75               	moviw [-11]fsr1
 10615  0BCE  00F4               	movwf	btemp
 10616  0BCF  3F7D               	moviw [-3]fsr1
 10617  0BD0  3B74               	subwfb	btemp,w
 10618  0BD1  3FF5               	movwi [-11]fsr1
 10619  0BD2                     l3987:
 10620                           
 10621                           ;stkvar	_divisor @ sp[(-2)+-8]
 10622  0BD2  3F7D               	moviw [-3]fsr1
 10623  0BD3  3689               	lsrf	9,f
 10624  0BD4  3FFD               	movwi [-3]fsr1
 10625  0BD5  3F7C               	moviw [-4]fsr1
 10626  0BD6  0C89               	rrf	9,f
 10627  0BD7  3FFC               	movwi [-4]fsr1
 10628  0BD8  3F7B               	moviw [-5]fsr1
 10629  0BD9  0C89               	rrf	9,f
 10630  0BDA  3FFB               	movwi [-5]fsr1
 10631  0BDB  3F7A               	moviw [-6]fsr1
 10632  0BDC  0C89               	rrf	9,f
 10633  0BDD  3FFA               	movwi [-6]fsr1
 10634  0BDE  3F79               	moviw [-7]fsr1
 10635  0BDF  0C89               	rrf	9,f
 10636  0BE0  3FF9               	movwi [-7]fsr1
 10637  0BE1  3F78               	moviw [-8]fsr1
 10638  0BE2  0C89               	rrf	9,f
 10639  0BE3  3FF8               	movwi [-8]fsr1
 10640  0BE4  3F77               	moviw [-9]fsr1
 10641  0BE5  0C89               	rrf	9,f
 10642  0BE6  3FF7               	movwi [-9]fsr1
 10643  0BE7  3F76               	moviw [-10]fsr1
 10644  0BE8  0C89               	rrf	9,f
 10645  0BE9  3FF6               	movwi [-10]fsr1
 10646  0BEA                     l3989:
 10647                           
 10648                           ;stkvar	_counter @ sp[(-2)+1]
 10649  0BEA  3F7F               	moviw [-1]fsr1
 10650  0BEB  00F4               	movwf	btemp
 10651  0BEC  3001               	movlw	1
 10652  0BED  0274               	subwf	btemp,w
 10653  0BEE  3FFF               	movwi [-1]fsr1
 10654  0BEF  1D03               	btfss	3,2
 10655  0BF0  2BF2               	goto	u2711
 10656  0BF1  2BF3               	goto	u2710
 10657  0BF2                     u2711:
 10658  0BF2  2B78               	goto	l3983
 10659  0BF3                     u2710:
 10660  0BF3                     l3991:
 10661                           
 10662                           ;stkvar	_sign @ sp[(-2)+0]
 10663  0BF3  3F7E               	moviw [-2]fsr1
 10664  0BF4  1903               	btfsc	3,2
 10665  0BF5  2BF7               	goto	u2721
 10666  0BF6  2BF8               	goto	u2720
 10667  0BF7                     u2721:
 10668  0BF7  2C3B               	goto	l3995
 10669  0BF8                     u2720:
 10670  0BF8                     l3993:
 10671                           
 10672                           ;stkvar	_dividend @ sp[(-2)+-16]
 10673                           ;stkvar	_dividend @ sp[(-2)+-16]
 10674  0BF8  3F75               	moviw [-11]fsr1
 10675  0BF9  0989               	comf	9,f
 10676  0BFA  0141               	movlb	1	; select bank1
 10677  0BFB  00E4               	movwf	___BTEMP19& (0+127)
 10678  0BFC  3F74               	moviw [-12]fsr1
 10679  0BFD  0989               	comf	9,f
 10680  0BFE  00E5               	movwf	___BTEMP18& (0+127)
 10681  0BFF  3F73               	moviw [-13]fsr1
 10682  0C00  0989               	comf	9,f
 10683  0C01  00E6               	movwf	___BTEMP17& (0+127)
 10684  0C02  3F72               	moviw [-14]fsr1
 10685  0C03  0989               	comf	9,f
 10686  0C04  00E7               	movwf	___BTEMP16& (0+127)
 10687  0C05  3F71               	moviw [-15]fsr1
 10688  0C06  0989               	comf	9,f
 10689  0C07  00E8               	movwf	___BTEMP15& (0+127)
 10690  0C08  3F70               	moviw [-16]fsr1
 10691  0C09  0989               	comf	9,f
 10692  0C0A  00E9               	movwf	___BTEMP14& (0+127)
 10693  0C0B  3F6F               	moviw [-17]fsr1
 10694  0C0C  0989               	comf	9,f
 10695  0C0D  00EA               	movwf	___BTEMP13& (0+127)
 10696  0C0E  3F6E               	moviw [-18]fsr1
 10697  0C0F  0989               	comf	9,f
 10698  0C10  0140               	movlb	0	; select bank0
 10699  0C11  00EE               	movwf	___BTEMP12& (0+127)
 10700  0C12  0AEE               	incf	___BTEMP12& (0+127),f
 10701  0C13  1D03               	skipz
 10702  0C14  2C29               	goto	u273lld
 10703  0C15  0141               	movlb	1	; select bank1
 10704  0C16  0AEA               	incf	___BTEMP13& (0+127),f
 10705  0C17  1D03               	skipz
 10706  0C18  2C29               	goto	u273lld
 10707  0C19  0AE9               	incf	___BTEMP14& (0+127),f
 10708  0C1A  1D03               	skipz
 10709  0C1B  2C29               	goto	u273lld
 10710  0C1C  0AE8               	incf	___BTEMP15& (0+127),f
 10711  0C1D  1D03               	skipz
 10712  0C1E  2C29               	goto	u273lld
 10713  0C1F  0AE7               	incf	___BTEMP16& (0+127),f
 10714  0C20  1D03               	skipz
 10715  0C21  2C29               	goto	u273lld
 10716  0C22  0AE6               	incf	___BTEMP17& (0+127),f
 10717  0C23  1D03               	skipz
 10718  0C24  2C29               	goto	u273lld
 10719  0C25  0AE5               	incf	___BTEMP18& (0+127),f
 10720  0C26  1D03               	skipz
 10721  0C27  2C29               	goto	u273lld
 10722  0C28  0AE4               	incf	___BTEMP19& (0+127),f
 10723  0C29                     u273lld:
 10724  0C29  0140               	movlb	0	; select bank0
 10725  0C2A  086E               	movf	___BTEMP12& (0+127),w
 10726  0C2B  3FEE               	movwi [-18]fsr1
 10727  0C2C  0141               	movlb	1	; select bank1
 10728  0C2D  086A               	movf	___BTEMP13& (0+127),w
 10729  0C2E  3FEF               	movwi [-17]fsr1
 10730  0C2F  0869               	movf	___BTEMP14& (0+127),w
 10731  0C30  3FF0               	movwi [-16]fsr1
 10732  0C31  0868               	movf	___BTEMP15& (0+127),w
 10733  0C32  3FF1               	movwi [-15]fsr1
 10734  0C33  0867               	movf	___BTEMP16& (0+127),w
 10735  0C34  3FF2               	movwi [-14]fsr1
 10736  0C35  0866               	movf	___BTEMP17& (0+127),w
 10737  0C36  3FF3               	movwi [-13]fsr1
 10738  0C37  0865               	movf	___BTEMP18& (0+127),w
 10739  0C38  3FF4               	movwi [-12]fsr1
 10740  0C39  0864               	movf	___BTEMP19& (0+127),w
 10741  0C3A  3FF5               	movwi [-11]fsr1
 10742  0C3B                     l3995:
 10743                           
 10744                           ;stkvar	_dividend @ sp[(-2)+-16]
 10745                           ;stkvar	?___aomod @ sp[(-2)+-8]
 10746                           ;copy 8 bytes
 10747  0C3B  3F75               	moviw [-11]fsr1
 10748  0C3C  3FFD               	movwi [-3]fsr1
 10749  0C3D  3F74               	moviw [-12]fsr1
 10750  0C3E  3FFC               	movwi [-4]fsr1
 10751  0C3F  3F73               	moviw [-13]fsr1
 10752  0C40  3FFB               	movwi [-5]fsr1
 10753  0C41  3F72               	moviw [-14]fsr1
 10754  0C42  3FFA               	movwi [-6]fsr1
 10755  0C43  3F71               	moviw [-15]fsr1
 10756  0C44  3FF9               	movwi [-7]fsr1
 10757  0C45  3F70               	moviw [-16]fsr1
 10758  0C46  3FF8               	movwi [-8]fsr1
 10759  0C47  3F6F               	moviw [-17]fsr1
 10760  0C48  3FF7               	movwi [-9]fsr1
 10761  0C49  3F6E               	moviw [-18]fsr1
 10762  0C4A  3FF6               	movwi [-10]fsr1
 10763  0C4B                     l1275:
 10764                           
 10765                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10766  0C4B  317E               	addfsr 1,-2
 10767  0C4C  0008               	return
 10768  0C4D                     __end_of___aomod:
 10769                           
 10770                           	psect	text10
 10771  0E11                     __ptext10:	
 10772 ;; *************** function ___aodiv *****************
 10773 ;; Defined at:
 10774 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;  divisor         8  [STACK] long long 
 10777 ;;  dividend        8  [STACK] long long 
 10778 ;; Auto vars:     Size  Location     Type
 10779 ;;  quotient        8  [STACK] long long 
 10780 ;;  sign            1  [STACK] unsigned char 
 10781 ;;  counter         1  [STACK] unsigned char 
 10782 ;; Return value:  Size  Location     Type
 10783 ;;                  8  [STACK] long long 
 10784 ;; Registers used:
 10785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11, ___BTEMP12, ___BTEMP13, ___BTEMP14, ___BTEMP15, ___BTEMP1
      +6, ___BTEMP17, ___BTEMP18, ___BTEMP19, ___BTEMP36, ___BTEMP37, ___BTEMP38, ___BTEMP39, ___BTEMP40, ___BTEMP41, ___BTEMP4
      +2, ___BTEMP43
 10786 ;; Tracked objects:
 10787 ;;		On entry : 0/2
 10788 ;;		On exit  : 0/0
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;Total ram usage:        0 bytes
 10796 ;; Hardware stack levels used:    1
 10797 ;; Hardware stack levels required when called:    8
 10798 ;; This function calls:
 10799 ;;		Nothing
 10800 ;; This function is called by:
 10801 ;;		_dtoa
 10802 ;; This function uses a reentrant model
 10803 ;;
 10804                           
 10805                           
 10806                           ;psect for function ___aodiv
 10807  0E11                     ___aodiv:
 10808                           
 10809                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 10810  0E11  314A               	addfsr 1,10
 10811  0E12                     l3915:	
 10812                           ;incstack = 0
 10813                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2-btemp+0+btemp+11-___BTEMP19+___BTEMP
      +                          36-___BTEMP43]
 10814                           
 10815                           
 10816                           ;stkvar	_sign @ sp[(-10)+8]
 10817  0E12  3000               	movlw	0
 10818  0E13  3FFE               	movwi [-2]fsr1
 10819  0E14                     l3917:
 10820                           
 10821                           ;stkvar	_divisor @ sp[(-10)+-8]
 10822  0E14  3F75               	moviw [-11]fsr1
 10823  0E15  00FF               	movwf	btemp+11
 10824  0E16  1FFF               	btfss	btemp+11,7
 10825  0E17  2E19               	goto	u2541
 10826  0E18  2E1A               	goto	u2540
 10827  0E19                     u2541:
 10828  0E19  2E5F               	goto	l3923
 10829  0E1A                     u2540:
 10830  0E1A                     l3919:
 10831                           
 10832                           ;stkvar	_divisor @ sp[(-10)+-8]
 10833                           ;stkvar	_divisor @ sp[(-10)+-8]
 10834  0E1A  3F75               	moviw [-11]fsr1
 10835  0E1B  0989               	comf	9,f
 10836  0E1C  0141               	movlb	1	; select bank1
 10837  0E1D  00E4               	movwf	___BTEMP19& (0+127)
 10838  0E1E  3F74               	moviw [-12]fsr1
 10839  0E1F  0989               	comf	9,f
 10840  0E20  00E5               	movwf	___BTEMP18& (0+127)
 10841  0E21  3F73               	moviw [-13]fsr1
 10842  0E22  0989               	comf	9,f
 10843  0E23  00E6               	movwf	___BTEMP17& (0+127)
 10844  0E24  3F72               	moviw [-14]fsr1
 10845  0E25  0989               	comf	9,f
 10846  0E26  00E7               	movwf	___BTEMP16& (0+127)
 10847  0E27  3F71               	moviw [-15]fsr1
 10848  0E28  0989               	comf	9,f
 10849  0E29  00E8               	movwf	___BTEMP15& (0+127)
 10850  0E2A  3F70               	moviw [-16]fsr1
 10851  0E2B  0989               	comf	9,f
 10852  0E2C  00E9               	movwf	___BTEMP14& (0+127)
 10853  0E2D  3F6F               	moviw [-17]fsr1
 10854  0E2E  0989               	comf	9,f
 10855  0E2F  00EA               	movwf	___BTEMP13& (0+127)
 10856  0E30  3F6E               	moviw [-18]fsr1
 10857  0E31  0989               	comf	9,f
 10858  0E32  0140               	movlb	0	; select bank0
 10859  0E33  00EE               	movwf	___BTEMP12& (0+127)
 10860  0E34  0AEE               	incf	___BTEMP12& (0+127),f
 10861  0E35  1D03               	skipz
 10862  0E36  2E4B               	goto	u255lld
 10863  0E37  0141               	movlb	1	; select bank1
 10864  0E38  0AEA               	incf	___BTEMP13& (0+127),f
 10865  0E39  1D03               	skipz
 10866  0E3A  2E4B               	goto	u255lld
 10867  0E3B  0AE9               	incf	___BTEMP14& (0+127),f
 10868  0E3C  1D03               	skipz
 10869  0E3D  2E4B               	goto	u255lld
 10870  0E3E  0AE8               	incf	___BTEMP15& (0+127),f
 10871  0E3F  1D03               	skipz
 10872  0E40  2E4B               	goto	u255lld
 10873  0E41  0AE7               	incf	___BTEMP16& (0+127),f
 10874  0E42  1D03               	skipz
 10875  0E43  2E4B               	goto	u255lld
 10876  0E44  0AE6               	incf	___BTEMP17& (0+127),f
 10877  0E45  1D03               	skipz
 10878  0E46  2E4B               	goto	u255lld
 10879  0E47  0AE5               	incf	___BTEMP18& (0+127),f
 10880  0E48  1D03               	skipz
 10881  0E49  2E4B               	goto	u255lld
 10882  0E4A  0AE4               	incf	___BTEMP19& (0+127),f
 10883  0E4B                     u255lld:
 10884  0E4B  0140               	movlb	0	; select bank0
 10885  0E4C  086E               	movf	___BTEMP12& (0+127),w
 10886  0E4D  3FEE               	movwi [-18]fsr1
 10887  0E4E  0141               	movlb	1	; select bank1
 10888  0E4F  086A               	movf	___BTEMP13& (0+127),w
 10889  0E50  3FEF               	movwi [-17]fsr1
 10890  0E51  0869               	movf	___BTEMP14& (0+127),w
 10891  0E52  3FF0               	movwi [-16]fsr1
 10892  0E53  0868               	movf	___BTEMP15& (0+127),w
 10893  0E54  3FF1               	movwi [-15]fsr1
 10894  0E55  0867               	movf	___BTEMP16& (0+127),w
 10895  0E56  3FF2               	movwi [-14]fsr1
 10896  0E57  0866               	movf	___BTEMP17& (0+127),w
 10897  0E58  3FF3               	movwi [-13]fsr1
 10898  0E59  0865               	movf	___BTEMP18& (0+127),w
 10899  0E5A  3FF4               	movwi [-12]fsr1
 10900  0E5B  0864               	movf	___BTEMP19& (0+127),w
 10901  0E5C  3FF5               	movwi [-11]fsr1
 10902  0E5D                     l3921:
 10903  0E5D  3001               	movlw	1
 10904                           
 10905                           ;stkvar	_sign @ sp[(-10)+8]
 10906  0E5E  3FFE               	movwi [-2]fsr1
 10907  0E5F                     l3923:
 10908                           
 10909                           ;stkvar	_dividend @ sp[(-10)+-16]
 10910  0E5F  3F6D               	moviw [-19]fsr1
 10911  0E60  00FF               	movwf	btemp+11
 10912  0E61  1FFF               	btfss	btemp+11,7
 10913  0E62  2E64               	goto	u2561
 10914  0E63  2E65               	goto	u2560
 10915  0E64                     u2561:
 10916  0E64  2EAB               	goto	l3929
 10917  0E65                     u2560:
 10918  0E65                     l3925:
 10919                           
 10920                           ;stkvar	_dividend @ sp[(-10)+-16]
 10921                           ;stkvar	_dividend @ sp[(-10)+-16]
 10922  0E65  3F6D               	moviw [-19]fsr1
 10923  0E66  0989               	comf	9,f
 10924  0E67  0141               	movlb	1	; select bank1
 10925  0E68  00E4               	movwf	___BTEMP19& (0+127)
 10926  0E69  3F6C               	moviw [-20]fsr1
 10927  0E6A  0989               	comf	9,f
 10928  0E6B  00E5               	movwf	___BTEMP18& (0+127)
 10929  0E6C  3F6B               	moviw [-21]fsr1
 10930  0E6D  0989               	comf	9,f
 10931  0E6E  00E6               	movwf	___BTEMP17& (0+127)
 10932  0E6F  3F6A               	moviw [-22]fsr1
 10933  0E70  0989               	comf	9,f
 10934  0E71  00E7               	movwf	___BTEMP16& (0+127)
 10935  0E72  3F69               	moviw [-23]fsr1
 10936  0E73  0989               	comf	9,f
 10937  0E74  00E8               	movwf	___BTEMP15& (0+127)
 10938  0E75  3F68               	moviw [-24]fsr1
 10939  0E76  0989               	comf	9,f
 10940  0E77  00E9               	movwf	___BTEMP14& (0+127)
 10941  0E78  3F67               	moviw [-25]fsr1
 10942  0E79  0989               	comf	9,f
 10943  0E7A  00EA               	movwf	___BTEMP13& (0+127)
 10944  0E7B  3F66               	moviw [-26]fsr1
 10945  0E7C  0989               	comf	9,f
 10946  0E7D  0140               	movlb	0	; select bank0
 10947  0E7E  00EE               	movwf	___BTEMP12& (0+127)
 10948  0E7F  0AEE               	incf	___BTEMP12& (0+127),f
 10949  0E80  1D03               	skipz
 10950  0E81  2E96               	goto	u257lld
 10951  0E82  0141               	movlb	1	; select bank1
 10952  0E83  0AEA               	incf	___BTEMP13& (0+127),f
 10953  0E84  1D03               	skipz
 10954  0E85  2E96               	goto	u257lld
 10955  0E86  0AE9               	incf	___BTEMP14& (0+127),f
 10956  0E87  1D03               	skipz
 10957  0E88  2E96               	goto	u257lld
 10958  0E89  0AE8               	incf	___BTEMP15& (0+127),f
 10959  0E8A  1D03               	skipz
 10960  0E8B  2E96               	goto	u257lld
 10961  0E8C  0AE7               	incf	___BTEMP16& (0+127),f
 10962  0E8D  1D03               	skipz
 10963  0E8E  2E96               	goto	u257lld
 10964  0E8F  0AE6               	incf	___BTEMP17& (0+127),f
 10965  0E90  1D03               	skipz
 10966  0E91  2E96               	goto	u257lld
 10967  0E92  0AE5               	incf	___BTEMP18& (0+127),f
 10968  0E93  1D03               	skipz
 10969  0E94  2E96               	goto	u257lld
 10970  0E95  0AE4               	incf	___BTEMP19& (0+127),f
 10971  0E96                     u257lld:
 10972  0E96  0140               	movlb	0	; select bank0
 10973  0E97  086E               	movf	___BTEMP12& (0+127),w
 10974  0E98  3FE6               	movwi [-26]fsr1
 10975  0E99  0141               	movlb	1	; select bank1
 10976  0E9A  086A               	movf	___BTEMP13& (0+127),w
 10977  0E9B  3FE7               	movwi [-25]fsr1
 10978  0E9C  0869               	movf	___BTEMP14& (0+127),w
 10979  0E9D  3FE8               	movwi [-24]fsr1
 10980  0E9E  0868               	movf	___BTEMP15& (0+127),w
 10981  0E9F  3FE9               	movwi [-23]fsr1
 10982  0EA0  0867               	movf	___BTEMP16& (0+127),w
 10983  0EA1  3FEA               	movwi [-22]fsr1
 10984  0EA2  0866               	movf	___BTEMP17& (0+127),w
 10985  0EA3  3FEB               	movwi [-21]fsr1
 10986  0EA4  0865               	movf	___BTEMP18& (0+127),w
 10987  0EA5  3FEC               	movwi [-20]fsr1
 10988  0EA6  0864               	movf	___BTEMP19& (0+127),w
 10989  0EA7  3FED               	movwi [-19]fsr1
 10990  0EA8                     l3927:
 10991                           
 10992                           ;stkvar	_sign @ sp[(-10)+8]
 10993  0EA8  3F7E               	moviw [-2]fsr1
 10994  0EA9  3A01               	xorlw	1
 10995  0EAA  3FFE               	movwi [-2]fsr1
 10996  0EAB                     l3929:
 10997                           
 10998                           ;stkvar	_quotient @ sp[(-10)+0]
 10999  0EAB  3000               	movlw	0
 11000  0EAC  3FF6               	movwi [-10]fsr1
 11001  0EAD  3FF7               	movwi [-9]fsr1
 11002  0EAE  3FF8               	movwi [-8]fsr1
 11003  0EAF  3FF9               	movwi [-7]fsr1
 11004  0EB0  3FFA               	movwi [-6]fsr1
 11005  0EB1  3FFB               	movwi [-5]fsr1
 11006  0EB2  3FFC               	movwi [-4]fsr1
 11007  0EB3  3FFD               	movwi [-3]fsr1
 11008  0EB4                     l3931:
 11009                           
 11010                           ;stkvar	_divisor @ sp[(-10)+-8]
 11011  0EB4  3F75               	moviw [-11]fsr1
 11012  0EB5  00F4               	movwf	btemp
 11013  0EB6  3F74               	moviw [-12]fsr1
 11014  0EB7  04F4               	iorwf	btemp,f
 11015  0EB8  3F73               	moviw [-13]fsr1
 11016  0EB9  04F4               	iorwf	btemp,f
 11017  0EBA  3F72               	moviw [-14]fsr1
 11018  0EBB  04F4               	iorwf	btemp,f
 11019  0EBC  3F71               	moviw [-15]fsr1
 11020  0EBD  04F4               	iorwf	btemp,f
 11021  0EBE  3F70               	moviw [-16]fsr1
 11022  0EBF  04F4               	iorwf	btemp,f
 11023  0EC0  3F6F               	moviw [-17]fsr1
 11024  0EC1  04F4               	iorwf	btemp,f
 11025  0EC2  3F6E               	moviw [-18]fsr1
 11026  0EC3  04F4               	iorwf	btemp,f
 11027  0EC4  1903               	skipnz
 11028  0EC5  2EC7               	goto	u2581
 11029  0EC6  2EC8               	goto	u2580
 11030  0EC7                     u2581:
 11031  0EC7  2FA6               	goto	l3953
 11032  0EC8                     u2580:
 11033  0EC8                     l3933:
 11034  0EC8  3001               	movlw	1
 11035                           
 11036                           ;stkvar	_counter @ sp[(-10)+9]
 11037  0EC9  3FFF               	movwi [-1]fsr1
 11038  0ECA  2EE6               	goto	l3939
 11039  0ECB                     l3935:
 11040                           
 11041                           ;stkvar	_divisor @ sp[(-10)+-8]
 11042  0ECB  3F6E               	moviw [-18]fsr1
 11043  0ECC  3589               	lslf	9,f
 11044  0ECD  3FEE               	movwi [-18]fsr1
 11045  0ECE  3F6F               	moviw [-17]fsr1
 11046  0ECF  0D89               	rlf	9,f
 11047  0ED0  3FEF               	movwi [-17]fsr1
 11048  0ED1  3F70               	moviw [-16]fsr1
 11049  0ED2  0D89               	rlf	9,f
 11050  0ED3  3FF0               	movwi [-16]fsr1
 11051  0ED4  3F71               	moviw [-15]fsr1
 11052  0ED5  0D89               	rlf	9,f
 11053  0ED6  3FF1               	movwi [-15]fsr1
 11054  0ED7  3F72               	moviw [-14]fsr1
 11055  0ED8  0D89               	rlf	9,f
 11056  0ED9  3FF2               	movwi [-14]fsr1
 11057  0EDA  3F73               	moviw [-13]fsr1
 11058  0EDB  0D89               	rlf	9,f
 11059  0EDC  3FF3               	movwi [-13]fsr1
 11060  0EDD  3F74               	moviw [-12]fsr1
 11061  0EDE  0D89               	rlf	9,f
 11062  0EDF  3FF4               	movwi [-12]fsr1
 11063  0EE0  3F75               	moviw [-11]fsr1
 11064  0EE1  0D89               	rlf	9,f
 11065  0EE2  3FF5               	movwi [-11]fsr1
 11066  0EE3                     l3937:
 11067                           
 11068                           ;stkvar	_counter @ sp[(-10)+9]
 11069  0EE3  3F7F               	moviw [-1]fsr1
 11070  0EE4  3E01               	addlw	1
 11071  0EE5  3FFF               	movwi [-1]fsr1
 11072  0EE6                     l3939:
 11073                           
 11074                           ;stkvar	_divisor @ sp[(-10)+-8]
 11075  0EE6  3F6E               	moviw [-18]fsr1
 11076  0EE7  0141               	movlb	1	; select bank1
 11077  0EE8  00E3               	movwf	___BTEMP36& (0+127)
 11078  0EE9  3F6F               	moviw [-17]fsr1
 11079  0EEA  00E2               	movwf	___BTEMP37& (0+127)
 11080  0EEB  3F70               	moviw [-16]fsr1
 11081  0EEC  00E1               	movwf	___BTEMP38& (0+127)
 11082  0EED  3F71               	moviw [-15]fsr1
 11083  0EEE  00E0               	movwf	___BTEMP39& (0+127)
 11084  0EEF  3F72               	moviw [-14]fsr1
 11085  0EF0  00DF               	movwf	___BTEMP40& (0+127)
 11086  0EF1  3F73               	moviw [-13]fsr1
 11087  0EF2  00DE               	movwf	___BTEMP41& (0+127)
 11088  0EF3  3F74               	moviw [-12]fsr1
 11089  0EF4  00DD               	movwf	___BTEMP42& (0+127)
 11090  0EF5  3F75               	moviw [-11]fsr1
 11091  0EF6  00DC               	movwf	___BTEMP43& (0+127)
 11092  0EF7  1FDC               	btfss	___BTEMP43& (0+127),7
 11093  0EF8  2EFA               	goto	u2591
 11094  0EF9  2EFB               	goto	u2590
 11095  0EFA                     u2591:
 11096  0EFA  2ECB               	goto	l3935
 11097  0EFB                     u2590:
 11098  0EFB                     l3941:
 11099                           
 11100                           ;stkvar	_quotient @ sp[(-10)+0]
 11101  0EFB  3F76               	moviw [-10]fsr1
 11102  0EFC  3589               	lslf	9,f
 11103  0EFD  3FF6               	movwi [-10]fsr1
 11104  0EFE  3F77               	moviw [-9]fsr1
 11105  0EFF  0D89               	rlf	9,f
 11106  0F00  3FF7               	movwi [-9]fsr1
 11107  0F01  3F78               	moviw [-8]fsr1
 11108  0F02  0D89               	rlf	9,f
 11109  0F03  3FF8               	movwi [-8]fsr1
 11110  0F04  3F79               	moviw [-7]fsr1
 11111  0F05  0D89               	rlf	9,f
 11112  0F06  3FF9               	movwi [-7]fsr1
 11113  0F07  3F7A               	moviw [-6]fsr1
 11114  0F08  0D89               	rlf	9,f
 11115  0F09  3FFA               	movwi [-6]fsr1
 11116  0F0A  3F7B               	moviw [-5]fsr1
 11117  0F0B  0D89               	rlf	9,f
 11118  0F0C  3FFB               	movwi [-5]fsr1
 11119  0F0D  3F7C               	moviw [-4]fsr1
 11120  0F0E  0D89               	rlf	9,f
 11121  0F0F  3FFC               	movwi [-4]fsr1
 11122  0F10  3F7D               	moviw [-3]fsr1
 11123  0F11  0D89               	rlf	9,f
 11124  0F12  3FFD               	movwi [-3]fsr1
 11125  0F13                     l3943:
 11126                           
 11127                           ;stkvar	_divisor @ sp[(-10)+-8]
 11128                           ;stkvar	_dividend @ sp[(-10)+-16]
 11129  0F13  3F6D               	moviw [-19]fsr1
 11130  0F14  00F4               	movwf	btemp
 11131  0F15  3F75               	moviw [-11]fsr1
 11132  0F16  0274               	subwf	btemp,w
 11133  0F17  1D03               	skipz
 11134  0F18  2F41               	goto	u2605
 11135  0F19  3F6C               	moviw [-20]fsr1
 11136  0F1A  00F4               	movwf	btemp
 11137  0F1B  3F74               	moviw [-12]fsr1
 11138  0F1C  0274               	subwf	btemp,w
 11139  0F1D  1D03               	skipz
 11140  0F1E  2F41               	goto	u2605
 11141  0F1F  3F6B               	moviw [-21]fsr1
 11142  0F20  00F4               	movwf	btemp
 11143  0F21  3F73               	moviw [-13]fsr1
 11144  0F22  0274               	subwf	btemp,w
 11145  0F23  1D03               	skipz
 11146  0F24  2F41               	goto	u2605
 11147  0F25  3F6A               	moviw [-22]fsr1
 11148  0F26  00F4               	movwf	btemp
 11149  0F27  3F72               	moviw [-14]fsr1
 11150  0F28  0274               	subwf	btemp,w
 11151  0F29  1D03               	skipz
 11152  0F2A  2F41               	goto	u2605
 11153  0F2B  3F69               	moviw [-23]fsr1
 11154  0F2C  00F4               	movwf	btemp
 11155  0F2D  3F71               	moviw [-15]fsr1
 11156  0F2E  0274               	subwf	btemp,w
 11157  0F2F  1D03               	skipz
 11158  0F30  2F41               	goto	u2605
 11159  0F31  3F68               	moviw [-24]fsr1
 11160  0F32  00F4               	movwf	btemp
 11161  0F33  3F70               	moviw [-16]fsr1
 11162  0F34  0274               	subwf	btemp,w
 11163  0F35  1D03               	skipz
 11164  0F36  2F41               	goto	u2605
 11165  0F37  3F67               	moviw [-25]fsr1
 11166  0F38  00F4               	movwf	btemp
 11167  0F39  3F6F               	moviw [-17]fsr1
 11168  0F3A  0274               	subwf	btemp,w
 11169  0F3B  1D03               	skipz
 11170  0F3C  2F41               	goto	u2605
 11171  0F3D  3F66               	moviw [-26]fsr1
 11172  0F3E  00F4               	movwf	btemp
 11173  0F3F  3F6E               	moviw [-18]fsr1
 11174  0F40  0274               	subwf	btemp,w
 11175  0F41                     u2605:
 11176  0F41  1C03               	skipc
 11177  0F42  2F44               	goto	u2601
 11178  0F43  2F45               	goto	u2600
 11179  0F44                     u2601:
 11180  0F44  2F85               	goto	l3949
 11181  0F45                     u2600:
 11182  0F45                     l3945:
 11183                           
 11184                           ;stkvar	_divisor @ sp[(-10)+-8]
 11185                           ;stkvar	_dividend @ sp[(-10)+-16]
 11186  0F45  3F66               	moviw [-26]fsr1
 11187  0F46  00F4               	movwf	btemp
 11188  0F47  3F6E               	moviw [-18]fsr1
 11189  0F48  0274               	subwf	btemp,w
 11190  0F49  3FE6               	movwi [-26]fsr1
 11191  0F4A  3F67               	moviw [-25]fsr1
 11192  0F4B  00F4               	movwf	btemp
 11193  0F4C  3F6F               	moviw [-17]fsr1
 11194  0F4D  3B74               	subwfb	btemp,w
 11195  0F4E  3FE7               	movwi [-25]fsr1
 11196  0F4F  3F68               	moviw [-24]fsr1
 11197  0F50  00F4               	movwf	btemp
 11198  0F51  3F70               	moviw [-16]fsr1
 11199  0F52  3B74               	subwfb	btemp,w
 11200  0F53  3FE8               	movwi [-24]fsr1
 11201  0F54  3F69               	moviw [-23]fsr1
 11202  0F55  00F4               	movwf	btemp
 11203  0F56  3F71               	moviw [-15]fsr1
 11204  0F57  3B74               	subwfb	btemp,w
 11205  0F58  3FE9               	movwi [-23]fsr1
 11206  0F59  3F6A               	moviw [-22]fsr1
 11207  0F5A  00F4               	movwf	btemp
 11208  0F5B  3F72               	moviw [-14]fsr1
 11209  0F5C  3B74               	subwfb	btemp,w
 11210  0F5D  3FEA               	movwi [-22]fsr1
 11211  0F5E  3F6B               	moviw [-21]fsr1
 11212  0F5F  00F4               	movwf	btemp
 11213  0F60  3F73               	moviw [-13]fsr1
 11214  0F61  3B74               	subwfb	btemp,w
 11215  0F62  3FEB               	movwi [-21]fsr1
 11216  0F63  3F6C               	moviw [-20]fsr1
 11217  0F64  00F4               	movwf	btemp
 11218  0F65  3F74               	moviw [-12]fsr1
 11219  0F66  3B74               	subwfb	btemp,w
 11220  0F67  3FEC               	movwi [-20]fsr1
 11221  0F68  3F6D               	moviw [-19]fsr1
 11222  0F69  00F4               	movwf	btemp
 11223  0F6A  3F75               	moviw [-11]fsr1
 11224  0F6B  3B74               	subwfb	btemp,w
 11225  0F6C  3FED               	movwi [-19]fsr1
 11226  0F6D                     l3947:
 11227                           
 11228                           ;stkvar	_quotient @ sp[(-10)+0]
 11229  0F6D  3F76               	moviw [-10]fsr1
 11230  0F6E  3801               	iorlw	1
 11231  0F6F  3FF6               	movwi [-10]fsr1
 11232  0F70  3F77               	moviw [-9]fsr1
 11233  0F71  3800               	iorlw	0
 11234  0F72  3FF7               	movwi [-9]fsr1
 11235  0F73  3F78               	moviw [-8]fsr1
 11236  0F74  3800               	iorlw	0
 11237  0F75  3FF8               	movwi [-8]fsr1
 11238  0F76  3F79               	moviw [-7]fsr1
 11239  0F77  3800               	iorlw	0
 11240  0F78  3FF9               	movwi [-7]fsr1
 11241  0F79  3F7A               	moviw [-6]fsr1
 11242  0F7A  3800               	iorlw	0
 11243  0F7B  3FFA               	movwi [-6]fsr1
 11244  0F7C  3F7B               	moviw [-5]fsr1
 11245  0F7D  3800               	iorlw	0
 11246  0F7E  3FFB               	movwi [-5]fsr1
 11247  0F7F  3F7C               	moviw [-4]fsr1
 11248  0F80  3800               	iorlw	0
 11249  0F81  3FFC               	movwi [-4]fsr1
 11250  0F82  3F7D               	moviw [-3]fsr1
 11251  0F83  3800               	iorlw	0
 11252  0F84  3FFD               	movwi [-3]fsr1
 11253  0F85                     l3949:
 11254                           
 11255                           ;stkvar	_divisor @ sp[(-10)+-8]
 11256  0F85  3F75               	moviw [-11]fsr1
 11257  0F86  3689               	lsrf	9,f
 11258  0F87  3FF5               	movwi [-11]fsr1
 11259  0F88  3F74               	moviw [-12]fsr1
 11260  0F89  0C89               	rrf	9,f
 11261  0F8A  3FF4               	movwi [-12]fsr1
 11262  0F8B  3F73               	moviw [-13]fsr1
 11263  0F8C  0C89               	rrf	9,f
 11264  0F8D  3FF3               	movwi [-13]fsr1
 11265  0F8E  3F72               	moviw [-14]fsr1
 11266  0F8F  0C89               	rrf	9,f
 11267  0F90  3FF2               	movwi [-14]fsr1
 11268  0F91  3F71               	moviw [-15]fsr1
 11269  0F92  0C89               	rrf	9,f
 11270  0F93  3FF1               	movwi [-15]fsr1
 11271  0F94  3F70               	moviw [-16]fsr1
 11272  0F95  0C89               	rrf	9,f
 11273  0F96  3FF0               	movwi [-16]fsr1
 11274  0F97  3F6F               	moviw [-17]fsr1
 11275  0F98  0C89               	rrf	9,f
 11276  0F99  3FEF               	movwi [-17]fsr1
 11277  0F9A  3F6E               	moviw [-18]fsr1
 11278  0F9B  0C89               	rrf	9,f
 11279  0F9C  3FEE               	movwi [-18]fsr1
 11280  0F9D                     l3951:
 11281                           
 11282                           ;stkvar	_counter @ sp[(-10)+9]
 11283  0F9D  3F7F               	moviw [-1]fsr1
 11284  0F9E  00F4               	movwf	btemp
 11285  0F9F  3001               	movlw	1
 11286  0FA0  0274               	subwf	btemp,w
 11287  0FA1  3FFF               	movwi [-1]fsr1
 11288  0FA2  1D03               	btfss	3,2
 11289  0FA3  2FA5               	goto	u2611
 11290  0FA4  2FA6               	goto	u2610
 11291  0FA5                     u2611:
 11292  0FA5  2EFB               	goto	l3941
 11293  0FA6                     u2610:
 11294  0FA6                     l3953:
 11295                           
 11296                           ;stkvar	_sign @ sp[(-10)+8]
 11297  0FA6  3F7E               	moviw [-2]fsr1
 11298  0FA7  1903               	btfsc	3,2
 11299  0FA8  2FAA               	goto	u2621
 11300  0FA9  2FAB               	goto	u2620
 11301  0FAA                     u2621:
 11302  0FAA  2FEE               	goto	l3957
 11303  0FAB                     u2620:
 11304  0FAB                     l3955:
 11305                           
 11306                           ;stkvar	_quotient @ sp[(-10)+0]
 11307                           ;stkvar	_quotient @ sp[(-10)+0]
 11308  0FAB  3F7D               	moviw [-3]fsr1
 11309  0FAC  0989               	comf	9,f
 11310  0FAD  0141               	movlb	1	; select bank1
 11311  0FAE  00E4               	movwf	___BTEMP19& (0+127)
 11312  0FAF  3F7C               	moviw [-4]fsr1
 11313  0FB0  0989               	comf	9,f
 11314  0FB1  00E5               	movwf	___BTEMP18& (0+127)
 11315  0FB2  3F7B               	moviw [-5]fsr1
 11316  0FB3  0989               	comf	9,f
 11317  0FB4  00E6               	movwf	___BTEMP17& (0+127)
 11318  0FB5  3F7A               	moviw [-6]fsr1
 11319  0FB6  0989               	comf	9,f
 11320  0FB7  00E7               	movwf	___BTEMP16& (0+127)
 11321  0FB8  3F79               	moviw [-7]fsr1
 11322  0FB9  0989               	comf	9,f
 11323  0FBA  00E8               	movwf	___BTEMP15& (0+127)
 11324  0FBB  3F78               	moviw [-8]fsr1
 11325  0FBC  0989               	comf	9,f
 11326  0FBD  00E9               	movwf	___BTEMP14& (0+127)
 11327  0FBE  3F77               	moviw [-9]fsr1
 11328  0FBF  0989               	comf	9,f
 11329  0FC0  00EA               	movwf	___BTEMP13& (0+127)
 11330  0FC1  3F76               	moviw [-10]fsr1
 11331  0FC2  0989               	comf	9,f
 11332  0FC3  0140               	movlb	0	; select bank0
 11333  0FC4  00EE               	movwf	___BTEMP12& (0+127)
 11334  0FC5  0AEE               	incf	___BTEMP12& (0+127),f
 11335  0FC6  1D03               	skipz
 11336  0FC7  2FDC               	goto	u263lld
 11337  0FC8  0141               	movlb	1	; select bank1
 11338  0FC9  0AEA               	incf	___BTEMP13& (0+127),f
 11339  0FCA  1D03               	skipz
 11340  0FCB  2FDC               	goto	u263lld
 11341  0FCC  0AE9               	incf	___BTEMP14& (0+127),f
 11342  0FCD  1D03               	skipz
 11343  0FCE  2FDC               	goto	u263lld
 11344  0FCF  0AE8               	incf	___BTEMP15& (0+127),f
 11345  0FD0  1D03               	skipz
 11346  0FD1  2FDC               	goto	u263lld
 11347  0FD2  0AE7               	incf	___BTEMP16& (0+127),f
 11348  0FD3  1D03               	skipz
 11349  0FD4  2FDC               	goto	u263lld
 11350  0FD5  0AE6               	incf	___BTEMP17& (0+127),f
 11351  0FD6  1D03               	skipz
 11352  0FD7  2FDC               	goto	u263lld
 11353  0FD8  0AE5               	incf	___BTEMP18& (0+127),f
 11354  0FD9  1D03               	skipz
 11355  0FDA  2FDC               	goto	u263lld
 11356  0FDB  0AE4               	incf	___BTEMP19& (0+127),f
 11357  0FDC                     u263lld:
 11358  0FDC  0140               	movlb	0	; select bank0
 11359  0FDD  086E               	movf	___BTEMP12& (0+127),w
 11360  0FDE  3FF6               	movwi [-10]fsr1
 11361  0FDF  0141               	movlb	1	; select bank1
 11362  0FE0  086A               	movf	___BTEMP13& (0+127),w
 11363  0FE1  3FF7               	movwi [-9]fsr1
 11364  0FE2  0869               	movf	___BTEMP14& (0+127),w
 11365  0FE3  3FF8               	movwi [-8]fsr1
 11366  0FE4  0868               	movf	___BTEMP15& (0+127),w
 11367  0FE5  3FF9               	movwi [-7]fsr1
 11368  0FE6  0867               	movf	___BTEMP16& (0+127),w
 11369  0FE7  3FFA               	movwi [-6]fsr1
 11370  0FE8  0866               	movf	___BTEMP17& (0+127),w
 11371  0FE9  3FFB               	movwi [-5]fsr1
 11372  0FEA  0865               	movf	___BTEMP18& (0+127),w
 11373  0FEB  3FFC               	movwi [-4]fsr1
 11374  0FEC  0864               	movf	___BTEMP19& (0+127),w
 11375  0FED  3FFD               	movwi [-3]fsr1
 11376  0FEE                     l3957:
 11377                           
 11378                           ;stkvar	_quotient @ sp[(-10)+0]
 11379                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 11380                           ;copy 8 bytes
 11381  0FEE  3F7D               	moviw [-3]fsr1
 11382  0FEF  3FF5               	movwi [-11]fsr1
 11383  0FF0  3F7C               	moviw [-4]fsr1
 11384  0FF1  3FF4               	movwi [-12]fsr1
 11385  0FF2  3F7B               	moviw [-5]fsr1
 11386  0FF3  3FF3               	movwi [-13]fsr1
 11387  0FF4  3F7A               	moviw [-6]fsr1
 11388  0FF5  3FF2               	movwi [-14]fsr1
 11389  0FF6  3F79               	moviw [-7]fsr1
 11390  0FF7  3FF1               	movwi [-15]fsr1
 11391  0FF8  3F78               	moviw [-8]fsr1
 11392  0FF9  3FF0               	movwi [-16]fsr1
 11393  0FFA  3F77               	moviw [-9]fsr1
 11394  0FFB  3FEF               	movwi [-17]fsr1
 11395  0FFC  3F76               	moviw [-10]fsr1
 11396  0FFD  3FEE               	movwi [-18]fsr1
 11397  0FFE                     l1262:
 11398                           
 11399                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 11400  0FFE  3176               	addfsr 1,-10
 11401  0FFF  0008               	return
 11402  1000                     __end_of___aodiv:
 11403                           
 11404                           	psect	text11
 11405  1784                     __ptext11:	
 11406 ;; *************** function _ctoa *****************
 11407 ;; Defined at:
 11408 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
 11409 ;; Parameters:    Size  Location     Type
 11410 ;;  fp              1    wreg     PTR struct _IO_FILE
 11411 ;;		 -> NULL(0), 
 11412 ;;  c               1  [STACK] unsigned char 
 11413 ;; Auto vars:     Size  Location     Type
 11414 ;;  fp              1  [STACK] PTR struct _IO_FILE
 11415 ;;		 -> NULL(0), 
 11416 ;;  w               2  [STACK] int 
 11417 ;;  l               2  [STACK] int 
 11418 ;; Return value:  Size  Location     Type
 11419 ;;                  2  [STACK] int 
 11420 ;; Registers used:
 11421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, pclath
 11422 ;; Tracked objects:
 11423 ;;		On entry : 0/0
 11424 ;;		On exit  : 0/0
 11425 ;;		Unchanged: 0/0
 11426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11431 ;;Total ram usage:        0 bytes
 11432 ;; Hardware stack levels used:    1
 11433 ;; Hardware stack levels required when called:   14
 11434 ;; This function calls:
 11435 ;;		_fputc
 11436 ;; This function is called by:
 11437 ;;		_vfpfcnvrt
 11438 ;; This function uses a reentrant model
 11439 ;;
 11440                           
 11441                           
 11442                           ;psect for function _ctoa
 11443  1784                     _ctoa:
 11444                           
 11445                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11446  1784  3145               	addfsr 1,5
 11447                           
 11448                           ;incstack = 0
 11449 ;; hardware stack exceeded
 11450                           ; Regs used in _ctoa: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+1+btemp+8-btemp+11+pclath]
 11451                           ;_fp stored from wreg
 11452                           ;stkvar	_fp @ sp[(-5)+0]
 11453  1785  3FFB               	movwi [-5]fsr1
 11454  1786                     l4095:
 11455                           
 11456                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
 11457  1786  0140               	movlb	0	; select bank0
 11458  1787  0837               	movf	_width,w
 11459  1788  0438               	iorwf	_width+1,w
 11460  1789  1D03               	btfss	3,2
 11461  178A  2F8C               	goto	u2871
 11462  178B  2F8D               	goto	u2870
 11463  178C                     u2871:
 11464  178C  2F96               	goto	l4099
 11465  178D                     u2870:
 11466  178D                     l4097:
 11467  178D  0838               	movf	_width+1,w
 11468  178E  00FF               	movwf	btemp+11
 11469  178F  0837               	movf	_width,w
 11470  1790  00FE               	movwf	btemp+10
 11471                           
 11472                           ;stkvar	_w @ sp[(-5)+1]
 11473  1791  087E               	movf	btemp+10,w
 11474  1792  3FFC               	movwi [-4]fsr1
 11475  1793  087F               	movf	btemp+11,w
 11476  1794  3FFD               	movwi [-3]fsr1
 11477  1795  2FA0               	goto	l4101
 11478  1796                     l4099:
 11479  1796  0837               	movf	_width,w
 11480  1797  3EFF               	addlw	255
 11481  1798  00FE               	movwf	wtemp5
 11482  1799  30FF               	movlw	255
 11483  179A  3D38               	addwfc	_width+1,w
 11484  179B  00FF               	movwf	wtemp5+1
 11485                           
 11486                           ;stkvar	_w @ sp[(-5)+1]
 11487  179C  087E               	movf	btemp+10,w
 11488  179D  3FFC               	movwi [-4]fsr1
 11489  179E  087F               	movf	btemp+11,w
 11490  179F  3FFD               	movwi [-3]fsr1
 11491  17A0                     l4101:
 11492                           
 11493                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
 11494  17A0  1C3B               	btfss	_flags,0
 11495  17A1  2FA3               	goto	u2881
 11496  17A2  2FA4               	goto	u2880
 11497  17A3                     u2881:
 11498  17A3  2FB0               	goto	l4105
 11499  17A4                     u2880:
 11500  17A4                     l4103:
 11501                           
 11502                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
 11503                           ;stkvar	_fp @ sp[(-5)+0]
 11504  17A4  3F7B               	moviw [-5]fsr1
 11505  17A5  001E               	movwi fsr1++
 11506                           
 11507                           ;stkvar	_c @ sp[(-6)+-1]
 11508  17A6  3F79               	moviw [-7]fsr1
 11509  17A7  00FE               	movwf	btemp+10
 11510  17A8  01FF               	clrf	btemp+11
 11511  17A9  087E               	movf	wtemp5,w
 11512  17AA  001E               	movwi fsr1++
 11513  17AB  087F               	movf	wtemp5+1,w
 11514  17AC  001E               	movwi fsr1++
 11515  17AD  3194  249A  3197   	fcall	_fputc
 11516  17B0                     l4105:
 11517                           
 11518                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
 11519                           ;stkvar	_w @ sp[(-5)+1]
 11520  17B0  3F7C               	moviw [-4]fsr1
 11521  17B1  00FE               	movwf	btemp+10
 11522  17B2  3F7D               	moviw [-3]fsr1
 11523  17B3  00FF               	movwf	btemp+11
 11524  17B4  1BFF               	btfsc	btemp+11,7
 11525  17B5  2FB7               	goto	u2891
 11526  17B6  2FB8               	goto	u2890
 11527  17B7                     u2891:
 11528  17B7  2FB9               	goto	l4109
 11529  17B8                     u2890:
 11530  17B8  2FBC               	goto	l1671
 11531  17B9                     l4109:
 11532                           
 11533                           ;stkvar	_w @ sp[(-5)+1]
 11534  17B9  3000               	movlw	0
 11535  17BA  3FFC               	movwi [-4]fsr1
 11536  17BB  3FFD               	movwi [-3]fsr1
 11537  17BC                     l1671:
 11538                           
 11539                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
 11540                           ;stkvar	_l @ sp[(-5)+3]
 11541  17BC  3000               	movlw	0
 11542  17BD  3FFE               	movwi [-2]fsr1
 11543  17BE  3FFF               	movwi [-1]fsr1
 11544                           
 11545                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 11546  17BF  2FD0               	goto	l4115
 11547  17C0                     l4111:
 11548                           
 11549                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
 11550                           ;stkvar	_fp @ sp[(-5)+0]
 11551  17C0  3F7B               	moviw [-5]fsr1
 11552  17C1  001E               	movwi fsr1++
 11553  17C2  3020               	movlw	32
 11554  17C3  001E               	movwi fsr1++
 11555  17C4  3000               	movlw	0
 11556  17C5  001E               	movwi fsr1++
 11557  17C6  3194  249A  3197   	fcall	_fputc
 11558  17C9                     l4113:
 11559                           
 11560                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
 11561                           ;stkvar	_l @ sp[(-5)+3]
 11562  17C9  3F7E               	moviw [-2]fsr1
 11563  17CA  3E01               	addlw	1
 11564  17CB  3FFE               	movwi [-2]fsr1
 11565  17CC  01F4               	clrf	btemp
 11566  17CD  3F7F               	moviw [-1]fsr1
 11567  17CE  3D74               	addwfc	btemp,w
 11568  17CF  3FFF               	movwi [-1]fsr1
 11569  17D0                     l4115:
 11570                           
 11571                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 11572                           ;stkvar	_w @ sp[(-5)+1]
 11573  17D0  3F7C               	moviw [-4]fsr1
 11574  17D1  00FE               	movwf	btemp+10
 11575  17D2  3F7D               	moviw [-3]fsr1
 11576  17D3  00FF               	movwf	btemp+11
 11577                           
 11578                           ;stkvar	_l @ sp[(-5)+3]
 11579  17D4  3F7E               	moviw [-2]fsr1
 11580  17D5  00FC               	movwf	btemp+8
 11581  17D6  3F7F               	moviw [-1]fsr1
 11582  17D7  00FD               	movwf	btemp+9
 11583  17D8  087D               	movf	btemp+9,w
 11584  17D9  3A80               	xorlw	128
 11585  17DA  00F4               	movwf	btemp
 11586  17DB  087F               	movf	btemp+11,w
 11587  17DC  3A80               	xorlw	128
 11588  17DD  0274               	subwf	btemp,w
 11589  17DE  1D03               	skipz
 11590  17DF  2FE2               	goto	u2905
 11591  17E0  087E               	movf	btemp+10,w
 11592  17E1  027C               	subwf	btemp+8,w
 11593  17E2                     u2905:
 11594  17E2  1C03               	skipc
 11595  17E3  2FE5               	goto	u2901
 11596  17E4  2FE6               	goto	u2900
 11597  17E5                     u2901:
 11598  17E5  2FC0               	goto	l4111
 11599  17E6                     u2900:
 11600  17E6                     l1674:
 11601                           
 11602                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
 11603  17E6  0140               	movlb	0	; select bank0
 11604  17E7  183B               	btfsc	_flags,0
 11605  17E8  2FEA               	goto	u2911
 11606  17E9  2FEB               	goto	u2910
 11607  17EA                     u2911:
 11608  17EA  2FF7               	goto	l4119
 11609  17EB                     u2910:
 11610  17EB                     l4117:
 11611                           
 11612                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
 11613                           ;stkvar	_fp @ sp[(-5)+0]
 11614  17EB  3F7B               	moviw [-5]fsr1
 11615  17EC  001E               	movwi fsr1++
 11616                           
 11617                           ;stkvar	_c @ sp[(-6)+-1]
 11618  17ED  3F79               	moviw [-7]fsr1
 11619  17EE  00FE               	movwf	btemp+10
 11620  17EF  01FF               	clrf	btemp+11
 11621  17F0  087E               	movf	wtemp5,w
 11622  17F1  001E               	movwi fsr1++
 11623  17F2  087F               	movf	wtemp5+1,w
 11624  17F3  001E               	movwi fsr1++
 11625  17F4  3194  249A  3197   	fcall	_fputc
 11626  17F7                     l4119:
 11627                           
 11628                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
 11629                           ;stkvar	_l @ sp[(-5)+3]
 11630  17F7  3F7E               	moviw [-2]fsr1
 11631  17F8  3E01               	addlw	1
 11632  17F9  00F4               	movwf	btemp
 11633  17FA  3F7F               	moviw [-1]fsr1
 11634  17FB  00F5               	movwf	btemp+1
 11635  17FC  3000               	movlw	0
 11636  17FD  3DF5               	addwfc	btemp+1,f
 11637  17FE                     l1676:
 11638                           
 11639                           ; _ctoa: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
 11640  17FE  317A               	addfsr 1,-6
 11641  17FF  0008               	return
 11642  1800                     __end_of_ctoa:
 11643                           
 11644                           	psect	text12
 11645  149A                     __ptext12:	
 11646 ;; *************** function _fputc *****************
 11647 ;; Defined at:
 11648 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
 11649 ;; Parameters:    Size  Location     Type
 11650 ;;  c               2  [STACK] int 
 11651 ;;  fp              1  [STACK] PTR struct _IO_FILE
 11652 ;;		 -> NULL(0), 
 11653 ;; Auto vars:     Size  Location     Type
 11654 ;;		None
 11655 ;; Return value:  Size  Location     Type
 11656 ;;                  2  [STACK] int 
 11657 ;; Registers used:
 11658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+8, btemp+9, btemp+10, btemp+11, pclath
 11659 ;; Tracked objects:
 11660 ;;		On entry : 0/0
 11661 ;;		On exit  : 0/0
 11662 ;;		Unchanged: 0/0
 11663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11668 ;;Total ram usage:        0 bytes
 11669 ;; Hardware stack levels used:    1
 11670 ;; Hardware stack levels required when called:   13
 11671 ;; This function calls:
 11672 ;;		_putch
 11673 ;; This function is called by:
 11674 ;;		_pad
 11675 ;;		_ctoa
 11676 ;;		_vfpfcnvrt
 11677 ;;		_fputs
 11678 ;; This function uses a reentrant model
 11679 ;;
 11680                           
 11681                           
 11682                           ;psect for function _fputc
 11683  149A                     _fputc:
 11684  149A                     l3847:	
 11685                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11686                           ;incstack = 0
 11687 ;; hardware stack exceeded
 11688                           ; Regs used in _fputc: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+8-btemp+11+pclath]
 11689                           
 11690                           
 11691                           ;stkvar	_fp @ sp[(0)+-3]
 11692  149A  3F7D               	moviw [-3]fsr1
 11693  149B  1903               	btfsc	3,2
 11694  149C  2C9E               	goto	u2421
 11695  149D  2C9F               	goto	u2420
 11696  149E                     u2421:
 11697  149E  2CA4               	goto	l3851
 11698  149F                     u2420:
 11699  149F                     l3849:
 11700                           
 11701                           ;stkvar	_fp @ sp[(0)+-3]
 11702  149F  3F7D               	moviw [-3]fsr1
 11703  14A0  1D03               	btfss	3,2
 11704  14A1  2CA3               	goto	u2431
 11705  14A2  2CA4               	goto	u2430
 11706  14A3                     u2431:
 11707  14A3  2CA9               	goto	l3853
 11708  14A4                     u2430:
 11709  14A4                     l3851:
 11710                           
 11711                           ;stkvar	_c @ sp[(0)+-2]
 11712  14A4  3F7E               	moviw [-2]fsr1
 11713  14A5  319D  258C  3194   	fcall	_putch
 11714  14A8  2CE0               	goto	l1803
 11715  14A9                     l3853:
 11716                           
 11717                           ;stkvar	_fp @ sp[(0)+-3]
 11718  14A9  3F7D               	moviw [-3]fsr1
 11719  14AA  00FF               	movwf	btemp+11
 11720  14AB  087F               	movf	btemp+11,w
 11721  14AC  3E03               	addlw	3
 11722  14AD  0084               	movwf	4
 11723  14AE  0185               	clrf	5
 11724  14AF  0012               	moviw fsr0++
 11725  14B0  0400               	iorwf	0,w
 11726  14B1  1903               	btfsc	3,2
 11727  14B2  2CB4               	goto	u2441
 11728  14B3  2CB5               	goto	u2440
 11729  14B4                     u2441:
 11730  14B4  2CD6               	goto	l3857
 11731  14B5                     u2440:
 11732  14B5                     l3855:
 11733                           
 11734                           ;stkvar	_fp @ sp[(0)+-3]
 11735  14B5  3F7D               	moviw [-3]fsr1
 11736  14B6  00FF               	movwf	btemp+11
 11737  14B7  087F               	movf	btemp+11,w
 11738  14B8  3E03               	addlw	3
 11739  14B9  0084               	movwf	4
 11740  14BA  0185               	clrf	5
 11741  14BB  3F00               	moviw [0]fsr0
 11742  14BC  00FE               	movwf	btemp+10
 11743  14BD  3F01               	moviw [1]fsr0
 11744  14BE  00FF               	movwf	btemp+11
 11745                           
 11746                           ;stkvar	_fp @ sp[(0)+-3]
 11747  14BF  3F7D               	moviw [-3]fsr1
 11748  14C0  00FD               	movwf	btemp+9
 11749  14C1  0A7D               	incf	btemp+9,w
 11750  14C2  0084               	movwf	4
 11751  14C3  0185               	clrf	5
 11752  14C4  3F00               	moviw [0]fsr0
 11753  14C5  00FC               	movwf	btemp+8
 11754  14C6  3F01               	moviw [1]fsr0
 11755  14C7  00FD               	movwf	btemp+9
 11756  14C8  087D               	movf	wtemp4+1,w
 11757  14C9  3A80               	xorlw	128
 11758  14CA  00F4               	movwf	btemp
 11759  14CB  087F               	movf	wtemp5+1,w
 11760  14CC  3A80               	xorlw	128
 11761  14CD  0274               	subwf	btemp,w
 11762  14CE  1D03               	skipz
 11763  14CF  2CD2               	goto	u2455
 11764  14D0  087E               	movf	wtemp5,w
 11765  14D1  027C               	subwf	wtemp4,w
 11766  14D2                     u2455:
 11767  14D2  1803               	skipnc
 11768  14D3  2CD5               	goto	u2451
 11769  14D4  2CD6               	goto	u2450
 11770  14D5                     u2451:
 11771  14D5  2CE0               	goto	l1803
 11772  14D6                     u2450:
 11773  14D6                     l3857:
 11774                           
 11775                           ;stkvar	_fp @ sp[(0)+-3]
 11776  14D6  3F7D               	moviw [-3]fsr1
 11777  14D7  00FF               	movwf	btemp+11
 11778  14D8  0A7F               	incf	btemp+11,w
 11779  14D9  0084               	movwf	4
 11780  14DA  0185               	clrf	5
 11781  14DB  3001               	movlw	1
 11782  14DC  0780               	addwf	0,f
 11783  14DD  3101               	addfsr 0,1
 11784  14DE  1803               	skipnc
 11785  14DF  0A80               	incf	0,f
 11786  14E0                     l1803:
 11787                           
 11788                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize
      +                           = 3, vargsize = 0
 11789  14E0  317D               	addfsr 1,-3
 11790  14E1  0008               	return
 11791  14E2                     __end_of_fputc:
 11792                           
 11793                           	psect	text13
 11794  1D8C                     __ptext13:	
 11795 ;; *************** function _putch *****************
 11796 ;; Defined at:
 11797 ;;		line 104 in file "src/pba_config.c"
 11798 ;; Parameters:    Size  Location     Type
 11799 ;;  ch              1    wreg     unsigned char 
 11800 ;; Auto vars:     Size  Location     Type
 11801 ;;  ch              1  [STACK] unsigned char 
 11802 ;; Return value:  Size  Location     Type
 11803 ;;                  1    wreg      void 
 11804 ;; Registers used:
 11805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+10, btemp+11, pclath
 11806 ;; Tracked objects:
 11807 ;;		On entry : 0/0
 11808 ;;		On exit  : 31/0
 11809 ;;		Unchanged: 0/0
 11810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11815 ;;Total ram usage:        0 bytes
 11816 ;; Hardware stack levels used:    1
 11817 ;; Hardware stack levels required when called:   12
 11818 ;; This function calls:
 11819 ;;		_EUSART1_Write
 11820 ;;		_OLED_Putc
 11821 ;; This function is called by:
 11822 ;;		_fputc
 11823 ;; This function uses a reentrant model
 11824 ;;
 11825                           
 11826                           
 11827                           ;psect for function _putch
 11828  1D8C                     _putch:
 11829                           
 11830                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11831  1D8C  3141               	addfsr 1,1
 11832                           
 11833                           ;incstack = 0
 11834 ;; hardware stack exceeded
 11835                           ; Regs used in _putch: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+10+btemp+11+pclath
      +                          ]
 11836                           ;_ch stored from wreg
 11837                           ;stkvar	_ch @ sp[(-1)+0]
 11838  1D8D  3FFF               	movwi [-1]fsr1
 11839  1D8E                     l3825:
 11840                           
 11841                           ;src/pba_config.c: 105:     if(printfEnableOLED)
 11842  1D8E  0140               	movlb	0	; select bank0
 11843  1D8F  0865               	movf	_printfEnableOLED,w
 11844  1D90  1903               	btfsc	3,2
 11845  1D91  2D93               	goto	u2381
 11846  1D92  2D94               	goto	u2380
 11847  1D93                     u2381:
 11848  1D93  2D98               	goto	l3829
 11849  1D94                     u2380:
 11850  1D94                     l3827:
 11851                           
 11852                           ;src/pba_config.c: 106:         OLED_Putc(ch);
 11853                           ;stkvar	_ch @ sp[(-1)+0]
 11854  1D94  3F7F               	moviw [-1]fsr1
 11855  1D95  3189  219E  319D   	fcall	_OLED_Putc
 11856  1D98                     l3829:
 11857                           
 11858                           ;src/pba_config.c: 107:     if(printfEnableUART)
 11859  1D98  0140               	movlb	0	; select bank0
 11860  1D99  0843               	movf	_printfEnableUART,w
 11861  1D9A  1903               	btfsc	3,2
 11862  1D9B  2D9D               	goto	u2391
 11863  1D9C  2D9E               	goto	u2390
 11864  1D9D                     u2391:
 11865  1D9D  2DA2               	goto	l814
 11866  1D9E                     u2390:
 11867  1D9E                     l3831:
 11868                           
 11869                           ;src/pba_config.c: 108:         EUSART1_Write(ch);
 11870                           ;stkvar	_ch @ sp[(-1)+0]
 11871  1D9E  3F7F               	moviw [-1]fsr1
 11872  1D9F  3191  2101  319D   	fcall	_EUSART1_Write
 11873  1DA2                     l814:
 11874                           
 11875                           ; _putch: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize
      +                           = 0, vargsize = 0
 11876  1DA2  317F               	addfsr 1,-1
 11877  1DA3  0008               	return
 11878  1DA4                     __end_of_putch:
 11879                           
 11880                           	psect	text14
 11881  099E                     __ptext14:	
 11882 ;; *************** function _OLED_Putc *****************
 11883 ;; Defined at:
 11884 ;;		line 130 in file "src/pba_oled.c"
 11885 ;; Parameters:    Size  Location     Type
 11886 ;;  ch              1    wreg     unsigned char 
 11887 ;; Auto vars:     Size  Location     Type
 11888 ;;  ch              1  [STACK] unsigned char 
 11889 ;; Return value:  Size  Location     Type
 11890 ;;                  1    wreg      void 
 11891 ;; Registers used:
 11892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+10, btemp+11, pclath
 11893 ;; Tracked objects:
 11894 ;;		On entry : 3D/0
 11895 ;;		On exit  : 0/0
 11896 ;;		Unchanged: 0/0
 11897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11902 ;;Total ram usage:        0 bytes
 11903 ;; Hardware stack levels used:    1
 11904 ;; Hardware stack levels required when called:   11
 11905 ;; This function calls:
 11906 ;;		_OLED_Clear
 11907 ;;		_OLED_GotoXY
 11908 ;;		_SPI1_Exchange8bit
 11909 ;;		_Send
 11910 ;; This function is called by:
 11911 ;;		_ReceiveHandler
 11912 ;;		_putch
 11913 ;; This function uses a reentrant model
 11914 ;;
 11915                           
 11916                           
 11917                           ;psect for function _OLED_Putc
 11918  099E                     _OLED_Putc:
 11919                           
 11920                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11921  099E  3141               	addfsr 1,1
 11922                           
 11923                           ;incstack = 0
 11924 ;; hardware stack exceeded
 11925                           ; Regs used in _OLED_Putc: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+10+btemp+11+pc
      +                          lath]
 11926                           ;_ch stored from wreg
 11927                           ;stkvar	_ch @ sp[(-1)+0]
 11928  099F  3FFF               	movwi [-1]fsr1
 11929  09A0                     l4523:
 11930                           
 11931                           ;src/pba_oled.c: 131:     static uint8_t arrowCnt = 0;;src/pba_oled.c: 134:     if(arrow
      +                          Cnt){
 11932  09A0  0140               	movlb	0	; select bank0
 11933  09A1  0842               	movf	OLED_Putc@arrowCnt,w
 11934  09A2  1903               	btfsc	3,2
 11935  09A3  29A5               	goto	u3451
 11936  09A4  29A6               	goto	u3450
 11937  09A5                     u3451:
 11938  09A5  2A79               	goto	l4619
 11939  09A6                     u3450:
 11940  09A6                     l4525:
 11941                           
 11942                           ;src/pba_oled.c: 135:         if(++arrowCnt == 3){
 11943  09A6  0AC2               	incf	OLED_Putc@arrowCnt,f
 11944  09A7  3003               	movlw	3
 11945  09A8  0642               	xorwf	OLED_Putc@arrowCnt,w
 11946  09A9  1D03               	btfss	3,2
 11947  09AA  29AC               	goto	u3461
 11948  09AB  29AD               	goto	u3460
 11949  09AC                     u3461:
 11950  09AC  2A98               	goto	l888
 11951  09AD                     u3460:
 11952  09AD                     l4527:
 11953                           
 11954                           ;src/pba_oled.c: 136:             arrowCnt = 0;
 11955  09AD  01C2               	clrf	OLED_Putc@arrowCnt
 11956                           
 11957                           ;src/pba_oled.c: 137:             switch(ch){
 11958  09AE  29CD               	goto	l4547
 11959  09AF                     l4529:
 11960                           
 11961                           ;src/pba_oled.c: 139:                     if(addY>0)
 11962  09AF  0870               	movf	_addY,w
 11963  09B0  1903               	btfsc	3,2
 11964  09B1  29B3               	goto	u3471
 11965  09B2  29B4               	goto	u3470
 11966  09B3                     u3471:
 11967  09B3  29E3               	goto	l4549
 11968  09B4                     u3470:
 11969  09B4                     l4531:
 11970                           
 11971                           ;src/pba_oled.c: 140:                         addY--;
 11972  09B4  03F0               	decf	_addY,f
 11973  09B5  29E3               	goto	l4549
 11974  09B6                     l4533:
 11975                           
 11976                           ;src/pba_oled.c: 143:                     if(addY<3)
 11977  09B6  3003               	movlw	3
 11978  09B7  0270               	subwf	_addY,w
 11979  09B8  1803               	skipnc
 11980  09B9  29BB               	goto	u3481
 11981  09BA  29BC               	goto	u3480
 11982  09BB                     u3481:
 11983  09BB  29E3               	goto	l4549
 11984  09BC                     u3480:
 11985  09BC                     l4535:
 11986                           
 11987                           ;src/pba_oled.c: 144:                         addY++;
 11988  09BC  0AF0               	incf	_addY,f
 11989  09BD  29E3               	goto	l4549
 11990  09BE                     l4537:
 11991                           
 11992                           ;src/pba_oled.c: 147:                     if(addX<0x13)
 11993  09BE  3013               	movlw	19
 11994  09BF  0271               	subwf	_addX,w
 11995  09C0  1803               	skipnc
 11996  09C1  29C3               	goto	u3491
 11997  09C2  29C4               	goto	u3490
 11998  09C3                     u3491:
 11999  09C3  29E3               	goto	l4549
 12000  09C4                     u3490:
 12001  09C4                     l4539:
 12002                           
 12003                           ;src/pba_oled.c: 148:                         addX++;
 12004  09C4  0AF1               	incf	_addX,f
 12005  09C5  29E3               	goto	l4549
 12006  09C6                     l4541:
 12007                           
 12008                           ;src/pba_oled.c: 151:                     if(addX>0)
 12009  09C6  0871               	movf	_addX,w
 12010  09C7  1903               	btfsc	3,2
 12011  09C8  29CA               	goto	u3501
 12012  09C9  29CB               	goto	u3500
 12013  09CA                     u3501:
 12014  09CA  29E3               	goto	l4549
 12015  09CB                     u3500:
 12016  09CB                     l4543:
 12017                           
 12018                           ;src/pba_oled.c: 152:                         addX--;
 12019  09CB  03F1               	decf	_addX,f
 12020  09CC  29E3               	goto	l4549
 12021  09CD                     l4547:
 12022                           
 12023                           ;stkvar	_ch @ sp[(-1)+0]
 12024  09CD  3F7F               	moviw [-1]fsr1
 12025  09CE  00FE               	movwf	btemp+10
 12026  09CF  01FF               	clrf	btemp+11
 12027                           
 12028                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12029                           ; Switch size 1, requested type "simple"
 12030                           ; Number of cases is 1, Range of values is 0 to 0
 12031                           ; switch strategies available:
 12032                           ; Name         Instructions Cycles
 12033                           ; simple_byte            4     3 (average)
 12034                           ; direct_byte            8     6 (fixed)
 12035                           ; jumptable            260     6 (fixed)
 12036                           ;	Chosen strategy is simple_byte
 12037  09D0  087F               	movf	wtemp5+1,w
 12038  09D1  3A00               	xorlw	0	; case 0
 12039  09D2  1903               	skipnz
 12040  09D3  29D5               	goto	l5647
 12041  09D4  29E3               	goto	l4549
 12042  09D5                     l5647:
 12043                           
 12044                           ; Switch size 1, requested type "simple"
 12045                           ; Number of cases is 4, Range of values is 65 to 68
 12046                           ; switch strategies available:
 12047                           ; Name         Instructions Cycles
 12048                           ; simple_byte           13     7 (average)
 12049                           ; direct_byte           17     9 (fixed)
 12050                           ; jumptable            263     9 (fixed)
 12051                           ;	Chosen strategy is simple_byte
 12052  09D5  087E               	movf	wtemp5,w
 12053  09D6  3A41               	xorlw	65	; case 65
 12054  09D7  1903               	skipnz
 12055  09D8  29AF               	goto	l4529
 12056  09D9  3A03               	xorlw	3	; case 66
 12057  09DA  1903               	skipnz
 12058  09DB  29B6               	goto	l4533
 12059  09DC  3A01               	xorlw	1	; case 67
 12060  09DD  1903               	skipnz
 12061  09DE  29BE               	goto	l4537
 12062  09DF  3A07               	xorlw	7	; case 68
 12063  09E0  1903               	skipnz
 12064  09E1  29C6               	goto	l4541
 12065  09E2  29E3               	goto	l4549
 12066  09E3                     l4549:
 12067                           
 12068                           ;src/pba_oled.c: 155:             OLED_GotoXY(addX,addY);
 12069  09E3  0870               	movf	_addY,w
 12070  09E4  001E               	movwi fsr1++
 12071  09E5  0871               	movf	_addX,w
 12072  09E6  3191  2127  3189   	fcall	_OLED_GotoXY
 12073  09E9  2A98               	goto	l888
 12074  09EA                     l860:	
 12075                           ;src/pba_oled.c: 165:             case 0x1b:
 12076                           
 12077                           
 12078                           ;src/pba_oled.c: 166:                 arrowCnt = 1;
 12079  09EA  01C2               	clrf	OLED_Putc@arrowCnt
 12080  09EB  0AC2               	incf	OLED_Putc@arrowCnt,f
 12081                           
 12082                           ;src/pba_oled.c: 167:                 break;
 12083  09EC  2A98               	goto	l888
 12084  09ED                     l863:	
 12085                           ;src/pba_oled.c: 170:                 do { LATAbits.LATA5 = 0; } while(0);
 12086                           
 12087  09ED  1298               	bcf	24,5	;volatile
 12088  09EE                     l4551:
 12089                           
 12090                           ;src/pba_oled.c: 171:                 SPI1_Exchange8bit(0b11111010);
 12091  09EE  30FA               	movlw	250
 12092  09EF  319C  2428  3189   	fcall	_SPI1_Exchange8bit
 12093  09F2                     l4553:
 12094                           
 12095                           ;src/pba_oled.c: 172:                 Send(' ');
 12096  09F2  3020               	movlw	32
 12097  09F3  319D  25F4  3189   	fcall	_Send
 12098  09F6                     l4555:
 12099  09F6  0140               	movlb	0	; select bank0
 12100  09F7  1698               	bsf	24,5	;volatile
 12101  09F8                     l4557:
 12102                           
 12103                           ;src/pba_oled.c: 174:                 OLED_GotoXY(addX,addY);
 12104  09F8  0870               	movf	_addY,w
 12105  09F9  001E               	movwi fsr1++
 12106  09FA  0871               	movf	_addX,w
 12107  09FB  3191  2127  3189   	fcall	_OLED_GotoXY
 12108                           
 12109                           ;src/pba_oled.c: 175:                 break;
 12110  09FE  2A98               	goto	l888
 12111  09FF                     l4559:
 12112                           
 12113                           ;src/pba_oled.c: 179:                 if(--addX>0x13){
 12114  09FF  3014               	movlw	20
 12115  0A00  03F1               	decf	_addX,f
 12116  0A01  0271               	subwf	_addX,w
 12117  0A02  1C03               	skipc
 12118  0A03  2A05               	goto	u3511
 12119  0A04  2A06               	goto	u3510
 12120  0A05                     u3511:
 12121  0A05  2A11               	goto	l4567
 12122  0A06                     u3510:
 12123  0A06                     l4561:
 12124                           
 12125                           ;src/pba_oled.c: 180:                     addX = 0x13;
 12126  0A06  3013               	movlw	19
 12127  0A07  00F1               	movwf	_addX
 12128  0A08                     l4563:
 12129                           
 12130                           ;src/pba_oled.c: 181:                     if(--addY>0x03){
 12131  0A08  3004               	movlw	4
 12132  0A09  03F0               	decf	_addY,f
 12133  0A0A  0270               	subwf	_addY,w
 12134  0A0B  1C03               	skipc
 12135  0A0C  2A0E               	goto	u3521
 12136  0A0D  2A0F               	goto	u3520
 12137  0A0E                     u3521:
 12138  0A0E  2A11               	goto	l4567
 12139  0A0F                     u3520:
 12140  0A0F                     l4565:
 12141                           
 12142                           ;src/pba_oled.c: 182:                         addY = 0;
 12143  0A0F  01F0               	clrf	_addY
 12144                           
 12145                           ;src/pba_oled.c: 183:                         addX = 0;
 12146  0A10  01F1               	clrf	_addX
 12147  0A11                     l4567:
 12148                           
 12149                           ;src/pba_oled.c: 186:                 OLED_GotoXY(addX,addY);
 12150  0A11  0870               	movf	_addY,w
 12151  0A12  001E               	movwi fsr1++
 12152  0A13  0871               	movf	_addX,w
 12153  0A14  3191  2127  3189   	fcall	_OLED_GotoXY
 12154  0A17                     l4569:
 12155  0A17  0140               	movlb	0	; select bank0
 12156  0A18  1298               	bcf	24,5	;volatile
 12157  0A19                     l4571:
 12158                           
 12159                           ;src/pba_oled.c: 188:                 SPI1_Exchange8bit(0b11111010);
 12160  0A19  30FA               	movlw	250
 12161  0A1A  319C  2428  3189   	fcall	_SPI1_Exchange8bit
 12162  0A1D                     l4573:
 12163                           
 12164                           ;src/pba_oled.c: 189:                 Send(' ');
 12165  0A1D  3020               	movlw	32
 12166  0A1E  319D  25F4  3189   	fcall	_Send
 12167  0A21                     l4575:
 12168  0A21  0140               	movlb	0	; select bank0
 12169  0A22  1698               	bsf	24,5	;volatile
 12170  0A23                     l4577:
 12171                           
 12172                           ;src/pba_oled.c: 191:                 OLED_GotoXY(addX,addY);
 12173  0A23  0870               	movf	_addY,w
 12174  0A24  001E               	movwi fsr1++
 12175  0A25  0871               	movf	_addX,w
 12176  0A26  3191  2127  3189   	fcall	_OLED_GotoXY
 12177                           
 12178                           ;src/pba_oled.c: 192:                 break;
 12179  0A29  2A98               	goto	l888
 12180  0A2A                     l4579:
 12181                           
 12182                           ;src/pba_oled.c: 197:                 if(++addY>0x03)
 12183  0A2A  3004               	movlw	4
 12184  0A2B  0AF0               	incf	_addY,f
 12185  0A2C  0270               	subwf	_addY,w
 12186  0A2D  1C03               	skipc
 12187  0A2E  2A30               	goto	u3531
 12188  0A2F  2A31               	goto	u3530
 12189  0A30                     u3531:
 12190  0A30  2A32               	goto	l876
 12191  0A31                     u3530:
 12192  0A31                     l4581:
 12193                           
 12194                           ;src/pba_oled.c: 198:                     addY = 0;
 12195  0A31  01F0               	clrf	_addY
 12196  0A32                     l876:
 12197                           
 12198                           ;src/pba_oled.c: 199:                 addX = 0;
 12199  0A32  01F1               	clrf	_addX
 12200  0A33                     l4583:
 12201                           
 12202                           ;src/pba_oled.c: 200:                 OLED_GotoXY(addX,addY);
 12203  0A33  0870               	movf	_addY,w
 12204  0A34  001E               	movwi fsr1++
 12205  0A35  0871               	movf	_addX,w
 12206  0A36  3191  2127  3189   	fcall	_OLED_GotoXY
 12207                           
 12208                           ;src/pba_oled.c: 201:                 break;
 12209  0A39  2A98               	goto	l888
 12210  0A3A                     l4585:
 12211                           
 12212                           ;src/pba_oled.c: 204:                 addX = (addX/4+1)*4;
 12213  0A3A  0871               	movf	_addX,w
 12214  0A3B  00FF               	movwf	btemp+11
 12215  0A3C  36FF               	lsrf	btemp+11,f
 12216  0A3D  36FF               	lsrf	btemp+11,f
 12217  0A3E  087F               	movf	btemp+11,w
 12218  0A3F  0709               	addwf	9,w
 12219  0A40  0709               	addwf	9,w
 12220  0A41  3E04               	addlw	4
 12221  0A42  00F1               	movwf	_addX
 12222  0A43                     l4587:
 12223                           
 12224                           ;src/pba_oled.c: 205:                 if(addX>0x13){
 12225  0A43  3014               	movlw	20
 12226  0A44  0271               	subwf	_addX,w
 12227  0A45  1C03               	skipc
 12228  0A46  2A48               	goto	u3541
 12229  0A47  2A49               	goto	u3540
 12230  0A48                     u3541:
 12231  0A48  2A52               	goto	l4597
 12232  0A49                     u3540:
 12233  0A49                     l4589:
 12234                           
 12235                           ;src/pba_oled.c: 206:                     addX = 0;
 12236  0A49  01F1               	clrf	_addX
 12237  0A4A                     l4591:
 12238                           
 12239                           ;src/pba_oled.c: 207:                     addY++;
 12240  0A4A  0AF0               	incf	_addY,f
 12241  0A4B                     l4593:
 12242                           
 12243                           ;src/pba_oled.c: 208:                     if(addY>0x03)
 12244  0A4B  3004               	movlw	4
 12245  0A4C  0270               	subwf	_addY,w
 12246  0A4D  1C03               	skipc
 12247  0A4E  2A50               	goto	u3551
 12248  0A4F  2A51               	goto	u3550
 12249  0A50                     u3551:
 12250  0A50  2A52               	goto	l4597
 12251  0A51                     u3550:
 12252  0A51                     l4595:
 12253                           
 12254                           ;src/pba_oled.c: 209:                         addY=0;
 12255  0A51  01F0               	clrf	_addY
 12256  0A52                     l4597:
 12257                           
 12258                           ;src/pba_oled.c: 211:                 OLED_GotoXY(addX,addY);
 12259  0A52  0870               	movf	_addY,w
 12260  0A53  001E               	movwi fsr1++
 12261  0A54  0871               	movf	_addX,w
 12262  0A55  3191  2127  3189   	fcall	_OLED_GotoXY
 12263                           
 12264                           ;src/pba_oled.c: 212:                 break;
 12265  0A58  2A98               	goto	l888
 12266  0A59                     l4599:
 12267                           
 12268                           ;src/pba_oled.c: 215:                 OLED_Clear();
 12269  0A59  319C  245F  3189   	fcall	_OLED_Clear
 12270                           
 12271                           ;src/pba_oled.c: 216:                 break;
 12272  0A5C  2A98               	goto	l888
 12273  0A5D                     l882:	
 12274                           ;src/pba_oled.c: 220:                 do { LATAbits.LATA5 = 0; } while(0);
 12275                           
 12276  0A5D  1298               	bcf	24,5	;volatile
 12277  0A5E                     l4601:
 12278                           
 12279                           ;src/pba_oled.c: 221:                 SPI1_Exchange8bit(0b11111010);
 12280  0A5E  30FA               	movlw	250
 12281  0A5F  319C  2428  3189   	fcall	_SPI1_Exchange8bit
 12282  0A62                     l4603:
 12283                           
 12284                           ;src/pba_oled.c: 222:                 Send(ch);
 12285                           ;stkvar	_ch @ sp[(-1)+0]
 12286  0A62  3F7F               	moviw [-1]fsr1
 12287  0A63  319D  25F4  3189   	fcall	_Send
 12288  0A66                     l4605:
 12289  0A66  0140               	movlb	0	; select bank0
 12290  0A67  1698               	bsf	24,5	;volatile
 12291  0A68                     l4607:
 12292                           
 12293                           ;src/pba_oled.c: 224:                 addX++;
 12294  0A68  0AF1               	incf	_addX,f
 12295  0A69                     l4609:
 12296                           
 12297                           ;src/pba_oled.c: 225:                 if(addX>0x13){
 12298  0A69  3014               	movlw	20
 12299  0A6A  0271               	subwf	_addX,w
 12300  0A6B  1C03               	skipc
 12301  0A6C  2A6E               	goto	u3561
 12302  0A6D  2A6F               	goto	u3560
 12303  0A6E                     u3561:
 12304  0A6E  2A98               	goto	l888
 12305  0A6F                     u3560:
 12306  0A6F                     l4611:
 12307                           
 12308                           ;src/pba_oled.c: 226:                     addX = 0;
 12309  0A6F  01F1               	clrf	_addX
 12310  0A70                     l4613:
 12311                           
 12312                           ;src/pba_oled.c: 227:                     addY++;
 12313  0A70  0AF0               	incf	_addY,f
 12314  0A71                     l4615:
 12315                           
 12316                           ;src/pba_oled.c: 228:                     if(addY>0x03)
 12317  0A71  3004               	movlw	4
 12318  0A72  0270               	subwf	_addY,w
 12319  0A73  1C03               	skipc
 12320  0A74  2A76               	goto	u3571
 12321  0A75  2A77               	goto	u3570
 12322  0A76                     u3571:
 12323  0A76  2A98               	goto	l888
 12324  0A77                     u3570:
 12325  0A77                     l4617:
 12326                           
 12327                           ;src/pba_oled.c: 229:                         addY=0;
 12328  0A77  01F0               	clrf	_addY
 12329  0A78  2A98               	goto	l888
 12330  0A79                     l4619:
 12331                           
 12332                           ;stkvar	_ch @ sp[(-1)+0]
 12333  0A79  3F7F               	moviw [-1]fsr1
 12334  0A7A  00FE               	movwf	btemp+10
 12335  0A7B  01FF               	clrf	btemp+11
 12336                           
 12337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12338                           ; Switch size 1, requested type "simple"
 12339                           ; Number of cases is 1, Range of values is 0 to 0
 12340                           ; switch strategies available:
 12341                           ; Name         Instructions Cycles
 12342                           ; simple_byte            4     3 (average)
 12343                           ; direct_byte            8     6 (fixed)
 12344                           ; jumptable            260     6 (fixed)
 12345                           ;	Chosen strategy is simple_byte
 12346  0A7C  087F               	movf	wtemp5+1,w
 12347  0A7D  3A00               	xorlw	0	; case 0
 12348  0A7E  1903               	skipnz
 12349  0A7F  2A81               	goto	l5649
 12350  0A80  2A5D               	goto	l882
 12351  0A81                     l5649:
 12352                           
 12353                           ; Switch size 1, requested type "simple"
 12354                           ; Number of cases is 7, Range of values is 8 to 127
 12355                           ; switch strategies available:
 12356                           ; Name         Instructions Cycles
 12357                           ; simple_byte           22    12 (average)
 12358                           ; direct_byte          249     9 (fixed)
 12359                           ; jumptable            263     9 (fixed)
 12360                           ;	Chosen strategy is simple_byte
 12361  0A81  087E               	movf	wtemp5,w
 12362  0A82  3A08               	xorlw	8	; case 8
 12363  0A83  1903               	skipnz
 12364  0A84  29FF               	goto	l4559
 12365  0A85  3A01               	xorlw	1	; case 9
 12366  0A86  1903               	skipnz
 12367  0A87  2A3A               	goto	l4585
 12368  0A88  3A03               	xorlw	3	; case 10
 12369  0A89  1903               	skipnz
 12370  0A8A  2A2A               	goto	l4579
 12371  0A8B  3A06               	xorlw	6	; case 12
 12372  0A8C  1903               	skipnz
 12373  0A8D  2A59               	goto	l4599
 12374  0A8E  3A01               	xorlw	1	; case 13
 12375  0A8F  1903               	skipnz
 12376  0A90  2A2A               	goto	l4579
 12377  0A91  3A16               	xorlw	22	; case 27
 12378  0A92  1903               	skipnz
 12379  0A93  29EA               	goto	l860
 12380  0A94  3A64               	xorlw	100	; case 127
 12381  0A95  1903               	skipnz
 12382  0A96  29ED               	goto	l863
 12383  0A97  2A5D               	goto	l882
 12384  0A98                     l888:
 12385                           
 12386                           ; _OLED_Putc: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 12387  0A98  317F               	addfsr 1,-1
 12388  0A99  0008               	return
 12389  0A9A                     __end_of_OLED_Putc:
 12390                           
 12391                           	psect	text15
 12392  1127                     __ptext15:	
 12393 ;; *************** function _OLED_GotoXY *****************
 12394 ;; Defined at:
 12395 ;;		line 242 in file "src/pba_oled.c"
 12396 ;; Parameters:    Size  Location     Type
 12397 ;;  x               1    wreg     unsigned char 
 12398 ;;  y               1  [STACK] unsigned char 
 12399 ;; Auto vars:     Size  Location     Type
 12400 ;;  x               1  [STACK] unsigned char 
 12401 ;; Return value:  Size  Location     Type
 12402 ;;                  1    wreg      void 
 12403 ;; Registers used:
 12404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11, pclath
 12405 ;; Tracked objects:
 12406 ;;		On entry : 0/0
 12407 ;;		On exit  : 0/0
 12408 ;;		Unchanged: 0/0
 12409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;Total ram usage:        0 bytes
 12415 ;; Hardware stack levels used:    1
 12416 ;; Hardware stack levels required when called:   10
 12417 ;; This function calls:
 12418 ;;		_SPI1_Exchange8bit
 12419 ;;		_Send
 12420 ;; This function is called by:
 12421 ;;		_main
 12422 ;;		_OLED_Putc
 12423 ;; This function uses a reentrant model
 12424 ;;
 12425                           
 12426                           
 12427                           ;psect for function _OLED_GotoXY
 12428  1127                     _OLED_GotoXY:
 12429                           
 12430                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12431  1127  3141               	addfsr 1,1
 12432                           
 12433                           ;incstack = 0
 12434 ;; hardware stack exceeded
 12435                           ; Regs used in _OLED_GotoXY: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+11+pclath]
 12436                           ;_x stored from wreg
 12437                           ;stkvar	_x @ sp[(-1)+0]
 12438  1128  3FFF               	movwi [-1]fsr1
 12439  1129                     l4313:
 12440                           
 12441                           ;src/pba_oled.c: 244:     if((x<=0x13)&&(y<=0x03)){
 12442                           ;stkvar	_x @ sp[(-1)+0]
 12443  1129  3F7F               	moviw [-1]fsr1
 12444  112A  00FF               	movwf	btemp+11
 12445  112B  3014               	movlw	20
 12446  112C  027F               	subwf	btemp+11,w
 12447  112D  1803               	skipnc
 12448  112E  2930               	goto	u3171
 12449  112F  2931               	goto	u3170
 12450  1130                     u3171:
 12451  1130  2952               	goto	l896
 12452  1131                     u3170:
 12453  1131                     l4315:
 12454                           
 12455                           ;stkvar	_y @ sp[(-1)+-1]
 12456  1131  3F7E               	moviw [-2]fsr1
 12457  1132  00FF               	movwf	btemp+11
 12458  1133  3004               	movlw	4
 12459  1134  027F               	subwf	btemp+11,w
 12460  1135  1803               	skipnc
 12461  1136  2938               	goto	u3181
 12462  1137  2939               	goto	u3180
 12463  1138                     u3181:
 12464  1138  2952               	goto	l896
 12465  1139                     u3180:
 12466  1139                     l4317:
 12467                           
 12468                           ;src/pba_oled.c: 245:         addX = x;
 12469                           ;stkvar	_x @ sp[(-1)+0]
 12470  1139  3F7F               	moviw [-1]fsr1
 12471  113A  00F1               	movwf	_addX
 12472                           
 12473                           ;src/pba_oled.c: 246:         addY = y;
 12474                           ;stkvar	_y @ sp[(-1)+-1]
 12475  113B  3F7E               	moviw [-2]fsr1
 12476  113C  00F0               	movwf	_addY
 12477  113D                     l4319:
 12478  113D  0140               	movlb	0	; select bank0
 12479  113E  1298               	bcf	24,5	;volatile
 12480  113F                     l4321:
 12481                           
 12482                           ;src/pba_oled.c: 248:         SPI1_Exchange8bit(0b11111000);
 12483  113F  30F8               	movlw	248
 12484  1140  319C  2428  3191   	fcall	_SPI1_Exchange8bit
 12485  1143                     l4323:
 12486                           
 12487                           ;src/pba_oled.c: 249:         Send((addX+addY*0x20)|0x80);
 12488  1143  0870               	movf	_addY,w
 12489  1144  00F4               	movwf	btemp
 12490  1145  3004               	movlw	4
 12491  1146                     u3195:
 12492  1146  35F4               	lslf	btemp,f
 12493  1147  3EFF               	addlw	-1
 12494  1148  1D03               	skipz
 12495  1149  2946               	goto	u3195
 12496  114A  3574               	lslf	btemp,w
 12497  114B  0771               	addwf	_addX,w
 12498  114C  3880               	iorlw	128
 12499  114D  319D  25F4  3191   	fcall	_Send
 12500  1150                     l4325:
 12501  1150  0140               	movlb	0	; select bank0
 12502  1151  1698               	bsf	24,5	;volatile
 12503  1152                     l896:
 12504                           
 12505                           ; _OLED_GotoXY: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
 12506  1152  317E               	addfsr 1,-2
 12507  1153  0008               	return
 12508  1154                     __end_of_OLED_GotoXY:
 12509                           
 12510                           	psect	text16
 12511  1C5F                     __ptext16:	
 12512 ;; *************** function _OLED_Clear *****************
 12513 ;; Defined at:
 12514 ;;		line 258 in file "src/pba_oled.c"
 12515 ;; Parameters:    Size  Location     Type
 12516 ;;		None
 12517 ;; Auto vars:     Size  Location     Type
 12518 ;;		None
 12519 ;; Return value:  Size  Location     Type
 12520 ;;                  1    wreg      void 
 12521 ;; Registers used:
 12522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+11, pclath
 12523 ;; Tracked objects:
 12524 ;;		On entry : 0/0
 12525 ;;		On exit  : 3F/0
 12526 ;;		Unchanged: 0/0
 12527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12532 ;;Total ram usage:        0 bytes
 12533 ;; Hardware stack levels used:    1
 12534 ;; Hardware stack levels required when called:   10
 12535 ;; This function calls:
 12536 ;;		_SPI1_Exchange8bit
 12537 ;;		_Send
 12538 ;; This function is called by:
 12539 ;;		_main
 12540 ;;		_OLED_Putc
 12541 ;; This function uses a reentrant model
 12542 ;;
 12543                           
 12544                           
 12545                           ;psect for function _OLED_Clear
 12546  1C5F                     _OLED_Clear:
 12547  1C5F                     l899:	
 12548                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12549                           ;incstack = 0
 12550 ;; hardware stack exceeded
 12551                           ; Regs used in _OLED_Clear: [wreg-fsr0h+fsr1l+fsr1h+status,2+status,0+btemp+11+pclath]
 12552                           ;src/pba_oled.c: 259:     do { LATAbits.LATA5 = 0; } while(0);
 12553                           
 12554  1C5F  0140               	movlb	0	; select bank0
 12555  1C60  1298               	bcf	24,5	;volatile
 12556  1C61                     l4305:
 12557                           
 12558                           ;src/pba_oled.c: 260:     SPI1_Exchange8bit(0b11111000);
 12559  1C61  30F8               	movlw	248
 12560  1C62  319C  2428  319C   	fcall	_SPI1_Exchange8bit
 12561  1C65                     l4307:
 12562                           
 12563                           ;src/pba_oled.c: 261:     Send(0x01);
 12564  1C65  3001               	movlw	1
 12565  1C66  319D  25F4  319C   	fcall	_Send
 12566  1C69                     l4309:
 12567  1C69  0140               	movlb	0	; select bank0
 12568  1C6A  1698               	bsf	24,5	;volatile
 12569  1C6B                     l4311:
 12570                           
 12571                           ;src/pba_oled.c: 263:     addX = addY = 0;
 12572  1C6B  01F0               	clrf	_addY
 12573  1C6C  01F1               	clrf	_addX
 12574  1C6D                     l903:
 12575                           
 12576                           ; _OLED_Clear: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 12577  1C6D  0008               	return
 12578  1C6E                     __end_of_OLED_Clear:
 12579                           
 12580                           	psect	text17
 12581  1101                     __ptext17:	
 12582 ;; *************** function _EUSART1_Write *****************
 12583 ;; Defined at:
 12584 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 12585 ;; Parameters:    Size  Location     Type
 12586 ;;  txData          1    wreg     unsigned char 
 12587 ;; Auto vars:     Size  Location     Type
 12588 ;;  txData          1  [STACK] unsigned char 
 12589 ;; Return value:  Size  Location     Type
 12590 ;;                  1    wreg      void 
 12591 ;; Registers used:
 12592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12593 ;; Tracked objects:
 12594 ;;		On entry : 0/0
 12595 ;;		On exit  : 3F/E
 12596 ;;		Unchanged: 0/0
 12597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12602 ;;Total ram usage:        0 bytes
 12603 ;; Hardware stack levels used:    1
 12604 ;; Hardware stack levels required when called:    8
 12605 ;; This function calls:
 12606 ;;		Nothing
 12607 ;; This function is called by:
 12608 ;;		_ReceiveHandler
 12609 ;;		_putch
 12610 ;; This function uses a reentrant model
 12611 ;;
 12612                           
 12613                           
 12614                           ;psect for function _EUSART1_Write
 12615  1101                     _EUSART1_Write:
 12616                           
 12617                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12618  1101  3141               	addfsr 1,1
 12619                           
 12620                           ;incstack = 0
 12621 ;; hardware stack exceeded
 12622                           ; Regs used in _EUSART1_Write: [wreg-fsr0h+fsr1l+fsr1h+status,2+status,0]
 12623                           ;_txData stored from wreg
 12624                           ;stkvar	_txData @ sp[(-1)+0]
 12625  1102  3FFF               	movwi [-1]fsr1
 12626  1103                     l4455:
 12627  1103                     l4457:	
 12628                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 12629                           
 12630                           
 12631                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 12632  1103  0140               	movlb	0	; select bank0
 12633  1104  086F               	movf	_eusart1TxBufferRemaining,w	;volatile
 12634  1105  1903               	btfsc	3,2
 12635  1106  2908               	goto	u3371
 12636  1107  2909               	goto	u3370
 12637  1108                     u3371:
 12638  1108  2903               	goto	l4457
 12639  1109                     u3370:
 12640  1109                     l180:
 12641                           
 12642                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 12643  1109  014E               	movlb	14	; select bank14
 12644  110A  1A19               	btfsc	25,4	;volatile
 12645  110B  290D               	goto	u3381
 12646  110C  290E               	goto	u3380
 12647  110D                     u3381:
 12648  110D  2912               	goto	l181
 12649  110E                     u3380:
 12650  110E                     l4459:
 12651                           
 12652                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 12653                           ;stkvar	_txData @ sp[(-1)+0]
 12654  110E  3F7F               	moviw [-1]fsr1
 12655  110F  0142               	movlb	2	; select bank2
 12656  1110  009A               	movwf	26	;volatile
 12657                           
 12658                           ;mcc_generated_files/eusart1.c: 182:     }
 12659  1111  2923               	goto	l4471
 12660  1112                     l181:	
 12661                           ;mcc_generated_files/eusart1.c: 183:     else
 12662                           
 12663                           
 12664                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 12665  1112  1219               	bcf	25,4	;volatile
 12666  1113                     l4461:
 12667                           
 12668                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 12669                           ;stkvar	_txData @ sp[(-1)+0]
 12670  1113  0873               	movf	_eusart1TxHead,w
 12671  1114  3E28               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 12672  1115  0084               	movwf	4
 12673  1116  0185               	clrf	5
 12674  1117  3F7F               	moviw [-1]fsr1
 12675  1118  0080               	movwf	0
 12676  1119                     l4463:
 12677  1119  0AF3               	incf	_eusart1TxHead,f	;volatile
 12678  111A                     l4465:
 12679                           
 12680                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 12681  111A  3008               	movlw	8
 12682  111B  0273               	subwf	_eusart1TxHead,w
 12683  111C  1C03               	skipc
 12684  111D  291F               	goto	u3391
 12685  111E  2920               	goto	u3390
 12686  111F                     u3391:
 12687  111F  2921               	goto	l4469
 12688  1120                     u3390:
 12689  1120                     l4467:
 12690                           
 12691                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 12692  1120  01F3               	clrf	_eusart1TxHead	;volatile
 12693  1121                     l4469:
 12694                           
 12695                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 12696  1121  0140               	movlb	0	; select bank0
 12697  1122  03EF               	decf	_eusart1TxBufferRemaining,f	;volatile
 12698  1123                     l4471:
 12699                           
 12700                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 12701  1123  014E               	movlb	14	; select bank14
 12702  1124  1619               	bsf	25,4	;volatile
 12703  1125                     l184:
 12704                           
 12705                           ; _EUSART1_Write: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 12706  1125  317F               	addfsr 1,-1
 12707  1126  0008               	return
 12708  1127                     __end_of_EUSART1_Write:
 12709                           
 12710                           	psect	text18
 12711  08E1                     __ptext18:	
 12712 ;; *************** function _atoi *****************
 12713 ;; Defined at:
 12714 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
 12715 ;; Parameters:    Size  Location     Type
 12716 ;;  s               2  [STACK] PTR const unsigned char 
 12717 ;;		 -> STR_19(47), STR_18(47), STR_17(49), STR_16(24), 
 12718 ;;		 -> STR_15(47), STR_14(47), STR_13(47), STR_12(47), 
 12719 ;;		 -> STR_11(47), STR_10(37), STR_9(18), STR_8(17), 
 12720 ;;		 -> STR_7(38), STR_6(7), STR_5(50), STR_4(15), 
 12721 ;;		 -> STR_3(46), STR_2(31), STR_1(39), 
 12722 ;; Auto vars:     Size  Location     Type
 12723 ;;  n               2  [STACK] int 
 12724 ;;  neg             2  [STACK] int 
 12725 ;; Return value:  Size  Location     Type
 12726 ;;                  2  [STACK] int 
 12727 ;; Registers used:
 12728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, pclath
 12729 ;; Tracked objects:
 12730 ;;		On entry : 3F/0
 12731 ;;		On exit  : 0/0
 12732 ;;		Unchanged: 0/0
 12733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12738 ;;Total ram usage:        0 bytes
 12739 ;; Hardware stack levels used:    1
 12740 ;; Hardware stack levels required when called:    9
 12741 ;; This function calls:
 12742 ;;		___wmul
 12743 ;;		_isdigit
 12744 ;;		_isspace
 12745 ;; This function is called by:
 12746 ;;		_vfpfcnvrt
 12747 ;; This function uses a reentrant model
 12748 ;;
 12749                           
 12750                           
 12751                           ;psect for function _atoi
 12752  08E1                     _atoi:
 12753                           
 12754                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12755  08E1  3149               	addfsr 1,9
 12756  08E2                     l4189:	
 12757                           ;incstack = 0
 12758                           ; Regs used in _atoi: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+1+btemp+8-btemp+11+pclath]
 12759                           
 12760                           
 12761                           ;stkvar	_n @ sp[(-9)+5]
 12762  08E2  3000               	movlw	0
 12763  08E3  3FFC               	movwi [-4]fsr1
 12764  08E4  3FFD               	movwi [-3]fsr1
 12765                           
 12766                           ;stkvar	_neg @ sp[(-9)+7]
 12767  08E5  3000               	movlw	0
 12768  08E6  3FFE               	movwi [-2]fsr1
 12769  08E7  3FFF               	movwi [-1]fsr1
 12770  08E8  28F0               	goto	l4193
 12771  08E9                     l4191:
 12772                           
 12773                           ;stkvar	_s @ sp[(-9)+-2]
 12774  08E9  3F75               	moviw [-11]fsr1
 12775  08EA  3E01               	addlw	1
 12776  08EB  3FF5               	movwi [-11]fsr1
 12777  08EC  01F4               	clrf	btemp
 12778  08ED  3F76               	moviw [-10]fsr1
 12779  08EE  3D74               	addwfc	btemp,w
 12780  08EF  3FF6               	movwi [-10]fsr1
 12781  08F0                     l4193:
 12782  08F0  3001               	movlw	1
 12783                           
 12784                           ;stkvar	_atoi$2174 @ sp[(-9)+4]
 12785  08F1  3FFB               	movwi [-5]fsr1
 12786  08F2                     l4195:
 12787                           
 12788                           ;stkvar	_s @ sp[(-9)+-2]
 12789  08F2  3F75               	moviw [-11]fsr1
 12790  08F3  0084               	movwf	4
 12791  08F4  3F76               	moviw [-10]fsr1
 12792  08F5  0085               	movwf	5
 12793  08F6  0012               	moviw fsr0++
 12794  08F7  3A20               	xorlw	32
 12795  08F8  1903               	btfsc	3,2
 12796  08F9  28FB               	goto	u3081
 12797  08FA  28FC               	goto	u3080
 12798  08FB                     u3081:
 12799  08FB  2912               	goto	l4201
 12800  08FC                     u3080:
 12801  08FC                     l4197:
 12802                           
 12803                           ;stkvar	_s @ sp[(-9)+-2]
 12804  08FC  3F75               	moviw [-11]fsr1
 12805  08FD  0084               	movwf	4
 12806  08FE  3F76               	moviw [-10]fsr1
 12807  08FF  0085               	movwf	5
 12808  0900  0800               	movf	0,w	;code access
 12809  0901  3EF7               	addlw	247
 12810  0902  00FE               	movwf	wtemp5
 12811  0903  30FF               	movlw	255
 12812  0904  1803               	skipnc
 12813  0905  3000               	movlw	0
 12814  0906  00FF               	movwf	wtemp5+1
 12815  0907  3000               	movlw	0
 12816  0908  027F               	subwf	wtemp5+1,w
 12817  0909  3005               	movlw	5
 12818  090A  1903               	skipnz
 12819  090B  027E               	subwf	wtemp5,w
 12820  090C  1C03               	skipc
 12821  090D  290F               	goto	u3091
 12822  090E  2910               	goto	u3090
 12823  090F                     u3091:
 12824  090F  2912               	goto	l4201
 12825  0910                     u3090:
 12826  0910                     l4199:
 12827                           
 12828                           ;stkvar	_atoi$2174 @ sp[(-9)+4]
 12829  0910  3000               	movlw	0
 12830  0911  3FFB               	movwi [-5]fsr1
 12831  0912                     l4201:
 12832                           
 12833                           ;stkvar	_atoi$2174 @ sp[(-9)+4]
 12834  0912  3F7B               	moviw [-5]fsr1
 12835  0913  00FE               	movwf	btemp+10
 12836  0914  01FF               	clrf	btemp+11
 12837                           
 12838                           ;stkvar	_atoi$2173 @ sp[(-9)+2]
 12839  0915  087E               	movf	btemp+10,w
 12840  0916  3FF9               	movwi [-7]fsr1
 12841  0917  087F               	movf	btemp+11,w
 12842  0918  3FFA               	movwi [-6]fsr1
 12843  0919                     l4205:
 12844                           
 12845                           ;stkvar	_atoi$2173 @ sp[(-9)+2]
 12846  0919  3F79               	moviw [-7]fsr1
 12847  091A  1903               	skipnz
 12848  091B  3F7A               	moviw [-6]fsr1
 12849  091C  1D03               	skipz
 12850  091D  291F               	goto	u3101
 12851  091E  2920               	goto	u3100
 12852  091F                     u3101:
 12853  091F  28E9               	goto	l4191
 12854  0920                     u3100:
 12855  0920  292D               	goto	l4211
 12856  0921                     l4207:
 12857                           
 12858                           ;stkvar	_neg @ sp[(-9)+7]
 12859  0921  3001               	movlw	1
 12860  0922  3FFE               	movwi [-2]fsr1
 12861  0923  3000               	movlw	0
 12862  0924  3FFF               	movwi [-1]fsr1
 12863  0925                     l4209:
 12864                           
 12865                           ;stkvar	_s @ sp[(-9)+-2]
 12866  0925  3F75               	moviw [-11]fsr1
 12867  0926  3E01               	addlw	1
 12868  0927  3FF5               	movwi [-11]fsr1
 12869  0928  01F4               	clrf	btemp
 12870  0929  3F76               	moviw [-10]fsr1
 12871  092A  3D74               	addwfc	btemp,w
 12872  092B  3FF6               	movwi [-10]fsr1
 12873  092C  2964               	goto	l4217
 12874  092D                     l4211:
 12875                           
 12876                           ;stkvar	_s @ sp[(-9)+-2]
 12877  092D  3F75               	moviw [-11]fsr1
 12878  092E  0084               	movwf	4
 12879  092F  3F76               	moviw [-10]fsr1
 12880  0930  0085               	movwf	5
 12881  0931  0800               	movf	0,w	;code access
 12882  0932  00FE               	movwf	btemp+10
 12883  0933  01FF               	clrf	btemp+11
 12884                           
 12885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12886                           ; Switch size 1, requested type "simple"
 12887                           ; Number of cases is 1, Range of values is 0 to 0
 12888                           ; switch strategies available:
 12889                           ; Name         Instructions Cycles
 12890                           ; simple_byte            4     3 (average)
 12891                           ; direct_byte            8     6 (fixed)
 12892                           ; jumptable            260     6 (fixed)
 12893                           ;	Chosen strategy is simple_byte
 12894  0934  087F               	movf	wtemp5+1,w
 12895  0935  3A00               	xorlw	0	; case 0
 12896  0936  1903               	skipnz
 12897  0937  2939               	goto	l5651
 12898  0938  2964               	goto	l4217
 12899  0939                     l5651:
 12900                           
 12901                           ; Switch size 1, requested type "simple"
 12902                           ; Number of cases is 2, Range of values is 43 to 45
 12903                           ; switch strategies available:
 12904                           ; Name         Instructions Cycles
 12905                           ; simple_byte            7     4 (average)
 12906                           ; direct_byte           15     9 (fixed)
 12907                           ; jumptable            263     9 (fixed)
 12908                           ;	Chosen strategy is simple_byte
 12909  0939  087E               	movf	wtemp5,w
 12910  093A  3A2B               	xorlw	43	; case 43
 12911  093B  1903               	skipnz
 12912  093C  2925               	goto	l4209
 12913  093D  3A06               	xorlw	6	; case 45
 12914  093E  1903               	skipnz
 12915  093F  2921               	goto	l4207
 12916  0940  2964               	goto	l4217
 12917  0941                     l4213:
 12918                           
 12919                           ;stkvar	_s @ sp[(-9)+-2]
 12920  0941  3F75               	moviw [-11]fsr1
 12921  0942  0084               	movwf	4
 12922  0943  3F76               	moviw [-10]fsr1
 12923  0944  0085               	movwf	5
 12924  0945  0800               	movf	0,w	;code access
 12925  0946  00FF               	movwf	btemp+11
 12926  0947  300A               	movlw	10
 12927  0948  001E               	movwi fsr1++
 12928  0949  3000               	movlw	0
 12929  094A  001E               	movwi fsr1++
 12930                           
 12931                           ;stkvar	_n @ sp[(-11)+5]
 12932  094B  3F7A               	moviw [-6]fsr1
 12933  094C  001E               	movwi fsr1++
 12934  094D  3F7A               	moviw [-6]fsr1
 12935  094E  001E               	movwi fsr1++
 12936  094F  319F  27D4  3188   	fcall	___wmul
 12937  0952  0875               	movf	wtemp0+1,w
 12938  0953  00FD               	movwf	btemp+9
 12939  0954  087F               	movf	btemp+11,w
 12940  0955  0274               	subwf	wtemp0,w
 12941  0956  00FC               	movwf	btemp+8
 12942  0957  1C03               	skipc
 12943  0958  03FD               	decf	btemp+9,f
 12944  0959  087C               	movf	wtemp4,w
 12945  095A  3E30               	addlw	48
 12946  095B  00FE               	movwf	wtemp5
 12947  095C  3000               	movlw	0
 12948  095D  3D7D               	addwfc	wtemp4+1,w
 12949  095E  00FF               	movwf	wtemp5+1
 12950                           
 12951                           ;stkvar	_n @ sp[(-9)+5]
 12952  095F  087E               	movf	btemp+10,w
 12953  0960  3FFC               	movwi [-4]fsr1
 12954  0961  087F               	movf	btemp+11,w
 12955  0962  3FFD               	movwi [-3]fsr1
 12956  0963  2925               	goto	l4209
 12957  0964                     l4217:
 12958                           
 12959                           ;stkvar	_s @ sp[(-9)+-2]
 12960  0964  3F75               	moviw [-11]fsr1
 12961  0965  0084               	movwf	4
 12962  0966  3F76               	moviw [-10]fsr1
 12963  0967  0085               	movwf	5
 12964  0968  0800               	movf	0,w	;code access
 12965  0969  3ED0               	addlw	208
 12966  096A  00FE               	movwf	wtemp5
 12967  096B  30FF               	movlw	255
 12968  096C  1803               	skipnc
 12969  096D  3000               	movlw	0
 12970  096E  00FF               	movwf	wtemp5+1
 12971  096F  3000               	movlw	0
 12972  0970  027F               	subwf	wtemp5+1,w
 12973  0971  300A               	movlw	10
 12974  0972  1903               	skipnz
 12975  0973  027E               	subwf	wtemp5,w
 12976  0974  1C03               	skipc
 12977  0975  2977               	goto	u3111
 12978  0976  2979               	goto	u3110
 12979  0977                     u3111:
 12980  0977  3001               	movlw	1
 12981  0978  297A               	goto	u3120
 12982  0979                     u3110:
 12983  0979  3000               	movlw	0
 12984  097A                     u3120:
 12985  097A  00FE               	movwf	btemp+10
 12986  097B  01FF               	clrf	btemp+11
 12987                           
 12988                           ;stkvar	_atoi$2175 @ sp[(-9)+0]
 12989  097C  087E               	movf	btemp+10,w
 12990  097D  3FF7               	movwi [-9]fsr1
 12991  097E  087F               	movf	btemp+11,w
 12992  097F  3FF8               	movwi [-8]fsr1
 12993  0980                     l4221:
 12994                           
 12995                           ;stkvar	_atoi$2175 @ sp[(-9)+0]
 12996  0980  3F77               	moviw [-9]fsr1
 12997  0981  1903               	skipnz
 12998  0982  3F78               	moviw [-8]fsr1
 12999  0983  1D03               	skipz
 13000  0984  2986               	goto	u3131
 13001  0985  2987               	goto	u3130
 13002  0986                     u3131:
 13003  0986  2941               	goto	l4213
 13004  0987                     u3130:
 13005  0987                     l4223:
 13006                           
 13007                           ;stkvar	_neg @ sp[(-9)+7]
 13008  0987  3F7E               	moviw [-2]fsr1
 13009  0988  1903               	skipnz
 13010  0989  3F7F               	moviw [-1]fsr1
 13011  098A  1D03               	skipz
 13012  098B  298D               	goto	u3141
 13013  098C  298E               	goto	u3140
 13014  098D                     u3141:
 13015  098D  2998               	goto	l4227
 13016  098E                     u3140:
 13017  098E                     l4225:
 13018                           
 13019                           ;stkvar	_n @ sp[(-9)+5]
 13020  098E  3F7C               	moviw [-4]fsr1
 13021  098F  00F4               	movwf	btemp
 13022  0990  3F7D               	moviw [-3]fsr1
 13023  0991  00F5               	movwf	btemp+1
 13024  0992  09F4               	comf	btemp,f
 13025  0993  09F5               	comf	btemp+1,f
 13026  0994  0AF4               	incf	btemp,f
 13027  0995  1903               	skipnz
 13028  0996  0AF5               	incf	btemp+1,f
 13029  0997  299C               	goto	l1777
 13030  0998                     l4227:
 13031                           
 13032                           ;stkvar	_n @ sp[(-9)+5]
 13033  0998  3F7C               	moviw [-4]fsr1
 13034  0999  00F4               	movwf	btemp
 13035  099A  3F7D               	moviw [-3]fsr1
 13036  099B  00F5               	movwf	btemp+1
 13037  099C                     l1777:
 13038                           
 13039                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 13040  099C  3175               	addfsr 1,-11
 13041  099D  0008               	return
 13042  099E                     __end_of_atoi:
 13043                           
 13044                           	psect	text19
 13045  1EEC                     __ptext19:	
 13046 ;; *************** function _isspace *****************
 13047 ;; Defined at:
 13048 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
 13049 ;; Parameters:    Size  Location     Type
 13050 ;;  c               2  [STACK] int 
 13051 ;; Auto vars:     Size  Location     Type
 13052 ;;		None
 13053 ;; Return value:  Size  Location     Type
 13054 ;;                  2  [STACK] int 
 13055 ;; Registers used:
 13056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+10, btemp+11
 13057 ;; Tracked objects:
 13058 ;;		On entry : 0/0
 13059 ;;		On exit  : 0/0
 13060 ;;		Unchanged: 0/0
 13061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13066 ;;Total ram usage:        0 bytes
 13067 ;; Hardware stack levels used:    1
 13068 ;; Hardware stack levels required when called:    8
 13069 ;; This function calls:
 13070 ;;		Nothing
 13071 ;; This function is called by:
 13072 ;;		_atoi
 13073 ;; This function uses a reentrant model
 13074 ;;
 13075                           
 13076                           
 13077                           ;psect for function _isspace
 13078  1EEC                     _isspace:
 13079                           
 13080                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13081  1EEC  3141               	addfsr 1,1
 13082  1EED                     l4033:	
 13083                           ;incstack = 0
 13084                           ; Regs used in _isspace: [wreg+fsr1l+fsr1h+status,2-btemp+1+btemp+10+btemp+11]
 13085                           
 13086  1EED  3001               	movlw	1
 13087                           
 13088                           ;stkvar	_isspace$2191 @ sp[(-1)+0]
 13089  1EEE  3FFF               	movwi [-1]fsr1
 13090  1EEF                     l4035:
 13091                           
 13092                           ;stkvar	_c @ sp[(-1)+-2]
 13093  1EEF  3F7D               	moviw [-3]fsr1
 13094  1EF0  3A20               	xorlw	32
 13095  1EF1  00F4               	movwf	btemp
 13096  1EF2  3F7E               	moviw [-2]fsr1
 13097  1EF3  04F4               	iorwf	btemp,f
 13098  1EF4  1903               	btfsc	3,2
 13099  1EF5  2EF7               	goto	u2811
 13100  1EF6  2EF8               	goto	u2810
 13101  1EF7                     u2811:
 13102  1EF7  2F0A               	goto	l4041
 13103  1EF8                     u2810:
 13104  1EF8                     l4037:
 13105                           
 13106                           ;stkvar	_c @ sp[(-1)+-2]
 13107  1EF8  3F7D               	moviw [-3]fsr1
 13108  1EF9  3EF7               	addlw	247
 13109  1EFA  00FE               	movwf	btemp+10
 13110  1EFB  3F7E               	moviw [-2]fsr1
 13111  1EFC  00FF               	movwf	btemp+11
 13112  1EFD  30FF               	movlw	255
 13113  1EFE  3DFF               	addwfc	btemp+11,f
 13114  1EFF  3000               	movlw	0
 13115  1F00  027F               	subwf	wtemp5+1,w
 13116  1F01  3005               	movlw	5
 13117  1F02  1903               	skipnz
 13118  1F03  027E               	subwf	wtemp5,w
 13119  1F04  1C03               	skipc
 13120  1F05  2F07               	goto	u2821
 13121  1F06  2F08               	goto	u2820
 13122  1F07                     u2821:
 13123  1F07  2F0A               	goto	l4041
 13124  1F08                     u2820:
 13125  1F08                     l4039:
 13126                           
 13127                           ;stkvar	_isspace$2191 @ sp[(-1)+0]
 13128  1F08  3000               	movlw	0
 13129  1F09  3FFF               	movwi [-1]fsr1
 13130  1F0A                     l4041:
 13131                           
 13132                           ;stkvar	_isspace$2191 @ sp[(-1)+0]
 13133  1F0A  3F7F               	moviw [-1]fsr1
 13134  1F0B  00F4               	movwf	btemp
 13135  1F0C  01F5               	clrf	btemp+1
 13136  1F0D                     l1788:
 13137                           
 13138                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13139  1F0D  317D               	addfsr 1,-3
 13140  1F0E  0008               	return
 13141  1F0F                     __end_of_isspace:
 13142                           
 13143                           	psect	text20
 13144  1D30                     __ptext20:	
 13145 ;; *************** function _isdigit *****************
 13146 ;; Defined at:
 13147 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
 13148 ;; Parameters:    Size  Location     Type
 13149 ;;  c               2  [STACK] int 
 13150 ;; Auto vars:     Size  Location     Type
 13151 ;;		None
 13152 ;; Return value:  Size  Location     Type
 13153 ;;                  2  [STACK] int 
 13154 ;; Registers used:
 13155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+10, btemp+11
 13156 ;; Tracked objects:
 13157 ;;		On entry : 0/0
 13158 ;;		On exit  : 0/0
 13159 ;;		Unchanged: 0/0
 13160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13165 ;;Total ram usage:        0 bytes
 13166 ;; Hardware stack levels used:    1
 13167 ;; Hardware stack levels required when called:    8
 13168 ;; This function calls:
 13169 ;;		Nothing
 13170 ;; This function is called by:
 13171 ;;		_vfpfcnvrt
 13172 ;;		_atoi
 13173 ;; This function uses a reentrant model
 13174 ;;
 13175                           
 13176                           
 13177                           ;psect for function _isdigit
 13178  1D30                     _isdigit:
 13179  1D30                     l4029:	
 13180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13181                           ;incstack = 0
 13182                           ; Regs used in _isdigit: [wreg+fsr1l+fsr1h+status,2-btemp+1+btemp+10+btemp+11]
 13183                           
 13184                           
 13185                           ;stkvar	_c @ sp[(0)+-2]
 13186  1D30  3F7E               	moviw [-2]fsr1
 13187  1D31  3ED0               	addlw	208
 13188  1D32  00FE               	movwf	btemp+10
 13189  1D33  3F7F               	moviw [-1]fsr1
 13190  1D34  00FF               	movwf	btemp+11
 13191  1D35  30FF               	movlw	255
 13192  1D36  3DFF               	addwfc	btemp+11,f
 13193  1D37  3000               	movlw	0
 13194  1D38  027F               	subwf	wtemp5+1,w
 13195  1D39  300A               	movlw	10
 13196  1D3A  1903               	skipnz
 13197  1D3B  027E               	subwf	wtemp5,w
 13198  1D3C  1C03               	skipc
 13199  1D3D  2D3F               	goto	u2791
 13200  1D3E  2D41               	goto	u2790
 13201  1D3F                     u2791:
 13202  1D3F  3001               	movlw	1
 13203  1D40  2D42               	goto	u2800
 13204  1D41                     u2790:
 13205  1D41  3000               	movlw	0
 13206  1D42                     u2800:
 13207  1D42  00F4               	movwf	btemp
 13208  1D43  01F5               	clrf	btemp+1
 13209  1D44                     l1780:
 13210                           
 13211                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13212  1D44  317E               	addfsr 1,-2
 13213  1D45  0008               	return
 13214  1D46                     __end_of_isdigit:
 13215                           
 13216                           	psect	text21
 13217  1FD4                     __ptext21:	
 13218 ;; *************** function ___wmul *****************
 13219 ;; Defined at:
 13220 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
 13221 ;; Parameters:    Size  Location     Type
 13222 ;;  multiplier      2  [STACK] unsigned int 
 13223 ;;  multiplicand    2  [STACK] unsigned int 
 13224 ;; Auto vars:     Size  Location     Type
 13225 ;;  product         2  [STACK] unsigned int 
 13226 ;; Return value:  Size  Location     Type
 13227 ;;                  2  [STACK] unsigned int 
 13228 ;; Registers used:
 13229 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1
 13230 ;; Tracked objects:
 13231 ;;		On entry : 0/0
 13232 ;;		On exit  : 0/0
 13233 ;;		Unchanged: 0/0
 13234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13239 ;;Total ram usage:        0 bytes
 13240 ;; Hardware stack levels used:    1
 13241 ;; Hardware stack levels required when called:    8
 13242 ;; This function calls:
 13243 ;;		Nothing
 13244 ;; This function is called by:
 13245 ;;		_atoi
 13246 ;; This function uses a reentrant model
 13247 ;;
 13248                           
 13249                           
 13250                           ;psect for function ___wmul
 13251  1FD4                     ___wmul:
 13252                           
 13253                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13254  1FD4  3142               	addfsr 1,2
 13255  1FD5                     l3901:	
 13256                           ;incstack = 0
 13257                           ; Regs used in ___wmul: [wreg+fsr1l+fsr1h+status,2-btemp+1]
 13258                           
 13259                           
 13260                           ;stkvar	_product @ sp[(-2)+0]
 13261  1FD5  3000               	movlw	0
 13262  1FD6  3FFE               	movwi [-2]fsr1
 13263  1FD7  3FFF               	movwi [-1]fsr1
 13264  1FD8                     l1160:
 13265                           
 13266                           ;stkvar	_multiplier @ sp[(-2)+-2]
 13267  1FD8  3F7C               	moviw [-4]fsr1
 13268  1FD9  1C09               	btfss	9,0
 13269  1FDA  2FDC               	goto	u2521
 13270  1FDB  2FDD               	goto	u2520
 13271  1FDC                     u2521:
 13272  1FDC  2FE7               	goto	l3905
 13273  1FDD                     u2520:
 13274  1FDD                     l3903:
 13275                           
 13276                           ;stkvar	_multiplicand @ sp[(-2)+-4]
 13277                           ;stkvar	_product @ sp[(-2)+0]
 13278  1FDD  3F7E               	moviw [-2]fsr1
 13279  1FDE  00F4               	movwf	btemp
 13280  1FDF  3F7A               	moviw [-6]fsr1
 13281  1FE0  0774               	addwf	btemp,w
 13282  1FE1  3FFE               	movwi [-2]fsr1
 13283  1FE2  3F7F               	moviw [-1]fsr1
 13284  1FE3  00F4               	movwf	btemp
 13285  1FE4  3F7B               	moviw [-5]fsr1
 13286  1FE5  3D74               	addwfc	btemp,w
 13287  1FE6  3FFF               	movwi [-1]fsr1
 13288  1FE7                     l3905:
 13289                           
 13290                           ;stkvar	_multiplicand @ sp[(-2)+-4]
 13291  1FE7  3F7A               	moviw [-6]fsr1
 13292  1FE8  3589               	lslf	9,f
 13293  1FE9  3FFA               	movwi [-6]fsr1
 13294  1FEA  3F7B               	moviw [-5]fsr1
 13295  1FEB  0D89               	rlf	9,f
 13296  1FEC  3FFB               	movwi [-5]fsr1
 13297  1FED                     l3907:
 13298                           
 13299                           ;stkvar	_multiplier @ sp[(-2)+-2]
 13300  1FED  3F7D               	moviw [-3]fsr1
 13301  1FEE  3689               	lsrf	9,f
 13302  1FEF  3FFD               	movwi [-3]fsr1
 13303  1FF0  3F7C               	moviw [-4]fsr1
 13304  1FF1  0C89               	rrf	9,f
 13305  1FF2  3FFC               	movwi [-4]fsr1
 13306  1FF3                     l3909:
 13307                           
 13308                           ;stkvar	_multiplier @ sp[(-2)+-2]
 13309  1FF3  3F7C               	moviw [-4]fsr1
 13310  1FF4  1903               	skipnz
 13311  1FF5  3F7D               	moviw [-3]fsr1
 13312  1FF6  1D03               	skipz
 13313  1FF7  2FF9               	goto	u2531
 13314  1FF8  2FFA               	goto	u2530
 13315  1FF9                     u2531:
 13316  1FF9  2FD8               	goto	l1160
 13317  1FFA                     u2530:
 13318  1FFA                     l3911:
 13319                           
 13320                           ;stkvar	_product @ sp[(-2)+0]
 13321  1FFA  3F7E               	moviw [-2]fsr1
 13322  1FFB  00F4               	movwf	btemp
 13323  1FFC  3F7F               	moviw [-1]fsr1
 13324  1FFD  00F5               	movwf	btemp+1
 13325  1FFE                     l1163:
 13326                           
 13327                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13328  1FFE  317A               	addfsr 1,-6
 13329  1FFF  0008               	return
 13330  2000                     __end_of___wmul:
 13331                           
 13332                           	psect	text22
 13333  1454                     __ptext22:	
 13334 ;; *************** function ___lwmod *****************
 13335 ;; Defined at:
 13336 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwmod.c"
 13337 ;; Parameters:    Size  Location     Type
 13338 ;;  divisor         2  [STACK] unsigned int 
 13339 ;;  dividend        2  [STACK] unsigned int 
 13340 ;; Auto vars:     Size  Location     Type
 13341 ;;  counter         1  [STACK] unsigned char 
 13342 ;; Return value:  Size  Location     Type
 13343 ;;                  2  [STACK] unsigned int 
 13344 ;; Registers used:
 13345 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1
 13346 ;; Tracked objects:
 13347 ;;		On entry : 0/1
 13348 ;;		On exit  : 0/0
 13349 ;;		Unchanged: 0/0
 13350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13355 ;;Total ram usage:        0 bytes
 13356 ;; Hardware stack levels used:    1
 13357 ;; Hardware stack levels required when called:    8
 13358 ;; This function calls:
 13359 ;;		Nothing
 13360 ;; This function is called by:
 13361 ;;		_main
 13362 ;; This function uses a reentrant model
 13363 ;;
 13364                           
 13365                           
 13366                           ;psect for function ___lwmod
 13367  1454                     ___lwmod:
 13368                           
 13369                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13370  1454  3141               	addfsr 1,1
 13371  1455                     l3353:	
 13372                           ;incstack = 0
 13373                           ; Regs used in ___lwmod: [wreg+fsr1l+fsr1h+status,2-btemp+1]
 13374                           
 13375                           
 13376                           ;stkvar	_divisor @ sp[(-1)+-2]
 13377  1455  3F7D               	moviw [-3]fsr1
 13378  1456  1903               	skipnz
 13379  1457  3F7E               	moviw [-2]fsr1
 13380  1458  1903               	skipnz
 13381  1459  2C5B               	goto	u1831
 13382  145A  2C5C               	goto	u1830
 13383  145B                     u1831:
 13384  145B  2C94               	goto	l3369
 13385  145C                     u1830:
 13386  145C                     l3355:
 13387  145C  3001               	movlw	1
 13388                           
 13389                           ;stkvar	_counter @ sp[(-1)+0]
 13390  145D  3FFF               	movwi [-1]fsr1
 13391  145E  2C68               	goto	l3359
 13392  145F                     l3357:
 13393                           
 13394                           ;stkvar	_divisor @ sp[(-1)+-2]
 13395  145F  3F7D               	moviw [-3]fsr1
 13396  1460  3589               	lslf	9,f
 13397  1461  3FFD               	movwi [-3]fsr1
 13398  1462  3F7E               	moviw [-2]fsr1
 13399  1463  0D89               	rlf	9,f
 13400  1464  3FFE               	movwi [-2]fsr1
 13401                           
 13402                           ;stkvar	_counter @ sp[(-1)+0]
 13403  1465  3F7F               	moviw [-1]fsr1
 13404  1466  3E01               	addlw	1
 13405  1467  3FFF               	movwi [-1]fsr1
 13406  1468                     l3359:
 13407                           
 13408                           ;stkvar	_divisor @ sp[(-1)+-2]
 13409  1468  3F7E               	moviw [-2]fsr1
 13410  1469  1F89               	btfss	9,7
 13411  146A  2C6C               	goto	u1841
 13412  146B  2C6D               	goto	u1840
 13413  146C                     u1841:
 13414  146C  2C5F               	goto	l3357
 13415  146D                     u1840:
 13416  146D                     l3361:
 13417                           
 13418                           ;stkvar	_divisor @ sp[(-1)+-2]
 13419                           ;stkvar	_dividend @ sp[(-1)+-4]
 13420  146D  3F7C               	moviw [-4]fsr1
 13421  146E  00F4               	movwf	btemp
 13422  146F  3F7E               	moviw [-2]fsr1
 13423  1470  0274               	subwf	btemp,w
 13424  1471  1D03               	skipz
 13425  1472  2C77               	goto	u1855
 13426  1473  3F7B               	moviw [-5]fsr1
 13427  1474  00F4               	movwf	btemp
 13428  1475  3F7D               	moviw [-3]fsr1
 13429  1476  0274               	subwf	btemp,w
 13430  1477                     u1855:
 13431  1477  1C03               	skipc
 13432  1478  2C7A               	goto	u1851
 13433  1479  2C7B               	goto	u1850
 13434  147A                     u1851:
 13435  147A  2C85               	goto	l3365
 13436  147B                     u1850:
 13437  147B                     l3363:
 13438                           
 13439                           ;stkvar	_divisor @ sp[(-1)+-2]
 13440                           ;stkvar	_dividend @ sp[(-1)+-4]
 13441  147B  3F7B               	moviw [-5]fsr1
 13442  147C  00F4               	movwf	btemp
 13443  147D  3F7D               	moviw [-3]fsr1
 13444  147E  0274               	subwf	btemp,w
 13445  147F  3FFB               	movwi [-5]fsr1
 13446  1480  3F7C               	moviw [-4]fsr1
 13447  1481  00F4               	movwf	btemp
 13448  1482  3F7E               	moviw [-2]fsr1
 13449  1483  3B74               	subwfb	btemp,w
 13450  1484  3FFC               	movwi [-4]fsr1
 13451  1485                     l3365:
 13452                           
 13453                           ;stkvar	_divisor @ sp[(-1)+-2]
 13454  1485  3F7E               	moviw [-2]fsr1
 13455  1486  3689               	lsrf	9,f
 13456  1487  3FFE               	movwi [-2]fsr1
 13457  1488  3F7D               	moviw [-3]fsr1
 13458  1489  0C89               	rrf	9,f
 13459  148A  3FFD               	movwi [-3]fsr1
 13460  148B                     l3367:
 13461                           
 13462                           ;stkvar	_counter @ sp[(-1)+0]
 13463  148B  3F7F               	moviw [-1]fsr1
 13464  148C  00F4               	movwf	btemp
 13465  148D  3001               	movlw	1
 13466  148E  0274               	subwf	btemp,w
 13467  148F  3FFF               	movwi [-1]fsr1
 13468  1490  1D03               	btfss	3,2
 13469  1491  2C93               	goto	u1861
 13470  1492  2C94               	goto	u1860
 13471  1493                     u1861:
 13472  1493  2C6D               	goto	l3361
 13473  1494                     u1860:
 13474  1494                     l3369:
 13475                           
 13476                           ;stkvar	_dividend @ sp[(-1)+-4]
 13477  1494  3F7B               	moviw [-5]fsr1
 13478  1495  00F4               	movwf	btemp
 13479  1496  3F7C               	moviw [-4]fsr1
 13480  1497  00F5               	movwf	btemp+1
 13481  1498                     l1451:
 13482                           
 13483                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13484  1498  317B               	addfsr 1,-5
 13485  1499  0008               	return
 13486  149A                     __end_of___lwmod:
 13487                           
 13488                           	psect	text23
 13489  0803                     __ptext23:	
 13490 ;; *************** function ___lwdiv *****************
 13491 ;; Defined at:
 13492 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
 13493 ;; Parameters:    Size  Location     Type
 13494 ;;  divisor         2  [STACK] unsigned int 
 13495 ;;  dividend        2  [STACK] unsigned int 
 13496 ;; Auto vars:     Size  Location     Type
 13497 ;;  quotient        2  [STACK] unsigned int 
 13498 ;;  counter         1  [STACK] unsigned char 
 13499 ;; Return value:  Size  Location     Type
 13500 ;;                  2  [STACK] unsigned int 
 13501 ;; Registers used:
 13502 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1
 13503 ;; Tracked objects:
 13504 ;;		On entry : 3F/1
 13505 ;;		On exit  : 0/0
 13506 ;;		Unchanged: 0/0
 13507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13512 ;;Total ram usage:        0 bytes
 13513 ;; Hardware stack levels used:    1
 13514 ;; Hardware stack levels required when called:    8
 13515 ;; This function calls:
 13516 ;;		Nothing
 13517 ;; This function is called by:
 13518 ;;		_main
 13519 ;; This function uses a reentrant model
 13520 ;;
 13521                           
 13522                           
 13523                           ;psect for function ___lwdiv
 13524  0803                     ___lwdiv:
 13525                           
 13526                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13527  0803  3143               	addfsr 1,3
 13528  0804                     l3329:	
 13529                           ;incstack = 0
 13530                           ; Regs used in ___lwdiv: [wreg+fsr1l+fsr1h+status,2-btemp+1]
 13531                           
 13532                           
 13533                           ;stkvar	_quotient @ sp[(-3)+0]
 13534  0804  3000               	movlw	0
 13535  0805  3FFD               	movwi [-3]fsr1
 13536  0806  3FFE               	movwi [-2]fsr1
 13537                           
 13538                           ;stkvar	_divisor @ sp[(-3)+-2]
 13539  0807  3F7B               	moviw [-5]fsr1
 13540  0808  1903               	skipnz
 13541  0809  3F7C               	moviw [-4]fsr1
 13542  080A  1903               	skipnz
 13543  080B  280D               	goto	u1791
 13544  080C  280E               	goto	u1790
 13545  080D                     u1791:
 13546  080D  2851               	goto	l3349
 13547  080E                     u1790:
 13548  080E                     l3331:
 13549  080E  3001               	movlw	1
 13550                           
 13551                           ;stkvar	_counter @ sp[(-3)+2]
 13552  080F  3FFF               	movwi [-1]fsr1
 13553  0810  281A               	goto	l3335
 13554  0811                     l3333:
 13555                           
 13556                           ;stkvar	_divisor @ sp[(-3)+-2]
 13557  0811  3F7B               	moviw [-5]fsr1
 13558  0812  3589               	lslf	9,f
 13559  0813  3FFB               	movwi [-5]fsr1
 13560  0814  3F7C               	moviw [-4]fsr1
 13561  0815  0D89               	rlf	9,f
 13562  0816  3FFC               	movwi [-4]fsr1
 13563                           
 13564                           ;stkvar	_counter @ sp[(-3)+2]
 13565  0817  3F7F               	moviw [-1]fsr1
 13566  0818  3E01               	addlw	1
 13567  0819  3FFF               	movwi [-1]fsr1
 13568  081A                     l3335:
 13569                           
 13570                           ;stkvar	_divisor @ sp[(-3)+-2]
 13571  081A  3F7C               	moviw [-4]fsr1
 13572  081B  1F89               	btfss	9,7
 13573  081C  281E               	goto	u1801
 13574  081D  281F               	goto	u1800
 13575  081E                     u1801:
 13576  081E  2811               	goto	l3333
 13577  081F                     u1800:
 13578  081F                     l3337:
 13579                           
 13580                           ;stkvar	_quotient @ sp[(-3)+0]
 13581  081F  3F7D               	moviw [-3]fsr1
 13582  0820  3589               	lslf	9,f
 13583  0821  3FFD               	movwi [-3]fsr1
 13584  0822  3F7E               	moviw [-2]fsr1
 13585  0823  0D89               	rlf	9,f
 13586  0824  3FFE               	movwi [-2]fsr1
 13587  0825                     l3339:
 13588                           
 13589                           ;stkvar	_divisor @ sp[(-3)+-2]
 13590                           ;stkvar	_dividend @ sp[(-3)+-4]
 13591  0825  3F7A               	moviw [-6]fsr1
 13592  0826  00F4               	movwf	btemp
 13593  0827  3F7C               	moviw [-4]fsr1
 13594  0828  0274               	subwf	btemp,w
 13595  0829  1D03               	skipz
 13596  082A  282F               	goto	u1815
 13597  082B  3F79               	moviw [-7]fsr1
 13598  082C  00F4               	movwf	btemp
 13599  082D  3F7B               	moviw [-5]fsr1
 13600  082E  0274               	subwf	btemp,w
 13601  082F                     u1815:
 13602  082F  1C03               	skipc
 13603  0830  2832               	goto	u1811
 13604  0831  2833               	goto	u1810
 13605  0832                     u1811:
 13606  0832  2842               	goto	l3345
 13607  0833                     u1810:
 13608  0833                     l3341:
 13609                           
 13610                           ;stkvar	_divisor @ sp[(-3)+-2]
 13611                           ;stkvar	_dividend @ sp[(-3)+-4]
 13612  0833  3F79               	moviw [-7]fsr1
 13613  0834  00F4               	movwf	btemp
 13614  0835  3F7B               	moviw [-5]fsr1
 13615  0836  0274               	subwf	btemp,w
 13616  0837  3FF9               	movwi [-7]fsr1
 13617  0838  3F7A               	moviw [-6]fsr1
 13618  0839  00F4               	movwf	btemp
 13619  083A  3F7C               	moviw [-4]fsr1
 13620  083B  3B74               	subwfb	btemp,w
 13621  083C  3FFA               	movwi [-6]fsr1
 13622  083D                     l3343:
 13623                           
 13624                           ;stkvar	_quotient @ sp[(-3)+0]
 13625  083D  3F7D               	moviw [-3]fsr1
 13626  083E  00F4               	movwf	btemp
 13627  083F  3001               	movlw	1
 13628  0840  0474               	iorwf	btemp,w
 13629  0841  3FFD               	movwi [-3]fsr1
 13630  0842                     l3345:
 13631                           
 13632                           ;stkvar	_divisor @ sp[(-3)+-2]
 13633  0842  3F7C               	moviw [-4]fsr1
 13634  0843  3689               	lsrf	9,f
 13635  0844  3FFC               	movwi [-4]fsr1
 13636  0845  3F7B               	moviw [-5]fsr1
 13637  0846  0C89               	rrf	9,f
 13638  0847  3FFB               	movwi [-5]fsr1
 13639  0848                     l3347:
 13640                           
 13641                           ;stkvar	_counter @ sp[(-3)+2]
 13642  0848  3F7F               	moviw [-1]fsr1
 13643  0849  00F4               	movwf	btemp
 13644  084A  3001               	movlw	1
 13645  084B  0274               	subwf	btemp,w
 13646  084C  3FFF               	movwi [-1]fsr1
 13647  084D  1D03               	btfss	3,2
 13648  084E  2850               	goto	u1821
 13649  084F  2851               	goto	u1820
 13650  0850                     u1821:
 13651  0850  281F               	goto	l3337
 13652  0851                     u1820:
 13653  0851                     l3349:
 13654                           
 13655                           ;stkvar	_quotient @ sp[(-3)+0]
 13656  0851  3F7D               	moviw [-3]fsr1
 13657  0852  00F4               	movwf	btemp
 13658  0853  3F7E               	moviw [-2]fsr1
 13659  0854  00F5               	movwf	btemp+1
 13660  0855                     l1441:
 13661                           
 13662                           ; ___lwdiv: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13663  0855  3179               	addfsr 1,-7
 13664  0856  0008               	return
 13665  0857                     __end_of___lwdiv:
 13666                           
 13667                           	psect	text24
 13668  1CC6                     __ptext24:	
 13669 ;; *************** function _SYSTICK_TimerLoadAndRun *****************
 13670 ;; Defined at:
 13671 ;;		line 101 in file "src/pba_systick.c"
 13672 ;; Parameters:    Size  Location     Type
 13673 ;;  descriptor      1    wreg     unsigned char 
 13674 ;;  loadValue       4  [STACK] unsigned long 
 13675 ;; Auto vars:     Size  Location     Type
 13676 ;;  descriptor      1  [STACK] unsigned char 
 13677 ;; Return value:  Size  Location     Type
 13678 ;;                  1    wreg      void 
 13679 ;; Registers used:
 13680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11, pclath
 13681 ;; Tracked objects:
 13682 ;;		On entry : 0/0
 13683 ;;		On exit  : 0/0
 13684 ;;		Unchanged: 0/0
 13685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13690 ;;Total ram usage:        0 bytes
 13691 ;; Hardware stack levels used:    1
 13692 ;; Hardware stack levels required when called:   10
 13693 ;; This function calls:
 13694 ;;		_SYSTICK_TimerLoad
 13695 ;;		_SYSTICK_TimerRun
 13696 ;; This function is called by:
 13697 ;;		_main
 13698 ;;		_Summer
 13699 ;; This function uses a reentrant model
 13700 ;;
 13701                           
 13702                           
 13703                           ;psect for function _SYSTICK_TimerLoadAndRun
 13704  1CC6                     _SYSTICK_TimerLoadAndRun:
 13705                           
 13706                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13707  1CC6  3141               	addfsr 1,1
 13708                           
 13709                           ;incstack = 0
 13710 ;; hardware stack exceeded
 13711                           ; Regs used in _SYSTICK_TimerLoadAndRun: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+
      +                          11+pclath]
 13712                           ;_descriptor stored from wreg
 13713                           ;stkvar	_descriptor @ sp[(-1)+0]
 13714  1CC7  3FFF               	movwi [-1]fsr1
 13715  1CC8                     l3899:
 13716                           
 13717                           ;src/pba_systick.c: 101: void SYSTICK_TimerLoadAndRun(uint8_t descriptor, uint32_t loadV
      +                          alue);src/pba_systick.c: 102: {;src/pba_systick.c: 104:     SYSTICK_TimerLoad(descriptor
      +                          , loadValue);
 13718                           ;stkvar	_loadValue @ sp[(-1)+-4]
 13719  1CC8  3F7B               	moviw [-5]fsr1
 13720  1CC9  001E               	movwi fsr1++
 13721  1CCA  3F7B               	moviw [-5]fsr1
 13722  1CCB  001E               	movwi fsr1++
 13723  1CCC  3F7B               	moviw [-5]fsr1
 13724  1CCD  001E               	movwi fsr1++
 13725  1CCE  3F7B               	moviw [-5]fsr1
 13726  1CCF  001E               	movwi fsr1++
 13727                           
 13728                           ;stkvar	_descriptor @ sp[(-5)+0]
 13729  1CD0  3F7B               	moviw [-5]fsr1
 13730  1CD1  319E  2649  319C   	fcall	_SYSTICK_TimerLoad
 13731                           
 13732                           ;src/pba_systick.c: 105:     SYSTICK_TimerRun(descriptor);
 13733                           ;stkvar	_descriptor @ sp[(-1)+0]
 13734  1CD4  3F7F               	moviw [-1]fsr1
 13735  1CD5  319D  255D  319C   	fcall	_SYSTICK_TimerRun
 13736  1CD8                     l1070:
 13737                           
 13738                           ; _SYSTICK_TimerLoadAndRun: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 13739  1CD8  317B               	addfsr 1,-5
 13740  1CD9  0008               	return
 13741  1CDA                     __end_of_SYSTICK_TimerLoadAndRun:
 13742                           
 13743                           	psect	text25
 13744  1D5D                     __ptext25:	
 13745 ;; *************** function _SYSTICK_TimerRun *****************
 13746 ;; Defined at:
 13747 ;;		line 86 in file "src/pba_systick.c"
 13748 ;; Parameters:    Size  Location     Type
 13749 ;;  descriptor      1    wreg     unsigned char 
 13750 ;; Auto vars:     Size  Location     Type
 13751 ;;  descriptor      1  [STACK] unsigned char 
 13752 ;; Return value:  Size  Location     Type
 13753 ;;                  1    wreg      void 
 13754 ;; Registers used:
 13755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11, pclath
 13756 ;; Tracked objects:
 13757 ;;		On entry : 0/0
 13758 ;;		On exit  : 0/0
 13759 ;;		Unchanged: 0/0
 13760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13765 ;;Total ram usage:        0 bytes
 13766 ;; Hardware stack levels used:    1
 13767 ;; Hardware stack levels required when called:    9
 13768 ;; This function calls:
 13769 ;;		___bmul
 13770 ;; This function is called by:
 13771 ;;		_SYSTICK_TimerLoadAndRun
 13772 ;; This function uses a reentrant model
 13773 ;;
 13774                           
 13775                           
 13776                           ;psect for function _SYSTICK_TimerRun
 13777  1D5D                     _SYSTICK_TimerRun:
 13778                           
 13779                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13780  1D5D  3141               	addfsr 1,1
 13781                           
 13782                           ;incstack = 0
 13783 ;; hardware stack exceeded
 13784                           ; Regs used in _SYSTICK_TimerRun: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+11+pcla
      +                          th]
 13785                           ;_descriptor stored from wreg
 13786                           ;stkvar	_descriptor @ sp[(-1)+0]
 13787  1D5E  3FFF               	movwi [-1]fsr1
 13788  1D5F                     l3861:
 13789                           
 13790                           ;src/pba_systick.c: 86: void SYSTICK_TimerRun(uint8_t descriptor);src/pba_systick.c: 87:
      +                           {;src/pba_systick.c: 89:     if(descriptor < 6)
 13791                           ;stkvar	_descriptor @ sp[(-1)+0]
 13792  1D5F  3F7F               	moviw [-1]fsr1
 13793  1D60  00FF               	movwf	btemp+11
 13794  1D61  3006               	movlw	6
 13795  1D62  027F               	subwf	btemp+11,w
 13796  1D63  1803               	skipnc
 13797  1D64  2D66               	goto	u2461
 13798  1D65  2D67               	goto	u2460
 13799  1D66                     u2461:
 13800  1D66  2D72               	goto	l1067
 13801  1D67                     u2460:
 13802  1D67                     l3863:
 13803                           
 13804                           ;src/pba_systick.c: 90:     {;src/pba_systick.c: 91:         softTimer[descriptor].state
      +                           = RUNNING;
 13805  1D67  3007               	movlw	7
 13806  1D68  001E               	movwi fsr1++
 13807                           
 13808                           ;stkvar	_descriptor @ sp[(-2)+0]
 13809  1D69  3F7E               	moviw [-2]fsr1
 13810  1D6A  319E  2610  319D   	fcall	___bmul
 13811  1D6D  3EA4               	addlw	(low ((_softTimer| 0+4)))& (0+255)
 13812  1D6E  0084               	movwf	4
 13813  1D6F  0185               	clrf	5
 13814  1D70  3001               	movlw	1
 13815  1D71  0080               	movwf	0
 13816  1D72                     l1067:
 13817                           
 13818                           ; _SYSTICK_TimerRun: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13819  1D72  317F               	addfsr 1,-1
 13820  1D73  0008               	return
 13821  1D74                     __end_of_SYSTICK_TimerRun:
 13822                           
 13823                           	psect	text26
 13824  1E49                     __ptext26:	
 13825 ;; *************** function _SYSTICK_TimerLoad *****************
 13826 ;; Defined at:
 13827 ;;		line 113 in file "src/pba_systick.c"
 13828 ;; Parameters:    Size  Location     Type
 13829 ;;  descriptor      1    wreg     unsigned char 
 13830 ;;  loadValue       4  [STACK] unsigned long 
 13831 ;; Auto vars:     Size  Location     Type
 13832 ;;  descriptor      1  [STACK] unsigned char 
 13833 ;; Return value:  Size  Location     Type
 13834 ;;                  1    wreg      void 
 13835 ;; Registers used:
 13836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11, pclath
 13837 ;; Tracked objects:
 13838 ;;		On entry : 0/0
 13839 ;;		On exit  : 0/0
 13840 ;;		Unchanged: 0/0
 13841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13846 ;;Total ram usage:        0 bytes
 13847 ;; Hardware stack levels used:    1
 13848 ;; Hardware stack levels required when called:    9
 13849 ;; This function calls:
 13850 ;;		___bmul
 13851 ;; This function is called by:
 13852 ;;		_SYSTICK_TimerLoadAndRun
 13853 ;; This function uses a reentrant model
 13854 ;;
 13855                           
 13856                           
 13857                           ;psect for function _SYSTICK_TimerLoad
 13858  1E49                     _SYSTICK_TimerLoad:
 13859                           
 13860                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13861  1E49  3141               	addfsr 1,1
 13862                           
 13863                           ;incstack = 0
 13864 ;; hardware stack exceeded
 13865                           ; Regs used in _SYSTICK_TimerLoad: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+11+pcl
      +                          ath]
 13866                           ;_descriptor stored from wreg
 13867                           ;stkvar	_descriptor @ sp[(-1)+0]
 13868  1E4A  3FFF               	movwi [-1]fsr1
 13869  1E4B                     l3865:
 13870                           
 13871                           ;src/pba_systick.c: 113: void SYSTICK_TimerLoad(uint8_t descriptor, uint32_t loadValue);
      +                          src/pba_systick.c: 114: {;src/pba_systick.c: 116:     if(descriptor < 6)
 13872                           ;stkvar	_descriptor @ sp[(-1)+0]
 13873  1E4B  3F7F               	moviw [-1]fsr1
 13874  1E4C  00FF               	movwf	btemp+11
 13875  1E4D  3006               	movlw	6
 13876  1E4E  027F               	subwf	btemp+11,w
 13877  1E4F  1803               	skipnc
 13878  1E50  2E52               	goto	u2471
 13879  1E51  2E53               	goto	u2470
 13880  1E52                     u2471:
 13881  1E52  2E64               	goto	l1074
 13882  1E53                     u2470:
 13883  1E53                     l3867:
 13884                           
 13885                           ;src/pba_systick.c: 117:     {;src/pba_systick.c: 118:         softTimer[descriptor].tic
      +                          kCnt = loadValue;
 13886                           ;stkvar	_loadValue @ sp[(-1)+-4]
 13887  1E53  3007               	movlw	7
 13888  1E54  001E               	movwi fsr1++
 13889                           
 13890                           ;stkvar	_descriptor @ sp[(-2)+0]
 13891  1E55  3F7E               	moviw [-2]fsr1
 13892  1E56  319E  2610  319E   	fcall	___bmul
 13893  1E59  3EA0               	addlw	(low (_softTimer| 0))& (0+255)
 13894  1E5A  0084               	movwf	4
 13895  1E5B  0185               	clrf	5
 13896  1E5C  3F7B               	moviw [-5]fsr1
 13897  1E5D  3F80               	movwi [0]fsr0
 13898  1E5E  3F7C               	moviw [-4]fsr1
 13899  1E5F  3F81               	movwi [1]fsr0
 13900  1E60  3F7D               	moviw [-3]fsr1
 13901  1E61  3F82               	movwi [2]fsr0
 13902  1E62  3F7E               	moviw [-2]fsr1
 13903  1E63  3F83               	movwi [3]fsr0
 13904  1E64                     l1074:
 13905                           
 13906                           ; _SYSTICK_TimerLoad: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 4, argsize = 4, vargsize = 0
 13907  1E64  317B               	addfsr 1,-5
 13908  1E65  0008               	return
 13909  1E66                     __end_of_SYSTICK_TimerLoad:
 13910                           
 13911                           	psect	text27
 13912  1356                     __ptext27:	
 13913 ;; *************** function _SYSTICK_Timeout *****************
 13914 ;; Defined at:
 13915 ;;		line 140 in file "src/pba_systick.c"
 13916 ;; Parameters:    Size  Location     Type
 13917 ;;  descriptor      1    wreg     unsigned char 
 13918 ;; Auto vars:     Size  Location     Type
 13919 ;;  descriptor      1  [STACK] unsigned char 
 13920 ;;  isTimeout       1  [STACK] _Bool 
 13921 ;; Return value:  Size  Location     Type
 13922 ;;                  1    wreg      _Bool 
 13923 ;; Registers used:
 13924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+8, btemp+9, btemp+10, btemp+11, pclath
 13925 ;; Tracked objects:
 13926 ;;		On entry : 0/0
 13927 ;;		On exit  : 0/0
 13928 ;;		Unchanged: 0/0
 13929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13934 ;;Total ram usage:        0 bytes
 13935 ;; Hardware stack levels used:    1
 13936 ;; Hardware stack levels required when called:   10
 13937 ;; This function calls:
 13938 ;;		_SYSTICK_TimerStop
 13939 ;;		___bmul
 13940 ;; This function is called by:
 13941 ;;		_main
 13942 ;; This function uses a reentrant model
 13943 ;;
 13944                           
 13945                           
 13946                           ;psect for function _SYSTICK_Timeout
 13947  1356                     _SYSTICK_Timeout:
 13948                           
 13949                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13950  1356  3142               	addfsr 1,2
 13951                           
 13952                           ;incstack = 0
 13953                           ; Regs used in _SYSTICK_Timeout: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+8-btemp+
      +                          11+pclath]
 13954                           ;_descriptor stored from wreg
 13955                           ;stkvar	_descriptor @ sp[(-2)+0]
 13956  1357  3FFE               	movwi [-2]fsr1
 13957  1358                     l4897:
 13958                           
 13959                           ;src/pba_systick.c: 140: _Bool SYSTICK_Timeout(uint8_t descriptor);src/pba_systick.c: 14
      +                          1: {;src/pba_systick.c: 142:     _Bool isTimeout = 0;
 13960                           ;stkvar	_isTimeout @ sp[(-2)+1]
 13961  1358  3000               	movlw	0
 13962  1359  3FFF               	movwi [-1]fsr1
 13963  135A                     l4899:
 13964                           
 13965                           ;src/pba_systick.c: 144:     if(descriptor < 6)
 13966                           ;stkvar	_descriptor @ sp[(-2)+0]
 13967  135A  3F7E               	moviw [-2]fsr1
 13968  135B  00FF               	movwf	btemp+11
 13969  135C  3006               	movlw	6
 13970  135D  027F               	subwf	btemp+11,w
 13971  135E  1803               	skipnc
 13972  135F  2B61               	goto	u3811
 13973  1360  2B62               	goto	u3810
 13974  1361                     u3811:
 13975  1361  2B8F               	goto	l4909
 13976  1362                     u3810:
 13977  1362                     l4901:
 13978                           
 13979                           ;src/pba_systick.c: 145:     {;src/pba_systick.c: 146:         if(softTimer[descriptor].
      +                          state == RUNNING && softTimer[descriptor].tickCnt == 0)
 13980  1362  3007               	movlw	7
 13981  1363  001E               	movwi fsr1++
 13982                           
 13983                           ;stkvar	_descriptor @ sp[(-3)+0]
 13984  1364  3F7D               	moviw [-3]fsr1
 13985  1365  319E  2610  3193   	fcall	___bmul
 13986  1368  3EA4               	addlw	(low ((_softTimer| 0+4)))& (0+255)
 13987  1369  0084               	movwf	4
 13988  136A  0185               	clrf	5
 13989  136B  0300               	decf	0,w
 13990  136C  1D03               	btfss	3,2
 13991  136D  2B6F               	goto	u3821
 13992  136E  2B70               	goto	u3820
 13993  136F                     u3821:
 13994  136F  2B8F               	goto	l4909
 13995  1370                     u3820:
 13996  1370                     l4903:
 13997  1370  3007               	movlw	7
 13998  1371  001E               	movwi fsr1++
 13999                           
 14000                           ;stkvar	_descriptor @ sp[(-3)+0]
 14001  1372  3F7D               	moviw [-3]fsr1
 14002  1373  319E  2610  3193   	fcall	___bmul
 14003  1376  3EA0               	addlw	(low (_softTimer| 0))& (0+255)
 14004  1377  0084               	movwf	4
 14005  1378  0185               	clrf	5
 14006  1379  3F00               	moviw [0]fsr0
 14007  137A  00FC               	movwf	btemp+8
 14008  137B  3F01               	moviw [1]fsr0
 14009  137C  00FD               	movwf	btemp+9
 14010  137D  3F02               	moviw [2]fsr0
 14011  137E  00FE               	movwf	btemp+10
 14012  137F  3F03               	moviw [3]fsr0
 14013  1380  00FF               	movwf	btemp+11
 14014  1381  087F               	movf	btemp+11,w
 14015  1382  047E               	iorwf	btemp+10,w
 14016  1383  047D               	iorwf	btemp+9,w
 14017  1384  047C               	iorwf	btemp+8,w
 14018  1385  1D03               	skipz
 14019  1386  2B88               	goto	u3831
 14020  1387  2B89               	goto	u3830
 14021  1388                     u3831:
 14022  1388  2B8F               	goto	l4909
 14023  1389                     u3830:
 14024  1389                     l4905:
 14025                           
 14026                           ;src/pba_systick.c: 147:         {;src/pba_systick.c: 148:             SYSTICK_TimerStop
      +                          (descriptor);
 14027                           ;stkvar	_descriptor @ sp[(-2)+0]
 14028  1389  3F7E               	moviw [-2]fsr1
 14029  138A  319D  251A  3193   	fcall	_SYSTICK_TimerStop
 14030  138D                     l4907:
 14031                           
 14032                           ;src/pba_systick.c: 149:             isTimeout = 1;
 14033  138D  3001               	movlw	1
 14034                           
 14035                           ;stkvar	_isTimeout @ sp[(-2)+1]
 14036  138E  3FFF               	movwi [-1]fsr1
 14037  138F                     l4909:
 14038                           
 14039                           ;src/pba_systick.c: 152:     return isTimeout;
 14040                           ;stkvar	_isTimeout @ sp[(-2)+1]
 14041  138F  3F7F               	moviw [-1]fsr1
 14042  1390                     l1083:
 14043                           
 14044                           ; _SYSTICK_Timeout: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14045  1390  317E               	addfsr 1,-2
 14046  1391  0008               	return
 14047  1392                     __end_of_SYSTICK_Timeout:
 14048                           
 14049                           	psect	text28
 14050  1D1A                     __ptext28:	
 14051 ;; *************** function _SYSTICK_TimerStop *****************
 14052 ;; Defined at:
 14053 ;;		line 126 in file "src/pba_systick.c"
 14054 ;; Parameters:    Size  Location     Type
 14055 ;;  descriptor      1    wreg     unsigned char 
 14056 ;; Auto vars:     Size  Location     Type
 14057 ;;  descriptor      1  [STACK] unsigned char 
 14058 ;; Return value:  Size  Location     Type
 14059 ;;                  1    wreg      void 
 14060 ;; Registers used:
 14061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11, pclath
 14062 ;; Tracked objects:
 14063 ;;		On entry : 0/0
 14064 ;;		On exit  : 0/0
 14065 ;;		Unchanged: 0/0
 14066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14071 ;;Total ram usage:        0 bytes
 14072 ;; Hardware stack levels used:    1
 14073 ;; Hardware stack levels required when called:    9
 14074 ;; This function calls:
 14075 ;;		___bmul
 14076 ;; This function is called by:
 14077 ;;		_main
 14078 ;;		_SYSTICK_Timeout
 14079 ;; This function uses a reentrant model
 14080 ;;
 14081                           
 14082                           
 14083                           ;psect for function _SYSTICK_TimerStop
 14084  1D1A                     _SYSTICK_TimerStop:
 14085                           
 14086                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14087  1D1A  3141               	addfsr 1,1
 14088                           
 14089                           ;incstack = 0
 14090                           ; Regs used in _SYSTICK_TimerStop: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+11+pcl
      +                          ath]
 14091                           ;_descriptor stored from wreg
 14092                           ;stkvar	_descriptor @ sp[(-1)+0]
 14093  1D1B  3FFF               	movwi [-1]fsr1
 14094  1D1C                     l4519:
 14095                           
 14096                           ;src/pba_systick.c: 126: void SYSTICK_TimerStop(uint8_t descriptor);src/pba_systick.c: 1
      +                          27: {;src/pba_systick.c: 129:     if(descriptor < 6)
 14097                           ;stkvar	_descriptor @ sp[(-1)+0]
 14098  1D1C  3F7F               	moviw [-1]fsr1
 14099  1D1D  00FF               	movwf	btemp+11
 14100  1D1E  3006               	movlw	6
 14101  1D1F  027F               	subwf	btemp+11,w
 14102  1D20  1803               	skipnc
 14103  1D21  2D23               	goto	u3441
 14104  1D22  2D24               	goto	u3440
 14105  1D23                     u3441:
 14106  1D23  2D2E               	goto	l1078
 14107  1D24                     u3440:
 14108  1D24                     l4521:
 14109                           
 14110                           ;src/pba_systick.c: 130:     {;src/pba_systick.c: 131:         softTimer[descriptor].sta
      +                          te = NOT_RUNNING;
 14111  1D24  3007               	movlw	7
 14112  1D25  001E               	movwi fsr1++
 14113                           
 14114                           ;stkvar	_descriptor @ sp[(-2)+0]
 14115  1D26  3F7E               	moviw [-2]fsr1
 14116  1D27  319E  2610  319D   	fcall	___bmul
 14117  1D2A  3EA4               	addlw	(low ((_softTimer| 0+4)))& (0+255)
 14118  1D2B  0084               	movwf	4
 14119  1D2C  0185               	clrf	5
 14120  1D2D  0180               	clrf	0
 14121  1D2E                     l1078:
 14122                           
 14123                           ; _SYSTICK_TimerStop: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14124  1D2E  317F               	addfsr 1,-1
 14125  1D2F  0008               	return
 14126  1D30                     __end_of_SYSTICK_TimerStop:
 14127                           
 14128                           	psect	text29
 14129  1C8F                     __ptext29:	
 14130 ;; *************** function _SYSTICK_AddTimeoutHandler *****************
 14131 ;; Defined at:
 14132 ;;		line 161 in file "src/pba_systick.c"
 14133 ;; Parameters:    Size  Location     Type
 14134 ;;  descriptor      1    wreg     unsigned char 
 14135 ;;  p_Function      2  [STACK] PTR FTN()void 
 14136 ;;		 -> Summer(1), 
 14137 ;; Auto vars:     Size  Location     Type
 14138 ;;  descriptor      1  [STACK] unsigned char 
 14139 ;; Return value:  Size  Location     Type
 14140 ;;                  1    wreg      void 
 14141 ;; Registers used:
 14142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11, pclath
 14143 ;; Tracked objects:
 14144 ;;		On entry : 0/0
 14145 ;;		On exit  : 0/0
 14146 ;;		Unchanged: 0/0
 14147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14152 ;;Total ram usage:        0 bytes
 14153 ;; Hardware stack levels used:    1
 14154 ;; Hardware stack levels required when called:    9
 14155 ;; This function calls:
 14156 ;;		___bmul
 14157 ;; This function is called by:
 14158 ;;		_main
 14159 ;; This function uses a reentrant model
 14160 ;;
 14161                           
 14162                           
 14163                           ;psect for function _SYSTICK_AddTimeoutHandler
 14164  1C8F                     _SYSTICK_AddTimeoutHandler:
 14165                           
 14166                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14167  1C8F  3141               	addfsr 1,1
 14168                           
 14169                           ;incstack = 0
 14170                           ; Regs used in _SYSTICK_AddTimeoutHandler: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btem
      +                          p+11+pclath]
 14171                           ;_descriptor stored from wreg
 14172                           ;stkvar	_descriptor @ sp[(-1)+0]
 14173  1C90  3FFF               	movwi [-1]fsr1
 14174  1C91                     l4959:
 14175                           
 14176                           ;src/pba_systick.c: 162:     softTimer[descriptor].p_callbackFunction = p_Function;
 14177                           ;stkvar	_p_Function @ sp[(-1)+-2]
 14178  1C91  3007               	movlw	7
 14179  1C92  001E               	movwi fsr1++
 14180                           
 14181                           ;stkvar	_descriptor @ sp[(-2)+0]
 14182  1C93  3F7E               	moviw [-2]fsr1
 14183  1C94  319E  2610  319C   	fcall	___bmul
 14184  1C97  3EA5               	addlw	(low ((_softTimer| 0+5)))& (0+255)
 14185  1C98  0084               	movwf	4
 14186  1C99  0185               	clrf	5
 14187  1C9A  3F7D               	moviw [-3]fsr1
 14188  1C9B  3F80               	movwi [0]fsr0
 14189  1C9C  3F7E               	moviw [-2]fsr1
 14190  1C9D  3F81               	movwi [1]fsr0
 14191  1C9E                     l1086:
 14192                           
 14193                           ; _SYSTICK_AddTimeoutHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 2, argsize = 2, vargsize = 0
 14194  1C9E  317D               	addfsr 1,-3
 14195  1C9F  0008               	return
 14196  1CA0                     __end_of_SYSTICK_AddTimeoutHandler:
 14197                           
 14198                           	psect	text30
 14199  1C06                     __ptext30:	
 14200 ;; *************** function _STATEMACHINE_Update *****************
 14201 ;; Defined at:
 14202 ;;		line 107 in file "src/pba_statemachine.c"
 14203 ;; Parameters:    Size  Location     Type
 14204 ;;		None
 14205 ;; Auto vars:     Size  Location     Type
 14206 ;;		None
 14207 ;; Return value:  Size  Location     Type
 14208 ;;                  1    wreg      void 
 14209 ;; Registers used:
 14210 ;;		wreg, fsr0l, fsr0h
 14211 ;; Tracked objects:
 14212 ;;		On entry : 0/0
 14213 ;;		On exit  : 3F/0
 14214 ;;		Unchanged: 0/0
 14215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14220 ;;Total ram usage:        0 bytes
 14221 ;; Hardware stack levels used:    1
 14222 ;; Hardware stack levels required when called:    8
 14223 ;; This function calls:
 14224 ;;		Nothing
 14225 ;; This function is called by:
 14226 ;;		_main
 14227 ;; This function uses a reentrant model
 14228 ;;
 14229                           
 14230                           
 14231                           ;psect for function _STATEMACHINE_Update
 14232  1C06                     _STATEMACHINE_Update:
 14233  1C06                     l5131:	
 14234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14235                           ;incstack = 0
 14236                           ; Regs used in _STATEMACHINE_Update: [wregfsr0]
 14237                           
 14238                           
 14239                           ;src/pba_statemachine.c: 108:     previousState = currentState;
 14240  1C06  0140               	movlb	0	; select bank0
 14241  1C07  0841               	movf	_currentState,w
 14242  1C08  00E4               	movwf	_previousState
 14243  1C09                     l5133:
 14244                           
 14245                           ;src/pba_statemachine.c: 109:     currentState = *p_state;
 14246  1C09  083D               	movf	_p_state,w
 14247  1C0A  0084               	movwf	4
 14248  1C0B  083E               	movf	_p_state+1,w
 14249  1C0C  0085               	movwf	5
 14250  1C0D  0800               	movf	0,w
 14251  1C0E  00C1               	movwf	_currentState
 14252  1C0F                     l1049:
 14253                           
 14254                           ; _STATEMACHINE_Update: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 0, argsize = 0, vargsize = 0
 14255  1C0F  0008               	return
 14256  1C10                     __end_of_STATEMACHINE_Update:
 14257                           
 14258                           	psect	text31
 14259  1C50                     __ptext31:	
 14260 ;; *************** function _STATEMACHINE_StateExit *****************
 14261 ;; Defined at:
 14262 ;;		line 129 in file "src/pba_statemachine.c"
 14263 ;; Parameters:    Size  Location     Type
 14264 ;;		None
 14265 ;; Auto vars:     Size  Location     Type
 14266 ;;		None
 14267 ;; Return value:  Size  Location     Type
 14268 ;;                  1    wreg      _Bool 
 14269 ;; Registers used:
 14270 ;;		wreg, fsr0l, fsr0h
 14271 ;; Tracked objects:
 14272 ;;		On entry : 3F/0
 14273 ;;		On exit  : 3F/0
 14274 ;;		Unchanged: 0/0
 14275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14280 ;;Total ram usage:        0 bytes
 14281 ;; Hardware stack levels used:    1
 14282 ;; Hardware stack levels required when called:    8
 14283 ;; This function calls:
 14284 ;;		Nothing
 14285 ;; This function is called by:
 14286 ;;		_main
 14287 ;; This function uses a reentrant model
 14288 ;;
 14289                           
 14290                           
 14291                           ;psect for function _STATEMACHINE_StateExit
 14292  1C50                     _STATEMACHINE_StateExit:
 14293  1C50                     l4947:	
 14294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14295                           ;incstack = 0
 14296                           ; Regs used in _STATEMACHINE_StateExit: [wregfsr0]
 14297                           
 14298                           
 14299                           ;src/pba_statemachine.c: 130:     if(*p_state!=currentState)
 14300  1C50  0140               	movlb	0	; select bank0
 14301  1C51  083D               	movf	_p_state,w
 14302  1C52  0084               	movwf	4
 14303  1C53  083E               	movf	_p_state+1,w
 14304  1C54  0085               	movwf	5
 14305  1C55  0800               	movf	0,w
 14306  1C56  0641               	xorwf	_currentState,w
 14307  1C57  1903               	skipnz
 14308  1C58  2C5A               	goto	u3891
 14309  1C59  2C5B               	goto	u3890
 14310  1C5A                     u3891:
 14311  1C5A  2C5D               	goto	l4955
 14312  1C5B                     u3890:
 14313  1C5B                     l4949:
 14314                           
 14315                           ;src/pba_statemachine.c: 131:         return 1;
 14316  1C5B  3001               	movlw	1
 14317  1C5C  2C5E               	goto	l1058
 14318  1C5D                     l4955:
 14319                           
 14320                           ;src/pba_statemachine.c: 133:         return 0;
 14321  1C5D  3000               	movlw	0
 14322  1C5E                     l1058:
 14323                           
 14324                           ; _STATEMACHINE_StateExit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 14325  1C5E  0008               	return
 14326  1C5F                     __end_of_STATEMACHINE_StateExit:
 14327                           
 14328                           	psect	text32
 14329  1C10                     __ptext32:	
 14330 ;; *************** function _STATEMACHINE_StateEntry *****************
 14331 ;; Defined at:
 14332 ;;		line 117 in file "src/pba_statemachine.c"
 14333 ;; Parameters:    Size  Location     Type
 14334 ;;		None
 14335 ;; Auto vars:     Size  Location     Type
 14336 ;;		None
 14337 ;; Return value:  Size  Location     Type
 14338 ;;                  1    wreg      _Bool 
 14339 ;; Registers used:
 14340 ;;		wreg
 14341 ;; Tracked objects:
 14342 ;;		On entry : 0/0
 14343 ;;		On exit  : 3F/0
 14344 ;;		Unchanged: 0/0
 14345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14350 ;;Total ram usage:        0 bytes
 14351 ;; Hardware stack levels used:    1
 14352 ;; Hardware stack levels required when called:    8
 14353 ;; This function calls:
 14354 ;;		Nothing
 14355 ;; This function is called by:
 14356 ;;		_main
 14357 ;; This function uses a reentrant model
 14358 ;;
 14359                           
 14360                           
 14361                           ;psect for function _STATEMACHINE_StateEntry
 14362  1C10                     _STATEMACHINE_StateEntry:
 14363  1C10                     l4913:	
 14364                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14365                           ;incstack = 0
 14366                           ; Regs used in _STATEMACHINE_StateEntry: [wreg]
 14367                           
 14368                           
 14369                           ;src/pba_statemachine.c: 118:     if(currentState!=previousState)
 14370  1C10  0140               	movlb	0	; select bank0
 14371  1C11  0841               	movf	_currentState,w
 14372  1C12  0664               	xorwf	_previousState,w
 14373  1C13  1903               	skipnz
 14374  1C14  2C16               	goto	u3841
 14375  1C15  2C17               	goto	u3840
 14376  1C16                     u3841:
 14377  1C16  2C19               	goto	l4921
 14378  1C17                     u3840:
 14379  1C17                     l4915:
 14380                           
 14381                           ;src/pba_statemachine.c: 119:         return 1;
 14382  1C17  3001               	movlw	1
 14383  1C18  2C1A               	goto	l1053
 14384  1C19                     l4921:
 14385                           
 14386                           ;src/pba_statemachine.c: 121:         return 0;
 14387  1C19  3000               	movlw	0
 14388  1C1A                     l1053:
 14389                           
 14390                           ; _STATEMACHINE_StateEntry: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 0, argsize = 0, vargsize = 0
 14391  1C1A  0008               	return
 14392  1C1B                     __end_of_STATEMACHINE_StateEntry:
 14393                           
 14394                           	psect	text33
 14395  1C35                     __ptext33:	
 14396 ;; *************** function _STATEMACHINE_Init *****************
 14397 ;; Defined at:
 14398 ;;		line 97 in file "src/pba_statemachine.c"
 14399 ;; Parameters:    Size  Location     Type
 14400 ;;  p_statePoint    2  [STACK] PTR unsigned char 
 14401 ;;		 -> myState(1), 
 14402 ;; Auto vars:     Size  Location     Type
 14403 ;;		None
 14404 ;; Return value:  Size  Location     Type
 14405 ;;                  1    wreg      void 
 14406 ;; Registers used:
 14407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h
 14408 ;; Tracked objects:
 14409 ;;		On entry : 3F/0
 14410 ;;		On exit  : 3F/0
 14411 ;;		Unchanged: 0/0
 14412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14417 ;;Total ram usage:        0 bytes
 14418 ;; Hardware stack levels used:    1
 14419 ;; Hardware stack levels required when called:    8
 14420 ;; This function calls:
 14421 ;;		Nothing
 14422 ;; This function is called by:
 14423 ;;		_main
 14424 ;; This function uses a reentrant model
 14425 ;;
 14426                           
 14427                           
 14428                           ;psect for function _STATEMACHINE_Init
 14429  1C35                     _STATEMACHINE_Init:
 14430  1C35                     l4893:	
 14431                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14432                           ;incstack = 0
 14433                           ; Regs used in _STATEMACHINE_Init: [wreg-fsr0h+fsr1l+fsr1h]
 14434                           
 14435                           
 14436                           ;src/pba_statemachine.c: 98:     p_state = p_statePointer;
 14437                           ;stkvar	_p_statePointer @ sp[(0)+-2]
 14438  1C35  3F7E               	moviw [-2]fsr1
 14439  1C36  0140               	movlb	0	; select bank0
 14440  1C37  00BD               	movwf	_p_state
 14441  1C38  3F7F               	moviw [-1]fsr1
 14442  1C39  00BE               	movwf	_p_state+1
 14443  1C3A                     l4895:
 14444                           
 14445                           ;src/pba_statemachine.c: 99:     currentState = *p_state;
 14446  1C3A  083D               	movf	_p_state,w
 14447  1C3B  0084               	movwf	4
 14448  1C3C  083E               	movf	_p_state+1,w
 14449  1C3D  0085               	movwf	5
 14450  1C3E  0800               	movf	0,w
 14451  1C3F  00C1               	movwf	_currentState
 14452  1C40                     l1046:
 14453                           
 14454                           ; _STATEMACHINE_Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 2, argsize = 2, vargsize = 0
 14455  1C40  317E               	addfsr 1,-2
 14456  1C41  0008               	return
 14457  1C42                     __end_of_STATEMACHINE_Init:
 14458                           
 14459                           	psect	text34
 14460  1244                     __ptext34:	
 14461 ;; *************** function _RTC_SetSeconds *****************
 14462 ;; Defined at:
 14463 ;;		line 93 in file "src/pba_rtc.c"
 14464 ;; Parameters:    Size  Location     Type
 14465 ;;  seconds         1    wreg     unsigned char 
 14466 ;; Auto vars:     Size  Location     Type
 14467 ;;  seconds         1  [STACK] unsigned char 
 14468 ;;  data            2  [STACK] unsigned char [2]
 14469 ;;  i2cWflag        1  [STACK] enum E8047
 14470 ;; Return value:  Size  Location     Type
 14471 ;;                  1    wreg      void 
 14472 ;; Registers used:
 14473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+2, btemp+3, btemp+10, btemp+11, pclath
 14474 ;; Tracked objects:
 14475 ;;		On entry : 0/0
 14476 ;;		On exit  : 0/0
 14477 ;;		Unchanged: 0/0
 14478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14483 ;;Total ram usage:        0 bytes
 14484 ;; Hardware stack levels used:    1
 14485 ;; Hardware stack levels required when called:   11
 14486 ;; This function calls:
 14487 ;;		_BinaryToBcd
 14488 ;;		_I2C2_MasterWrite
 14489 ;; This function is called by:
 14490 ;;		_main
 14491 ;; This function uses a reentrant model
 14492 ;;
 14493                           
 14494                           
 14495                           ;psect for function _RTC_SetSeconds
 14496  1244                     _RTC_SetSeconds:
 14497                           
 14498                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14499  1244  3144               	addfsr 1,4
 14500                           
 14501                           ;incstack = 0
 14502                           ; Regs used in _RTC_SetSeconds: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+2+btemp+3
      +                          +btemp+10+btemp+11+pclath]
 14503                           ;_seconds stored from wreg
 14504                           ;stkvar	_seconds @ sp[(-4)+0]
 14505  1245  3FFC               	movwi [-4]fsr1
 14506  1246                     l4987:
 14507                           
 14508                           ;src/pba_rtc.c: 94:     I2C2_MESSAGE_STATUS i2cWflag = I2C2_MESSAGE_PENDING;
 14509  1246  3002               	movlw	2
 14510                           
 14511                           ;stkvar	_i2cWflag @ sp[(-4)+3]
 14512  1247  3FFF               	movwi [-1]fsr1
 14513  1248                     l4989:
 14514                           
 14515                           ;src/pba_rtc.c: 96:     uint8_t data[2] = {0x00,BinaryToBcd(seconds)};
 14516                           ;stkvar	_data @ sp[(-4)+1]
 14517  1248  3000               	movlw	0
 14518  1249  3FFD               	movwi [-3]fsr1
 14519  124A  3FFE               	movwi [-2]fsr1
 14520  124B                     l4991:
 14521                           
 14522                           ;stkvar	_data @ sp[(-4)+1]
 14523  124B  3000               	movlw	0
 14524  124C  3FFD               	movwi [-3]fsr1
 14525  124D                     l4993:
 14526                           
 14527                           ;stkvar	_seconds @ sp[(-4)+0]
 14528  124D  3F7C               	moviw [-4]fsr1
 14529  124E  319D  2574  3192   	fcall	_BinaryToBcd
 14530                           
 14531                           ;stkvar	_data @ sp[(-4)+1]
 14532  1251  3FFE               	movwi [-2]fsr1
 14533  1252                     l4995:
 14534                           
 14535                           ;src/pba_rtc.c: 97:     I2C2_MasterWrite(data,2,0b01101000,&i2cWflag);
 14536                           ;stkvar	_i2cWflag @ sp[(-4)+3]
 14537  1252  30FF               	movlw	255
 14538  1253  0706               	addwf	6,w
 14539  1254  00F6               	movwf	btemp+2
 14540  1255  30FF               	movlw	255
 14541  1256  3D07               	addwfc	7,w
 14542  1257  00F7               	movwf	btemp+3
 14543  1258  0876               	movf	btemp+2,w
 14544  1259  001E               	movwi fsr1++
 14545  125A  0877               	movf	btemp+3,w
 14546  125B  001E               	movwi fsr1++
 14547  125C  3068               	movlw	104
 14548  125D  001E               	movwi fsr1++
 14549  125E  3000               	movlw	0
 14550  125F  001E               	movwi fsr1++
 14551  1260  3002               	movlw	2
 14552  1261  001E               	movwi fsr1++
 14553                           
 14554                           ;stkvar	_data @ sp[(-9)+1]
 14555  1262  30F8               	movlw	248
 14556  1263  0706               	addwf	6,w
 14557  1264  00F6               	movwf	btemp+2
 14558  1265  30FF               	movlw	255
 14559  1266  3D07               	addwfc	7,w
 14560  1267  00F7               	movwf	btemp+3
 14561  1268  0876               	movf	btemp+2,w
 14562  1269  001E               	movwi fsr1++
 14563  126A  0877               	movf	btemp+3,w
 14564  126B  001E               	movwi fsr1++
 14565  126C  319F  2732  3192   	fcall	_I2C2_MasterWrite
 14566  126F                     l4997:	
 14567                           ;src/pba_rtc.c: 98:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 14568                           
 14569                           
 14570                           ;stkvar	_i2cWflag @ sp[(-4)+3]
 14571  126F  3F7F               	moviw [-1]fsr1
 14572  1270  1D03               	btfss	3,2
 14573  1271  2A73               	goto	u3921
 14574  1272  2A74               	goto	u3920
 14575  1273                     u3921:
 14576  1273  2A6F               	goto	l4997
 14577  1274                     u3920:
 14578  1274                     l967:
 14579                           
 14580                           ; _RTC_SetSeconds: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14581  1274  317C               	addfsr 1,-4
 14582  1275  0008               	return
 14583  1276                     __end_of_RTC_SetSeconds:
 14584                           
 14585                           	psect	text35
 14586  1212                     __ptext35:	
 14587 ;; *************** function _RTC_SetMinutes *****************
 14588 ;; Defined at:
 14589 ;;		line 122 in file "src/pba_rtc.c"
 14590 ;; Parameters:    Size  Location     Type
 14591 ;;  minutes         1    wreg     unsigned char 
 14592 ;; Auto vars:     Size  Location     Type
 14593 ;;  minutes         1  [STACK] unsigned char 
 14594 ;;  data            2  [STACK] unsigned char [2]
 14595 ;;  i2cWflag        1  [STACK] enum E8047
 14596 ;; Return value:  Size  Location     Type
 14597 ;;                  1    wreg      void 
 14598 ;; Registers used:
 14599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+2, btemp+3, btemp+10, btemp+11, pclath
 14600 ;; Tracked objects:
 14601 ;;		On entry : 0/0
 14602 ;;		On exit  : 0/0
 14603 ;;		Unchanged: 0/0
 14604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14609 ;;Total ram usage:        0 bytes
 14610 ;; Hardware stack levels used:    1
 14611 ;; Hardware stack levels required when called:   11
 14612 ;; This function calls:
 14613 ;;		_BinaryToBcd
 14614 ;;		_I2C2_MasterWrite
 14615 ;; This function is called by:
 14616 ;;		_main
 14617 ;; This function uses a reentrant model
 14618 ;;
 14619                           
 14620                           
 14621                           ;psect for function _RTC_SetMinutes
 14622  1212                     _RTC_SetMinutes:
 14623                           
 14624                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14625  1212  3144               	addfsr 1,4
 14626                           
 14627                           ;incstack = 0
 14628                           ; Regs used in _RTC_SetMinutes: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+2+btemp+3
      +                          +btemp+10+btemp+11+pclath]
 14629                           ;_minutes stored from wreg
 14630                           ;stkvar	_minutes @ sp[(-4)+0]
 14631  1213  3FFC               	movwi [-4]fsr1
 14632  1214                     l4975:
 14633                           
 14634                           ;src/pba_rtc.c: 123:     I2C2_MESSAGE_STATUS i2cWflag = I2C2_MESSAGE_PENDING;
 14635  1214  3002               	movlw	2
 14636                           
 14637                           ;stkvar	_i2cWflag @ sp[(-4)+3]
 14638  1215  3FFF               	movwi [-1]fsr1
 14639  1216                     l4977:
 14640                           
 14641                           ;src/pba_rtc.c: 125:     uint8_t data[2] = {0x01,BinaryToBcd(minutes)};
 14642                           ;stkvar	_data @ sp[(-4)+1]
 14643  1216  3000               	movlw	0
 14644  1217  3FFD               	movwi [-3]fsr1
 14645  1218  3FFE               	movwi [-2]fsr1
 14646  1219                     l4979:
 14647  1219  3001               	movlw	1
 14648                           
 14649                           ;stkvar	_data @ sp[(-4)+1]
 14650  121A  3FFD               	movwi [-3]fsr1
 14651  121B                     l4981:
 14652                           
 14653                           ;stkvar	_minutes @ sp[(-4)+0]
 14654  121B  3F7C               	moviw [-4]fsr1
 14655  121C  319D  2574  3192   	fcall	_BinaryToBcd
 14656                           
 14657                           ;stkvar	_data @ sp[(-4)+1]
 14658  121F  3FFE               	movwi [-2]fsr1
 14659  1220                     l4983:
 14660                           
 14661                           ;src/pba_rtc.c: 126:     I2C2_MasterWrite(data,2,0b01101000,&i2cWflag);
 14662                           ;stkvar	_i2cWflag @ sp[(-4)+3]
 14663  1220  30FF               	movlw	255
 14664  1221  0706               	addwf	6,w
 14665  1222  00F6               	movwf	btemp+2
 14666  1223  30FF               	movlw	255
 14667  1224  3D07               	addwfc	7,w
 14668  1225  00F7               	movwf	btemp+3
 14669  1226  0876               	movf	btemp+2,w
 14670  1227  001E               	movwi fsr1++
 14671  1228  0877               	movf	btemp+3,w
 14672  1229  001E               	movwi fsr1++
 14673  122A  3068               	movlw	104
 14674  122B  001E               	movwi fsr1++
 14675  122C  3000               	movlw	0
 14676  122D  001E               	movwi fsr1++
 14677  122E  3002               	movlw	2
 14678  122F  001E               	movwi fsr1++
 14679                           
 14680                           ;stkvar	_data @ sp[(-9)+1]
 14681  1230  30F8               	movlw	248
 14682  1231  0706               	addwf	6,w
 14683  1232  00F6               	movwf	btemp+2
 14684  1233  30FF               	movlw	255
 14685  1234  3D07               	addwfc	7,w
 14686  1235  00F7               	movwf	btemp+3
 14687  1236  0876               	movf	btemp+2,w
 14688  1237  001E               	movwi fsr1++
 14689  1238  0877               	movf	btemp+3,w
 14690  1239  001E               	movwi fsr1++
 14691  123A  319F  2732  3192   	fcall	_I2C2_MasterWrite
 14692  123D                     l4985:	
 14693                           ;src/pba_rtc.c: 127:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 14694                           
 14695                           
 14696                           ;stkvar	_i2cWflag @ sp[(-4)+3]
 14697  123D  3F7F               	moviw [-1]fsr1
 14698  123E  1D03               	btfss	3,2
 14699  123F  2A41               	goto	u3911
 14700  1240  2A42               	goto	u3910
 14701  1241                     u3911:
 14702  1241  2A3D               	goto	l4985
 14703  1242                     u3910:
 14704  1242                     l984:
 14705                           
 14706                           ; _RTC_SetMinutes: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14707  1242  317C               	addfsr 1,-4
 14708  1243  0008               	return
 14709  1244                     __end_of_RTC_SetMinutes:
 14710                           
 14711                           	psect	text36
 14712  1276                     __ptext36:	
 14713 ;; *************** function _RTC_SetHours *****************
 14714 ;; Defined at:
 14715 ;;		line 151 in file "src/pba_rtc.c"
 14716 ;; Parameters:    Size  Location     Type
 14717 ;;  houres          1    wreg     unsigned char 
 14718 ;; Auto vars:     Size  Location     Type
 14719 ;;  houres          1  [STACK] unsigned char 
 14720 ;;  data            2  [STACK] unsigned char [2]
 14721 ;;  i2cWflag        1  [STACK] enum E8047
 14722 ;; Return value:  Size  Location     Type
 14723 ;;                  1    wreg      void 
 14724 ;; Registers used:
 14725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+2, btemp+3, btemp+10, btemp+11, pclath
 14726 ;; Tracked objects:
 14727 ;;		On entry : 3F/0
 14728 ;;		On exit  : 0/0
 14729 ;;		Unchanged: 0/0
 14730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14735 ;;Total ram usage:        0 bytes
 14736 ;; Hardware stack levels used:    1
 14737 ;; Hardware stack levels required when called:   11
 14738 ;; This function calls:
 14739 ;;		_BinaryToBcd
 14740 ;;		_I2C2_MasterWrite
 14741 ;; This function is called by:
 14742 ;;		_main
 14743 ;; This function uses a reentrant model
 14744 ;;
 14745                           
 14746                           
 14747                           ;psect for function _RTC_SetHours
 14748  1276                     _RTC_SetHours:
 14749                           
 14750                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14751  1276  3144               	addfsr 1,4
 14752                           
 14753                           ;incstack = 0
 14754                           ; Regs used in _RTC_SetHours: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+2+btemp+3+b
      +                          temp+10+btemp+11+pclath]
 14755                           ;_houres stored from wreg
 14756                           ;stkvar	_houres @ sp[(-4)+0]
 14757  1277  3FFC               	movwi [-4]fsr1
 14758  1278                     l4961:
 14759                           
 14760                           ;src/pba_rtc.c: 152:     I2C2_MESSAGE_STATUS i2cWflag = I2C2_MESSAGE_PENDING;
 14761  1278  3002               	movlw	2
 14762                           
 14763                           ;stkvar	_i2cWflag @ sp[(-4)+3]
 14764  1279  3FFF               	movwi [-1]fsr1
 14765  127A                     l4963:
 14766                           
 14767                           ;src/pba_rtc.c: 154:     uint8_t data[2] = {0x02,BinaryToBcd(houres)&0b00111111};
 14768                           ;stkvar	_data @ sp[(-4)+1]
 14769  127A  3000               	movlw	0
 14770  127B  3FFD               	movwi [-3]fsr1
 14771  127C  3FFE               	movwi [-2]fsr1
 14772  127D                     l4965:
 14773  127D  3002               	movlw	2
 14774                           
 14775                           ;stkvar	_data @ sp[(-4)+1]
 14776  127E  3FFD               	movwi [-3]fsr1
 14777  127F                     l4967:
 14778                           
 14779                           ;stkvar	_houres @ sp[(-4)+0]
 14780  127F  3F7C               	moviw [-4]fsr1
 14781  1280  319D  2574  3192   	fcall	_BinaryToBcd
 14782                           
 14783                           ;stkvar	_data @ sp[(-4)+1]
 14784  1283  3FFE               	movwi [-2]fsr1
 14785  1284                     l4969:
 14786                           
 14787                           ;stkvar	_data @ sp[(-4)+1]
 14788  1284  3F7E               	moviw [-2]fsr1
 14789  1285  393F               	andlw	63
 14790  1286  3FFE               	movwi [-2]fsr1
 14791  1287                     l4971:
 14792                           
 14793                           ;src/pba_rtc.c: 155:     I2C2_MasterWrite(data,2,0b01101000,&i2cWflag);
 14794                           ;stkvar	_i2cWflag @ sp[(-4)+3]
 14795  1287  30FF               	movlw	255
 14796  1288  0706               	addwf	6,w
 14797  1289  00F6               	movwf	btemp+2
 14798  128A  30FF               	movlw	255
 14799  128B  3D07               	addwfc	7,w
 14800  128C  00F7               	movwf	btemp+3
 14801  128D  0876               	movf	btemp+2,w
 14802  128E  001E               	movwi fsr1++
 14803  128F  0877               	movf	btemp+3,w
 14804  1290  001E               	movwi fsr1++
 14805  1291  3068               	movlw	104
 14806  1292  001E               	movwi fsr1++
 14807  1293  3000               	movlw	0
 14808  1294  001E               	movwi fsr1++
 14809  1295  3002               	movlw	2
 14810  1296  001E               	movwi fsr1++
 14811                           
 14812                           ;stkvar	_data @ sp[(-9)+1]
 14813  1297  30F8               	movlw	248
 14814  1298  0706               	addwf	6,w
 14815  1299  00F6               	movwf	btemp+2
 14816  129A  30FF               	movlw	255
 14817  129B  3D07               	addwfc	7,w
 14818  129C  00F7               	movwf	btemp+3
 14819  129D  0876               	movf	btemp+2,w
 14820  129E  001E               	movwi fsr1++
 14821  129F  0877               	movf	btemp+3,w
 14822  12A0  001E               	movwi fsr1++
 14823  12A1  319F  2732  3192   	fcall	_I2C2_MasterWrite
 14824  12A4                     l4973:	
 14825                           ;src/pba_rtc.c: 156:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 14826                           
 14827                           
 14828                           ;stkvar	_i2cWflag @ sp[(-4)+3]
 14829  12A4  3F7F               	moviw [-1]fsr1
 14830  12A5  1D03               	btfss	3,2
 14831  12A6  2AA8               	goto	u3901
 14832  12A7  2AA9               	goto	u3900
 14833  12A8                     u3901:
 14834  12A8  2AA4               	goto	l4973
 14835  12A9                     u3900:
 14836  12A9                     l1001:
 14837                           
 14838                           ; _RTC_SetHours: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 14839  12A9  317C               	addfsr 1,-4
 14840  12AA  0008               	return
 14841  12AB                     __end_of_RTC_SetHours:
 14842                           
 14843                           	psect	text37
 14844  1D74                     __ptext37:	
 14845 ;; *************** function _BinaryToBcd *****************
 14846 ;; Defined at:
 14847 ;;		line 220 in file "src/pba_rtc.c"
 14848 ;; Parameters:    Size  Location     Type
 14849 ;;  binaryValue     1    wreg     unsigned char 
 14850 ;; Auto vars:     Size  Location     Type
 14851 ;;  binaryValue     1  [STACK] unsigned char 
 14852 ;;  zehner          1  [STACK] unsigned char 
 14853 ;;  einer           1  [STACK] unsigned char 
 14854 ;; Return value:  Size  Location     Type
 14855 ;;                  1    wreg      unsigned char 
 14856 ;; Registers used:
 14857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11, pclath
 14858 ;; Tracked objects:
 14859 ;;		On entry : 0/0
 14860 ;;		On exit  : 0/0
 14861 ;;		Unchanged: 0/0
 14862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14867 ;;Total ram usage:        0 bytes
 14868 ;; Hardware stack levels used:    1
 14869 ;; Hardware stack levels required when called:    9
 14870 ;; This function calls:
 14871 ;;		___lbdiv
 14872 ;;		___lbmod
 14873 ;; This function is called by:
 14874 ;;		_RTC_SetSeconds
 14875 ;;		_RTC_SetMinutes
 14876 ;;		_RTC_SetHours
 14877 ;; This function uses a reentrant model
 14878 ;;
 14879                           
 14880                           
 14881                           ;psect for function _BinaryToBcd
 14882  1D74                     _BinaryToBcd:
 14883                           
 14884                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14885  1D74  3143               	addfsr 1,3
 14886                           
 14887                           ;incstack = 0
 14888                           ; Regs used in _BinaryToBcd: [wreg+fsr1l+fsr1h+status,2-btemp+0+btemp+11+pclath]
 14889                           ;_binaryValue stored from wreg
 14890                           ;stkvar	_binaryValue @ sp[(-3)+0]
 14891  1D75  3FFD               	movwi [-3]fsr1
 14892  1D76                     l2853:
 14893                           
 14894                           ;src/pba_rtc.c: 221:     uint8_t einer = binaryValue%10;
 14895  1D76  300A               	movlw	10
 14896  1D77  001E               	movwi fsr1++
 14897                           
 14898                           ;stkvar	_binaryValue @ sp[(-4)+0]
 14899  1D78  3F7C               	moviw [-4]fsr1
 14900  1D79  3191  2154  319D   	fcall	___lbmod
 14901                           
 14902                           ;stkvar	_einer @ sp[(-3)+2]
 14903  1D7C  3FFF               	movwi [-1]fsr1
 14904                           
 14905                           ;src/pba_rtc.c: 222:     uint8_t zehner = binaryValue/10;
 14906  1D7D  300A               	movlw	10
 14907  1D7E  001E               	movwi fsr1++
 14908                           
 14909                           ;stkvar	_binaryValue @ sp[(-4)+0]
 14910  1D7F  3F7C               	moviw [-4]fsr1
 14911  1D80  3193  231B  319D   	fcall	___lbdiv
 14912                           
 14913                           ;stkvar	_zehner @ sp[(-3)+1]
 14914  1D83  3FFE               	movwi [-2]fsr1
 14915  1D84                     l2855:
 14916                           
 14917                           ;src/pba_rtc.c: 223:     return (einer+(zehner<<4));
 14918                           ;stkvar	_einer @ sp[(-3)+2]
 14919                           ;stkvar	_zehner @ sp[(-3)+1]
 14920  1D84  3F7E               	moviw [-2]fsr1
 14921  1D85  0E89               	swapf	9,f
 14922  1D86  39F0               	andlw	240
 14923  1D87  00F4               	movwf	btemp
 14924  1D88  3F7F               	moviw [-1]fsr1
 14925  1D89  0774               	addwf	btemp,w
 14926  1D8A                     l1037:
 14927                           
 14928                           ; _BinaryToBcd: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 14929  1D8A  317D               	addfsr 1,-3
 14930  1D8B  0008               	return
 14931  1D8C                     __end_of_BinaryToBcd:
 14932                           
 14933                           	psect	text38
 14934  1154                     __ptext38:	
 14935 ;; *************** function ___lbmod *****************
 14936 ;; Defined at:
 14937 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lbmod.c"
 14938 ;; Parameters:    Size  Location     Type
 14939 ;;  dividend        1    wreg     unsigned char 
 14940 ;;  divisor         1  [STACK] unsigned char 
 14941 ;; Auto vars:     Size  Location     Type
 14942 ;;  dividend        1  [STACK] unsigned char 
 14943 ;;  rem             1  [STACK] unsigned char 
 14944 ;;  counter         1  [STACK] unsigned char 
 14945 ;; Return value:  Size  Location     Type
 14946 ;;                  1    wreg      unsigned char 
 14947 ;; Registers used:
 14948 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11
 14949 ;; Tracked objects:
 14950 ;;		On entry : 0/0
 14951 ;;		On exit  : 0/0
 14952 ;;		Unchanged: 0/0
 14953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14958 ;;Total ram usage:        0 bytes
 14959 ;; Hardware stack levels used:    1
 14960 ;; Hardware stack levels required when called:    8
 14961 ;; This function calls:
 14962 ;;		Nothing
 14963 ;; This function is called by:
 14964 ;;		_BinaryToBcd
 14965 ;; This function uses a reentrant model
 14966 ;;
 14967                           
 14968                           
 14969                           ;psect for function ___lbmod
 14970  1154                     ___lbmod:
 14971                           
 14972                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14973  1154  3143               	addfsr 1,3
 14974                           
 14975                           ;incstack = 0
 14976                           ; Regs used in ___lbmod: [wreg+fsr1l+fsr1h+status,2-btemp+0+btemp+11]
 14977                           ;_dividend stored from wreg
 14978                           ;stkvar	_dividend @ sp[(-3)+0]
 14979  1155  3FFD               	movwi [-3]fsr1
 14980  1156                     l2507:
 14981  1156  3008               	movlw	8
 14982                           
 14983                           ;stkvar	_counter @ sp[(-3)+2]
 14984  1157  3FFF               	movwi [-1]fsr1
 14985  1158                     l2509:
 14986                           
 14987                           ;stkvar	_rem @ sp[(-3)+1]
 14988  1158  3000               	movlw	0
 14989  1159  3FFE               	movwi [-2]fsr1
 14990  115A                     l2511:
 14991                           
 14992                           ;stkvar	_dividend @ sp[(-3)+0]
 14993  115A  3F7D               	moviw [-3]fsr1
 14994  115B  00FF               	movwf	btemp+11
 14995  115C  3007               	movlw	7
 14996  115D                     u925:
 14997  115D  36FF               	lsrf	btemp+11,f
 14998  115E  0B89               	decfsz	9,f
 14999  115F  295D               	goto	u925
 15000                           
 15001                           ;stkvar	_rem @ sp[(-3)+1]
 15002  1160  3F7E               	moviw [-2]fsr1
 15003  1161  3509               	lslf	9,w
 15004  1162  047F               	iorwf	btemp+11,w
 15005                           
 15006                           ;stkvar	_rem @ sp[(-3)+1]
 15007  1163  3FFE               	movwi [-2]fsr1
 15008  1164                     l2513:
 15009                           
 15010                           ;stkvar	_dividend @ sp[(-3)+0]
 15011  1164  3F7D               	moviw [-3]fsr1
 15012  1165  3589               	lslf	9,f
 15013  1166  3FFD               	movwi [-3]fsr1
 15014  1167                     l2515:
 15015                           
 15016                           ;stkvar	_rem @ sp[(-3)+1]
 15017  1167  3F7E               	moviw [-2]fsr1
 15018  1168  00FF               	movwf	btemp+11
 15019                           
 15020                           ;stkvar	_divisor @ sp[(-3)+-1]
 15021  1169  3F7C               	moviw [-4]fsr1
 15022  116A  027F               	subwf	btemp+11,w
 15023  116B  1C03               	skipc
 15024  116C  296E               	goto	u931
 15025  116D  296F               	goto	u930
 15026  116E                     u931:
 15027  116E  2976               	goto	l2519
 15028  116F                     u930:
 15029  116F                     l2517:
 15030                           
 15031                           ;stkvar	_divisor @ sp[(-3)+-1]
 15032  116F  3F7C               	moviw [-4]fsr1
 15033  1170  00FF               	movwf	btemp+11
 15034                           
 15035                           ;stkvar	_rem @ sp[(-3)+1]
 15036  1171  3F7E               	moviw [-2]fsr1
 15037  1172  00F4               	movwf	btemp
 15038  1173  087F               	movf	btemp+11,w
 15039  1174  0274               	subwf	btemp,w
 15040  1175  3FFE               	movwi [-2]fsr1
 15041  1176                     l2519:
 15042                           
 15043                           ;stkvar	_counter @ sp[(-3)+2]
 15044  1176  3F7F               	moviw [-1]fsr1
 15045  1177  00F4               	movwf	btemp
 15046  1178  3001               	movlw	1
 15047  1179  0274               	subwf	btemp,w
 15048  117A  3FFF               	movwi [-1]fsr1
 15049  117B  1D03               	btfss	3,2
 15050  117C  297E               	goto	u941
 15051  117D  297F               	goto	u940
 15052  117E                     u941:
 15053  117E  295A               	goto	l2511
 15054  117F                     u940:
 15055  117F                     l2521:
 15056                           
 15057                           ;stkvar	_rem @ sp[(-3)+1]
 15058  117F  3F7E               	moviw [-2]fsr1
 15059  1180                     l1381:
 15060                           
 15061                           ; ___lbmod: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsi
      +                          ze = 1, vargsize = 0
 15062  1180  317C               	addfsr 1,-4
 15063  1181  0008               	return
 15064  1182                     __end_of___lbmod:
 15065                           
 15066                           	psect	text39
 15067  131B                     __ptext39:	
 15068 ;; *************** function ___lbdiv *****************
 15069 ;; Defined at:
 15070 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lbdiv.c"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;  dividend        1    wreg     unsigned char 
 15073 ;;  divisor         1  [STACK] unsigned char 
 15074 ;; Auto vars:     Size  Location     Type
 15075 ;;  dividend        1  [STACK] unsigned char 
 15076 ;;  quotient        1  [STACK] unsigned char 
 15077 ;;  counter         1  [STACK] unsigned char 
 15078 ;; Return value:  Size  Location     Type
 15079 ;;                  1    wreg      unsigned char 
 15080 ;; Registers used:
 15081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11
 15082 ;; Tracked objects:
 15083 ;;		On entry : 0/0
 15084 ;;		On exit  : 0/0
 15085 ;;		Unchanged: 0/0
 15086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15091 ;;Total ram usage:        0 bytes
 15092 ;; Hardware stack levels used:    1
 15093 ;; Hardware stack levels required when called:    8
 15094 ;; This function calls:
 15095 ;;		Nothing
 15096 ;; This function is called by:
 15097 ;;		_BinaryToBcd
 15098 ;; This function uses a reentrant model
 15099 ;;
 15100                           
 15101                           
 15102                           ;psect for function ___lbdiv
 15103  131B                     ___lbdiv:
 15104                           
 15105                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15106  131B  3143               	addfsr 1,3
 15107                           
 15108                           ;incstack = 0
 15109                           ; Regs used in ___lbdiv: [wreg+fsr1l+fsr1h+status,2-btemp+0+btemp+11]
 15110                           ;_dividend stored from wreg
 15111                           ;stkvar	_dividend @ sp[(-3)+0]
 15112  131C  3FFD               	movwi [-3]fsr1
 15113  131D                     l2479:
 15114                           
 15115                           ;stkvar	_quotient @ sp[(-3)+1]
 15116  131D  3000               	movlw	0
 15117  131E  3FFE               	movwi [-2]fsr1
 15118  131F                     l2481:
 15119                           
 15120                           ;stkvar	_divisor @ sp[(-3)+-1]
 15121  131F  3F7C               	moviw [-4]fsr1
 15122  1320  1903               	btfsc	3,2
 15123  1321  2B23               	goto	u881
 15124  1322  2B24               	goto	u880
 15125  1323                     u881:
 15126  1323  2B53               	goto	l2503
 15127  1324                     u880:
 15128  1324                     l2483:
 15129  1324  3001               	movlw	1
 15130                           
 15131                           ;stkvar	_counter @ sp[(-3)+2]
 15132  1325  3FFF               	movwi [-1]fsr1
 15133  1326  2B2D               	goto	l2489
 15134  1327                     l2485:
 15135                           
 15136                           ;stkvar	_divisor @ sp[(-3)+-1]
 15137  1327  3F7C               	moviw [-4]fsr1
 15138  1328  3589               	lslf	9,f
 15139  1329  3FFC               	movwi [-4]fsr1
 15140  132A                     l2487:
 15141                           
 15142                           ;stkvar	_counter @ sp[(-3)+2]
 15143  132A  3F7F               	moviw [-1]fsr1
 15144  132B  3E01               	addlw	1
 15145  132C  3FFF               	movwi [-1]fsr1
 15146  132D                     l2489:
 15147                           
 15148                           ;stkvar	_divisor @ sp[(-3)+-1]
 15149  132D  3F7C               	moviw [-4]fsr1
 15150  132E  1F89               	btfss	9,7
 15151  132F  2B31               	goto	u891
 15152  1330  2B32               	goto	u890
 15153  1331                     u891:
 15154  1331  2B27               	goto	l2485
 15155  1332                     u890:
 15156  1332                     l2491:
 15157                           
 15158                           ;stkvar	_quotient @ sp[(-3)+1]
 15159  1332  3F7E               	moviw [-2]fsr1
 15160  1333  3589               	lslf	9,f
 15161  1334  3FFE               	movwi [-2]fsr1
 15162  1335                     l2493:
 15163                           
 15164                           ;stkvar	_dividend @ sp[(-3)+0]
 15165  1335  3F7D               	moviw [-3]fsr1
 15166  1336  00FF               	movwf	btemp+11
 15167                           
 15168                           ;stkvar	_divisor @ sp[(-3)+-1]
 15169  1337  3F7C               	moviw [-4]fsr1
 15170  1338  027F               	subwf	btemp+11,w
 15171  1339  1C03               	skipc
 15172  133A  2B3C               	goto	u901
 15173  133B  2B3D               	goto	u900
 15174  133C                     u901:
 15175  133C  2B47               	goto	l2499
 15176  133D                     u900:
 15177  133D                     l2495:
 15178                           
 15179                           ;stkvar	_divisor @ sp[(-3)+-1]
 15180  133D  3F7C               	moviw [-4]fsr1
 15181  133E  00FF               	movwf	btemp+11
 15182                           
 15183                           ;stkvar	_dividend @ sp[(-3)+0]
 15184  133F  3F7D               	moviw [-3]fsr1
 15185  1340  00F4               	movwf	btemp
 15186  1341  087F               	movf	btemp+11,w
 15187  1342  0274               	subwf	btemp,w
 15188  1343  3FFD               	movwi [-3]fsr1
 15189  1344                     l2497:
 15190                           
 15191                           ;stkvar	_quotient @ sp[(-3)+1]
 15192  1344  3F7E               	moviw [-2]fsr1
 15193  1345  3801               	iorlw	1
 15194  1346  3FFE               	movwi [-2]fsr1
 15195  1347                     l2499:
 15196                           
 15197                           ;stkvar	_divisor @ sp[(-3)+-1]
 15198  1347  3F7C               	moviw [-4]fsr1
 15199  1348  3689               	lsrf	9,f
 15200  1349  3FFC               	movwi [-4]fsr1
 15201  134A                     l2501:
 15202                           
 15203                           ;stkvar	_counter @ sp[(-3)+2]
 15204  134A  3F7F               	moviw [-1]fsr1
 15205  134B  00F4               	movwf	btemp
 15206  134C  3001               	movlw	1
 15207  134D  0274               	subwf	btemp,w
 15208  134E  3FFF               	movwi [-1]fsr1
 15209  134F  1D03               	btfss	3,2
 15210  1350  2B52               	goto	u911
 15211  1351  2B53               	goto	u910
 15212  1352                     u911:
 15213  1352  2B32               	goto	l2491
 15214  1353                     u910:
 15215  1353                     l2503:
 15216                           
 15217                           ;stkvar	_quotient @ sp[(-3)+1]
 15218  1353  3F7E               	moviw [-2]fsr1
 15219  1354                     l1375:
 15220                           
 15221                           ; ___lbdiv: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsi
      +                          ze = 1, vargsize = 0
 15222  1354  317C               	addfsr 1,-4
 15223  1355  0008               	return
 15224  1356                     __end_of___lbdiv:
 15225                           
 15226                           	psect	text40
 15227  16C3                     __ptext40:	
 15228 ;; *************** function _RTC_IsTempConvDone *****************
 15229 ;; Defined at:
 15230 ;;		line 174 in file "src/pba_rtc.c"
 15231 ;; Parameters:    Size  Location     Type
 15232 ;;		None
 15233 ;; Auto vars:     Size  Location     Type
 15234 ;;  data            2  [STACK] unsigned char [2]
 15235 ;;  i2cWflag        1  [STACK] enum E8047
 15236 ;; Return value:  Size  Location     Type
 15237 ;;                  1    wreg      unsigned char 
 15238 ;; Registers used:
 15239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+2, btemp+3, btemp+10, btemp+11, pclath
 15240 ;; Tracked objects:
 15241 ;;		On entry : 0/0
 15242 ;;		On exit  : 0/0
 15243 ;;		Unchanged: 0/0
 15244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15249 ;;Total ram usage:        0 bytes
 15250 ;; Hardware stack levels used:    1
 15251 ;; Hardware stack levels required when called:   11
 15252 ;; This function calls:
 15253 ;;		_I2C2_MasterRead
 15254 ;;		_I2C2_MasterWrite
 15255 ;; This function is called by:
 15256 ;;		_main
 15257 ;; This function uses a reentrant model
 15258 ;;
 15259                           
 15260                           
 15261                           ;psect for function _RTC_IsTempConvDone
 15262  16C3                     _RTC_IsTempConvDone:
 15263                           
 15264                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15265  16C3  3143               	addfsr 1,3
 15266  16C4                     l5075:	
 15267                           ;incstack = 0
 15268                           ; Regs used in _RTC_IsTempConvDone: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+2+bte
      +                          mp+3+btemp+10+btemp+11+pclath]
 15269                           
 15270                           
 15271                           ;src/pba_rtc.c: 175:     I2C2_MESSAGE_STATUS i2cWflag = I2C2_MESSAGE_PENDING;
 15272  16C4  3002               	movlw	2
 15273                           
 15274                           ;stkvar	_i2cWflag @ sp[(-3)+2]
 15275  16C5  3FFF               	movwi [-1]fsr1
 15276  16C6                     l5077:
 15277                           
 15278                           ;src/pba_rtc.c: 176:     uint8_t data[2] = {0x0E,0x00};
 15279  16C6  0140               	movlb	0	; select bank0
 15280  16C7  085F               	movf	RTC_IsTempConvDone@F8248+1,w
 15281  16C8  00FF               	movwf	btemp+11
 15282  16C9  085E               	movf	RTC_IsTempConvDone@F8248,w
 15283  16CA  00FE               	movwf	btemp+10
 15284                           
 15285                           ;stkvar	_data @ sp[(-3)+0]
 15286  16CB  087E               	movf	btemp+10,w
 15287  16CC  3FFD               	movwi [-3]fsr1
 15288  16CD  087F               	movf	btemp+11,w
 15289  16CE  3FFE               	movwi [-2]fsr1
 15290  16CF                     l5079:
 15291                           
 15292                           ;src/pba_rtc.c: 177:     I2C2_MasterWrite(&data[0],1,0b01101000,&i2cWflag);
 15293                           ;stkvar	_i2cWflag @ sp[(-3)+2]
 15294  16CF  30FF               	movlw	255
 15295  16D0  0706               	addwf	6,w
 15296  16D1  00F6               	movwf	btemp+2
 15297  16D2  30FF               	movlw	255
 15298  16D3  3D07               	addwfc	7,w
 15299  16D4  00F7               	movwf	btemp+3
 15300  16D5  0876               	movf	btemp+2,w
 15301  16D6  001E               	movwi fsr1++
 15302  16D7  0877               	movf	btemp+3,w
 15303  16D8  001E               	movwi fsr1++
 15304  16D9  3068               	movlw	104
 15305  16DA  001E               	movwi fsr1++
 15306  16DB  3000               	movlw	0
 15307  16DC  001E               	movwi fsr1++
 15308  16DD  3001               	movlw	1
 15309  16DE  001E               	movwi fsr1++
 15310                           
 15311                           ;stkvar	_data @ sp[(-8)+0]
 15312  16DF  30F8               	movlw	248
 15313  16E0  0706               	addwf	6,w
 15314  16E1  00F6               	movwf	btemp+2
 15315  16E2  30FF               	movlw	255
 15316  16E3  3D07               	addwfc	7,w
 15317  16E4  00F7               	movwf	btemp+3
 15318  16E5  0876               	movf	btemp+2,w
 15319  16E6  001E               	movwi fsr1++
 15320  16E7  0877               	movf	btemp+3,w
 15321  16E8  001E               	movwi fsr1++
 15322  16E9  319F  2732  3196   	fcall	_I2C2_MasterWrite
 15323  16EC                     l5081:	
 15324                           ;src/pba_rtc.c: 178:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 15325                           
 15326                           
 15327                           ;stkvar	_i2cWflag @ sp[(-3)+2]
 15328  16EC  3F7F               	moviw [-1]fsr1
 15329  16ED  1D03               	btfss	3,2
 15330  16EE  2EF0               	goto	u4021
 15331  16EF  2EF1               	goto	u4020
 15332  16F0                     u4021:
 15333  16F0  2EEC               	goto	l5081
 15334  16F1                     u4020:
 15335  16F1                     l5083:
 15336                           
 15337                           ;src/pba_rtc.c: 179:     I2C2_MasterRead(&data[1],1,0b01101000,&i2cWflag);
 15338                           ;stkvar	_i2cWflag @ sp[(-3)+2]
 15339  16F1  30FF               	movlw	255
 15340  16F2  0706               	addwf	6,w
 15341  16F3  00F6               	movwf	btemp+2
 15342  16F4  30FF               	movlw	255
 15343  16F5  3D07               	addwfc	7,w
 15344  16F6  00F7               	movwf	btemp+3
 15345  16F7  0876               	movf	btemp+2,w
 15346  16F8  001E               	movwi fsr1++
 15347  16F9  0877               	movf	btemp+3,w
 15348  16FA  001E               	movwi fsr1++
 15349  16FB  3068               	movlw	104
 15350  16FC  001E               	movwi fsr1++
 15351  16FD  3000               	movlw	0
 15352  16FE  001E               	movwi fsr1++
 15353  16FF  3001               	movlw	1
 15354  1700  001E               	movwi fsr1++
 15355                           
 15356                           ;stkvar	_data @ sp[(-8)+0]
 15357  1701  30F8               	movlw	248
 15358  1702  0706               	addwf	6,w
 15359  1703  00FE               	movwf	btemp+10
 15360  1704  30FF               	movlw	255
 15361  1705  3D07               	addwfc	7,w
 15362  1706  00FF               	movwf	btemp+11
 15363  1707  087E               	movf	wtemp5,w
 15364  1708  3E01               	addlw	1
 15365  1709  00FE               	movwf	wtemp5
 15366  170A  3000               	movlw	0
 15367  170B  3D7F               	addwfc	wtemp5+1,w
 15368  170C  00FF               	movwf	wtemp5+1
 15369  170D  087E               	movf	wtemp5,w
 15370  170E  001E               	movwi fsr1++
 15371  170F  087F               	movf	wtemp5+1,w
 15372  1710  001E               	movwi fsr1++
 15373  1711  319F  2758  3196   	fcall	_I2C2_MasterRead
 15374  1714                     l5085:	
 15375                           ;src/pba_rtc.c: 180:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 15376                           
 15377                           
 15378                           ;stkvar	_i2cWflag @ sp[(-3)+2]
 15379  1714  3F7F               	moviw [-1]fsr1
 15380  1715  1D03               	btfss	3,2
 15381  1716  2F18               	goto	u4031
 15382  1717  2F19               	goto	u4030
 15383  1718                     u4031:
 15384  1718  2F14               	goto	l5085
 15385  1719                     u4030:
 15386  1719                     l5087:
 15387                           
 15388                           ;src/pba_rtc.c: 181:     if((data[1]&0x20)==0)
 15389                           ;stkvar	_data @ sp[(-3)+0]
 15390  1719  3F7E               	moviw [-2]fsr1
 15391  171A  1A89               	btfsc	9,5
 15392  171B  2F1D               	goto	u4041
 15393  171C  2F1E               	goto	u4040
 15394  171D                     u4041:
 15395  171D  2F20               	goto	l5095
 15396  171E                     u4040:
 15397  171E                     l5089:
 15398                           
 15399                           ;src/pba_rtc.c: 182:         return 1;
 15400  171E  3001               	movlw	1
 15401  171F  2F21               	goto	l1021
 15402  1720                     l5095:
 15403                           
 15404                           ;src/pba_rtc.c: 184:         return 0;
 15405  1720  3000               	movlw	0
 15406  1721                     l1021:
 15407                           
 15408                           ; _RTC_IsTempConvDone: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15409  1721  317D               	addfsr 1,-3
 15410  1722  0008               	return
 15411  1723                     __end_of_RTC_IsTempConvDone:
 15412                           
 15413                           	psect	text41
 15414  152B                     __ptext41:	
 15415 ;; *************** function _RTC_GetTemp *****************
 15416 ;; Defined at:
 15417 ;;		line 192 in file "src/pba_rtc.c"
 15418 ;; Parameters:    Size  Location     Type
 15419 ;;		None
 15420 ;; Auto vars:     Size  Location     Type
 15421 ;;  i2cWflag        1  [STACK] enum E8047
 15422 ;;  data            1  [STACK] unsigned char 
 15423 ;; Return value:  Size  Location     Type
 15424 ;;                  1    wreg      char 
 15425 ;; Registers used:
 15426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+2, btemp+3, btemp+10, btemp+11, pclath
 15427 ;; Tracked objects:
 15428 ;;		On entry : 0/0
 15429 ;;		On exit  : 0/0
 15430 ;;		Unchanged: 0/0
 15431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15436 ;;Total ram usage:        0 bytes
 15437 ;; Hardware stack levels used:    1
 15438 ;; Hardware stack levels required when called:   11
 15439 ;; This function calls:
 15440 ;;		_I2C2_MasterRead
 15441 ;;		_I2C2_MasterWrite
 15442 ;; This function is called by:
 15443 ;;		_main
 15444 ;; This function uses a reentrant model
 15445 ;;
 15446                           
 15447                           
 15448                           ;psect for function _RTC_GetTemp
 15449  152B                     _RTC_GetTemp:
 15450                           
 15451                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15452  152B  3142               	addfsr 1,2
 15453  152C                     l5099:	
 15454                           ;incstack = 0
 15455                           ; Regs used in _RTC_GetTemp: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+2+btemp+3+bt
      +                          emp+10+btemp+11+pclath]
 15456                           
 15457                           
 15458                           ;src/pba_rtc.c: 193:     I2C2_MESSAGE_STATUS i2cWflag = I2C2_MESSAGE_PENDING;
 15459  152C  3002               	movlw	2
 15460                           
 15461                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15462  152D  3FFE               	movwi [-2]fsr1
 15463                           
 15464                           ;src/pba_rtc.c: 194:     uint8_t data = 0x11;
 15465  152E  3011               	movlw	17
 15466                           
 15467                           ;stkvar	_data @ sp[(-2)+1]
 15468  152F  3FFF               	movwi [-1]fsr1
 15469  1530                     l5101:
 15470                           
 15471                           ;src/pba_rtc.c: 195:     I2C2_MasterWrite(&data,1,0b01101000,&i2cWflag);
 15472                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15473  1530  30FE               	movlw	254
 15474  1531  0706               	addwf	6,w
 15475  1532  00F6               	movwf	btemp+2
 15476  1533  30FF               	movlw	255
 15477  1534  3D07               	addwfc	7,w
 15478  1535  00F7               	movwf	btemp+3
 15479  1536  0876               	movf	btemp+2,w
 15480  1537  001E               	movwi fsr1++
 15481  1538  0877               	movf	btemp+3,w
 15482  1539  001E               	movwi fsr1++
 15483  153A  3068               	movlw	104
 15484  153B  001E               	movwi fsr1++
 15485  153C  3000               	movlw	0
 15486  153D  001E               	movwi fsr1++
 15487  153E  3001               	movlw	1
 15488  153F  001E               	movwi fsr1++
 15489                           
 15490                           ;stkvar	_data @ sp[(-7)+1]
 15491  1540  30FA               	movlw	250
 15492  1541  0706               	addwf	6,w
 15493  1542  00F6               	movwf	btemp+2
 15494  1543  30FF               	movlw	255
 15495  1544  3D07               	addwfc	7,w
 15496  1545  00F7               	movwf	btemp+3
 15497  1546  0876               	movf	btemp+2,w
 15498  1547  001E               	movwi fsr1++
 15499  1548  0877               	movf	btemp+3,w
 15500  1549  001E               	movwi fsr1++
 15501  154A  319F  2732  3195   	fcall	_I2C2_MasterWrite
 15502  154D                     l5103:	
 15503                           ;src/pba_rtc.c: 196:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 15504                           
 15505                           
 15506                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15507  154D  3F7E               	moviw [-2]fsr1
 15508  154E  1D03               	btfss	3,2
 15509  154F  2D51               	goto	u4051
 15510  1550  2D52               	goto	u4050
 15511  1551                     u4051:
 15512  1551  2D4D               	goto	l5103
 15513  1552                     u4050:
 15514  1552                     l5105:
 15515                           
 15516                           ;src/pba_rtc.c: 197:     I2C2_MasterRead(&data,1,0b01101000,&i2cWflag);
 15517                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15518  1552  30FE               	movlw	254
 15519  1553  0706               	addwf	6,w
 15520  1554  00F6               	movwf	btemp+2
 15521  1555  30FF               	movlw	255
 15522  1556  3D07               	addwfc	7,w
 15523  1557  00F7               	movwf	btemp+3
 15524  1558  0876               	movf	btemp+2,w
 15525  1559  001E               	movwi fsr1++
 15526  155A  0877               	movf	btemp+3,w
 15527  155B  001E               	movwi fsr1++
 15528  155C  3068               	movlw	104
 15529  155D  001E               	movwi fsr1++
 15530  155E  3000               	movlw	0
 15531  155F  001E               	movwi fsr1++
 15532  1560  3001               	movlw	1
 15533  1561  001E               	movwi fsr1++
 15534                           
 15535                           ;stkvar	_data @ sp[(-7)+1]
 15536  1562  30FA               	movlw	250
 15537  1563  0706               	addwf	6,w
 15538  1564  00F6               	movwf	btemp+2
 15539  1565  30FF               	movlw	255
 15540  1566  3D07               	addwfc	7,w
 15541  1567  00F7               	movwf	btemp+3
 15542  1568  0876               	movf	btemp+2,w
 15543  1569  001E               	movwi fsr1++
 15544  156A  0877               	movf	btemp+3,w
 15545  156B  001E               	movwi fsr1++
 15546  156C  319F  2758  3195   	fcall	_I2C2_MasterRead
 15547  156F                     l5107:	
 15548                           ;src/pba_rtc.c: 198:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 15549                           
 15550                           
 15551                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15552  156F  3F7E               	moviw [-2]fsr1
 15553  1570  1D03               	btfss	3,2
 15554  1571  2D73               	goto	u4061
 15555  1572  2D74               	goto	u4060
 15556  1573                     u4061:
 15557  1573  2D6F               	goto	l5107
 15558  1574                     u4060:
 15559  1574                     l5109:
 15560                           
 15561                           ;src/pba_rtc.c: 199:     return data;
 15562                           ;stkvar	_data @ sp[(-2)+1]
 15563  1574  3F7F               	moviw [-1]fsr1
 15564  1575                     l1031:
 15565                           
 15566                           ; _RTC_GetTemp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 15567  1575  317E               	addfsr 1,-2
 15568  1576  0008               	return
 15569  1577                     __end_of_RTC_GetTemp:
 15570                           
 15571                           	psect	text42
 15572  15C6                     __ptext42:	
 15573 ;; *************** function _RTC_GetSeconds *****************
 15574 ;; Defined at:
 15575 ;;		line 77 in file "src/pba_rtc.c"
 15576 ;; Parameters:    Size  Location     Type
 15577 ;;		None
 15578 ;; Auto vars:     Size  Location     Type
 15579 ;;  i2cWflag        1  [STACK] enum E8047
 15580 ;;  data            1  [STACK] unsigned char 
 15581 ;; Return value:  Size  Location     Type
 15582 ;;                  1    wreg      unsigned char 
 15583 ;; Registers used:
 15584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+2, btemp+3, btemp+10, btemp+11, pclath
 15585 ;; Tracked objects:
 15586 ;;		On entry : 0/0
 15587 ;;		On exit  : 0/0
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15594 ;;Total ram usage:        0 bytes
 15595 ;; Hardware stack levels used:    1
 15596 ;; Hardware stack levels required when called:   11
 15597 ;; This function calls:
 15598 ;;		_BcdToBinary
 15599 ;;		_I2C2_MasterRead
 15600 ;;		_I2C2_MasterWrite
 15601 ;; This function is called by:
 15602 ;;		_main
 15603 ;; This function uses a reentrant model
 15604 ;;
 15605                           
 15606                           
 15607                           ;psect for function _RTC_GetSeconds
 15608  15C6                     _RTC_GetSeconds:
 15609                           
 15610                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15611  15C6  3142               	addfsr 1,2
 15612  15C7                     l5027:	
 15613                           ;incstack = 0
 15614                           ; Regs used in _RTC_GetSeconds: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+2+btemp+3
      +                          +btemp+10+btemp+11+pclath]
 15615                           
 15616                           
 15617                           ;src/pba_rtc.c: 78:     I2C2_MESSAGE_STATUS i2cWflag = I2C2_MESSAGE_PENDING;
 15618  15C7  3002               	movlw	2
 15619                           
 15620                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15621  15C8  3FFE               	movwi [-2]fsr1
 15622  15C9                     l5029:
 15623                           
 15624                           ;src/pba_rtc.c: 80:     uint8_t data = 0x00;
 15625                           ;stkvar	_data @ sp[(-2)+1]
 15626  15C9  3000               	movlw	0
 15627  15CA  3FFF               	movwi [-1]fsr1
 15628  15CB                     l5031:
 15629                           
 15630                           ;src/pba_rtc.c: 81:     I2C2_MasterWrite(&data,1,0b01101000,&i2cWflag);
 15631                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15632  15CB  30FE               	movlw	254
 15633  15CC  0706               	addwf	6,w
 15634  15CD  00F6               	movwf	btemp+2
 15635  15CE  30FF               	movlw	255
 15636  15CF  3D07               	addwfc	7,w
 15637  15D0  00F7               	movwf	btemp+3
 15638  15D1  0876               	movf	btemp+2,w
 15639  15D2  001E               	movwi fsr1++
 15640  15D3  0877               	movf	btemp+3,w
 15641  15D4  001E               	movwi fsr1++
 15642  15D5  3068               	movlw	104
 15643  15D6  001E               	movwi fsr1++
 15644  15D7  3000               	movlw	0
 15645  15D8  001E               	movwi fsr1++
 15646  15D9  3001               	movlw	1
 15647  15DA  001E               	movwi fsr1++
 15648                           
 15649                           ;stkvar	_data @ sp[(-7)+1]
 15650  15DB  30FA               	movlw	250
 15651  15DC  0706               	addwf	6,w
 15652  15DD  00F6               	movwf	btemp+2
 15653  15DE  30FF               	movlw	255
 15654  15DF  3D07               	addwfc	7,w
 15655  15E0  00F7               	movwf	btemp+3
 15656  15E1  0876               	movf	btemp+2,w
 15657  15E2  001E               	movwi fsr1++
 15658  15E3  0877               	movf	btemp+3,w
 15659  15E4  001E               	movwi fsr1++
 15660  15E5  319F  2732  3195   	fcall	_I2C2_MasterWrite
 15661  15E8                     l5033:	
 15662                           ;src/pba_rtc.c: 82:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 15663                           
 15664                           
 15665                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15666  15E8  3F7E               	moviw [-2]fsr1
 15667  15E9  1D03               	btfss	3,2
 15668  15EA  2DEC               	goto	u3971
 15669  15EB  2DED               	goto	u3970
 15670  15EC                     u3971:
 15671  15EC  2DE8               	goto	l5033
 15672  15ED                     u3970:
 15673  15ED                     l5035:
 15674                           
 15675                           ;src/pba_rtc.c: 83:     I2C2_MasterRead(&data,1,0b01101000,&i2cWflag);
 15676                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15677  15ED  30FE               	movlw	254
 15678  15EE  0706               	addwf	6,w
 15679  15EF  00F6               	movwf	btemp+2
 15680  15F0  30FF               	movlw	255
 15681  15F1  3D07               	addwfc	7,w
 15682  15F2  00F7               	movwf	btemp+3
 15683  15F3  0876               	movf	btemp+2,w
 15684  15F4  001E               	movwi fsr1++
 15685  15F5  0877               	movf	btemp+3,w
 15686  15F6  001E               	movwi fsr1++
 15687  15F7  3068               	movlw	104
 15688  15F8  001E               	movwi fsr1++
 15689  15F9  3000               	movlw	0
 15690  15FA  001E               	movwi fsr1++
 15691  15FB  3001               	movlw	1
 15692  15FC  001E               	movwi fsr1++
 15693                           
 15694                           ;stkvar	_data @ sp[(-7)+1]
 15695  15FD  30FA               	movlw	250
 15696  15FE  0706               	addwf	6,w
 15697  15FF  00F6               	movwf	btemp+2
 15698  1600  30FF               	movlw	255
 15699  1601  3D07               	addwfc	7,w
 15700  1602  00F7               	movwf	btemp+3
 15701  1603  0876               	movf	btemp+2,w
 15702  1604  001E               	movwi fsr1++
 15703  1605  0877               	movf	btemp+3,w
 15704  1606  001E               	movwi fsr1++
 15705  1607  319F  2758  3195   	fcall	_I2C2_MasterRead
 15706  160A                     l5037:	
 15707                           ;src/pba_rtc.c: 84:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 15708                           
 15709                           
 15710                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15711  160A  3F7E               	moviw [-2]fsr1
 15712  160B  1D03               	btfss	3,2
 15713  160C  2E0E               	goto	u3981
 15714  160D  2E0F               	goto	u3980
 15715  160E                     u3981:
 15716  160E  2E0A               	goto	l5037
 15717  160F                     u3980:
 15718  160F                     l5039:
 15719                           
 15720                           ;src/pba_rtc.c: 85:     return BcdToBinary(data);
 15721                           ;stkvar	_data @ sp[(-2)+1]
 15722  160F  3F7F               	moviw [-1]fsr1
 15723  1610  319C  24EF  3195   	fcall	_BcdToBinary
 15724  1613                     l959:
 15725                           
 15726                           ; _RTC_GetSeconds: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 15727  1613  317E               	addfsr 1,-2
 15728  1614  0008               	return
 15729  1615                     __end_of_RTC_GetSeconds:
 15730                           
 15731                           	psect	text43
 15732  1577                     __ptext43:	
 15733 ;; *************** function _RTC_GetMinutes *****************
 15734 ;; Defined at:
 15735 ;;		line 106 in file "src/pba_rtc.c"
 15736 ;; Parameters:    Size  Location     Type
 15737 ;;		None
 15738 ;; Auto vars:     Size  Location     Type
 15739 ;;  i2cWflag        1  [STACK] enum E8047
 15740 ;;  data            1  [STACK] unsigned char 
 15741 ;; Return value:  Size  Location     Type
 15742 ;;                  1    wreg      unsigned char 
 15743 ;; Registers used:
 15744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+2, btemp+3, btemp+10, btemp+11, pclath
 15745 ;; Tracked objects:
 15746 ;;		On entry : 0/0
 15747 ;;		On exit  : 0/0
 15748 ;;		Unchanged: 0/0
 15749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15754 ;;Total ram usage:        0 bytes
 15755 ;; Hardware stack levels used:    1
 15756 ;; Hardware stack levels required when called:   11
 15757 ;; This function calls:
 15758 ;;		_BcdToBinary
 15759 ;;		_I2C2_MasterRead
 15760 ;;		_I2C2_MasterWrite
 15761 ;; This function is called by:
 15762 ;;		_main
 15763 ;; This function uses a reentrant model
 15764 ;;
 15765                           
 15766                           
 15767                           ;psect for function _RTC_GetMinutes
 15768  1577                     _RTC_GetMinutes:
 15769                           
 15770                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15771  1577  3142               	addfsr 1,2
 15772  1578                     l5013:	
 15773                           ;incstack = 0
 15774                           ; Regs used in _RTC_GetMinutes: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+2+btemp+3
      +                          +btemp+10+btemp+11+pclath]
 15775                           
 15776                           
 15777                           ;src/pba_rtc.c: 107:     I2C2_MESSAGE_STATUS i2cWflag = I2C2_MESSAGE_PENDING;
 15778  1578  3002               	movlw	2
 15779                           
 15780                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15781  1579  3FFE               	movwi [-2]fsr1
 15782                           
 15783                           ;src/pba_rtc.c: 109:  uint8_t data = 0x01;
 15784  157A  3001               	movlw	1
 15785                           
 15786                           ;stkvar	_data @ sp[(-2)+1]
 15787  157B  3FFF               	movwi [-1]fsr1
 15788  157C                     l5015:
 15789                           
 15790                           ;src/pba_rtc.c: 110:     I2C2_MasterWrite(&data,1,0b01101000,&i2cWflag);
 15791                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15792  157C  30FE               	movlw	254
 15793  157D  0706               	addwf	6,w
 15794  157E  00F6               	movwf	btemp+2
 15795  157F  30FF               	movlw	255
 15796  1580  3D07               	addwfc	7,w
 15797  1581  00F7               	movwf	btemp+3
 15798  1582  0876               	movf	btemp+2,w
 15799  1583  001E               	movwi fsr1++
 15800  1584  0877               	movf	btemp+3,w
 15801  1585  001E               	movwi fsr1++
 15802  1586  3068               	movlw	104
 15803  1587  001E               	movwi fsr1++
 15804  1588  3000               	movlw	0
 15805  1589  001E               	movwi fsr1++
 15806  158A  3001               	movlw	1
 15807  158B  001E               	movwi fsr1++
 15808                           
 15809                           ;stkvar	_data @ sp[(-7)+1]
 15810  158C  30FA               	movlw	250
 15811  158D  0706               	addwf	6,w
 15812  158E  00F6               	movwf	btemp+2
 15813  158F  30FF               	movlw	255
 15814  1590  3D07               	addwfc	7,w
 15815  1591  00F7               	movwf	btemp+3
 15816  1592  0876               	movf	btemp+2,w
 15817  1593  001E               	movwi fsr1++
 15818  1594  0877               	movf	btemp+3,w
 15819  1595  001E               	movwi fsr1++
 15820  1596  319F  2732  3195   	fcall	_I2C2_MasterWrite
 15821  1599                     l5017:	
 15822                           ;src/pba_rtc.c: 111:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 15823                           
 15824                           
 15825                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15826  1599  3F7E               	moviw [-2]fsr1
 15827  159A  1D03               	btfss	3,2
 15828  159B  2D9D               	goto	u3951
 15829  159C  2D9E               	goto	u3950
 15830  159D                     u3951:
 15831  159D  2D99               	goto	l5017
 15832  159E                     u3950:
 15833  159E                     l5019:
 15834                           
 15835                           ;src/pba_rtc.c: 112:     I2C2_MasterRead(&data,1,0b01101000,&i2cWflag);
 15836                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15837  159E  30FE               	movlw	254
 15838  159F  0706               	addwf	6,w
 15839  15A0  00F6               	movwf	btemp+2
 15840  15A1  30FF               	movlw	255
 15841  15A2  3D07               	addwfc	7,w
 15842  15A3  00F7               	movwf	btemp+3
 15843  15A4  0876               	movf	btemp+2,w
 15844  15A5  001E               	movwi fsr1++
 15845  15A6  0877               	movf	btemp+3,w
 15846  15A7  001E               	movwi fsr1++
 15847  15A8  3068               	movlw	104
 15848  15A9  001E               	movwi fsr1++
 15849  15AA  3000               	movlw	0
 15850  15AB  001E               	movwi fsr1++
 15851  15AC  3001               	movlw	1
 15852  15AD  001E               	movwi fsr1++
 15853                           
 15854                           ;stkvar	_data @ sp[(-7)+1]
 15855  15AE  30FA               	movlw	250
 15856  15AF  0706               	addwf	6,w
 15857  15B0  00F6               	movwf	btemp+2
 15858  15B1  30FF               	movlw	255
 15859  15B2  3D07               	addwfc	7,w
 15860  15B3  00F7               	movwf	btemp+3
 15861  15B4  0876               	movf	btemp+2,w
 15862  15B5  001E               	movwi fsr1++
 15863  15B6  0877               	movf	btemp+3,w
 15864  15B7  001E               	movwi fsr1++
 15865  15B8  319F  2758  3195   	fcall	_I2C2_MasterRead
 15866  15BB                     l5021:	
 15867                           ;src/pba_rtc.c: 113:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 15868                           
 15869                           
 15870                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15871  15BB  3F7E               	moviw [-2]fsr1
 15872  15BC  1D03               	btfss	3,2
 15873  15BD  2DBF               	goto	u3961
 15874  15BE  2DC0               	goto	u3960
 15875  15BF                     u3961:
 15876  15BF  2DBB               	goto	l5021
 15877  15C0                     u3960:
 15878  15C0                     l5023:
 15879                           
 15880                           ;src/pba_rtc.c: 114:     return BcdToBinary(data);
 15881                           ;stkvar	_data @ sp[(-2)+1]
 15882  15C0  3F7F               	moviw [-1]fsr1
 15883  15C1  319C  24EF  3195   	fcall	_BcdToBinary
 15884  15C4                     l976:
 15885                           
 15886                           ; _RTC_GetMinutes: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 15887  15C4  317E               	addfsr 1,-2
 15888  15C5  0008               	return
 15889  15C6                     __end_of_RTC_GetMinutes:
 15890                           
 15891                           	psect	text44
 15892  1615                     __ptext44:	
 15893 ;; *************** function _RTC_GetHours *****************
 15894 ;; Defined at:
 15895 ;;		line 135 in file "src/pba_rtc.c"
 15896 ;; Parameters:    Size  Location     Type
 15897 ;;		None
 15898 ;; Auto vars:     Size  Location     Type
 15899 ;;  i2cWflag        1  [STACK] enum E8047
 15900 ;;  data            1  [STACK] unsigned char 
 15901 ;; Return value:  Size  Location     Type
 15902 ;;                  1    wreg      unsigned char 
 15903 ;; Registers used:
 15904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+2, btemp+3, btemp+10, btemp+11, pclath
 15905 ;; Tracked objects:
 15906 ;;		On entry : 0/0
 15907 ;;		On exit  : 0/0
 15908 ;;		Unchanged: 0/0
 15909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15914 ;;Total ram usage:        0 bytes
 15915 ;; Hardware stack levels used:    1
 15916 ;; Hardware stack levels required when called:   11
 15917 ;; This function calls:
 15918 ;;		_BcdToBinary
 15919 ;;		_I2C2_MasterRead
 15920 ;;		_I2C2_MasterWrite
 15921 ;; This function is called by:
 15922 ;;		_main
 15923 ;; This function uses a reentrant model
 15924 ;;
 15925                           
 15926                           
 15927                           ;psect for function _RTC_GetHours
 15928  1615                     _RTC_GetHours:
 15929                           
 15930                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15931  1615  3142               	addfsr 1,2
 15932  1616                     l4999:	
 15933                           ;incstack = 0
 15934                           ; Regs used in _RTC_GetHours: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+2+btemp+3+b
      +                          temp+10+btemp+11+pclath]
 15935                           
 15936                           
 15937                           ;src/pba_rtc.c: 136:     I2C2_MESSAGE_STATUS i2cWflag = I2C2_MESSAGE_PENDING;
 15938  1616  3002               	movlw	2
 15939                           
 15940                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15941  1617  3FFE               	movwi [-2]fsr1
 15942                           
 15943                           ;src/pba_rtc.c: 138:  uint8_t data = 0x02;
 15944  1618  3002               	movlw	2
 15945                           
 15946                           ;stkvar	_data @ sp[(-2)+1]
 15947  1619  3FFF               	movwi [-1]fsr1
 15948  161A                     l5001:
 15949                           
 15950                           ;src/pba_rtc.c: 139:     I2C2_MasterWrite(&data,1,0b01101000,&i2cWflag);
 15951                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15952  161A  30FE               	movlw	254
 15953  161B  0706               	addwf	6,w
 15954  161C  00F6               	movwf	btemp+2
 15955  161D  30FF               	movlw	255
 15956  161E  3D07               	addwfc	7,w
 15957  161F  00F7               	movwf	btemp+3
 15958  1620  0876               	movf	btemp+2,w
 15959  1621  001E               	movwi fsr1++
 15960  1622  0877               	movf	btemp+3,w
 15961  1623  001E               	movwi fsr1++
 15962  1624  3068               	movlw	104
 15963  1625  001E               	movwi fsr1++
 15964  1626  3000               	movlw	0
 15965  1627  001E               	movwi fsr1++
 15966  1628  3001               	movlw	1
 15967  1629  001E               	movwi fsr1++
 15968                           
 15969                           ;stkvar	_data @ sp[(-7)+1]
 15970  162A  30FA               	movlw	250
 15971  162B  0706               	addwf	6,w
 15972  162C  00F6               	movwf	btemp+2
 15973  162D  30FF               	movlw	255
 15974  162E  3D07               	addwfc	7,w
 15975  162F  00F7               	movwf	btemp+3
 15976  1630  0876               	movf	btemp+2,w
 15977  1631  001E               	movwi fsr1++
 15978  1632  0877               	movf	btemp+3,w
 15979  1633  001E               	movwi fsr1++
 15980  1634  319F  2732  3196   	fcall	_I2C2_MasterWrite
 15981  1637                     l5003:	
 15982                           ;src/pba_rtc.c: 140:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 15983                           
 15984                           
 15985                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15986  1637  3F7E               	moviw [-2]fsr1
 15987  1638  1D03               	btfss	3,2
 15988  1639  2E3B               	goto	u3931
 15989  163A  2E3C               	goto	u3930
 15990  163B                     u3931:
 15991  163B  2E37               	goto	l5003
 15992  163C                     u3930:
 15993  163C                     l5005:
 15994                           
 15995                           ;src/pba_rtc.c: 141:     I2C2_MasterRead(&data,1,0b01101000,&i2cWflag);
 15996                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 15997  163C  30FE               	movlw	254
 15998  163D  0706               	addwf	6,w
 15999  163E  00F6               	movwf	btemp+2
 16000  163F  30FF               	movlw	255
 16001  1640  3D07               	addwfc	7,w
 16002  1641  00F7               	movwf	btemp+3
 16003  1642  0876               	movf	btemp+2,w
 16004  1643  001E               	movwi fsr1++
 16005  1644  0877               	movf	btemp+3,w
 16006  1645  001E               	movwi fsr1++
 16007  1646  3068               	movlw	104
 16008  1647  001E               	movwi fsr1++
 16009  1648  3000               	movlw	0
 16010  1649  001E               	movwi fsr1++
 16011  164A  3001               	movlw	1
 16012  164B  001E               	movwi fsr1++
 16013                           
 16014                           ;stkvar	_data @ sp[(-7)+1]
 16015  164C  30FA               	movlw	250
 16016  164D  0706               	addwf	6,w
 16017  164E  00F6               	movwf	btemp+2
 16018  164F  30FF               	movlw	255
 16019  1650  3D07               	addwfc	7,w
 16020  1651  00F7               	movwf	btemp+3
 16021  1652  0876               	movf	btemp+2,w
 16022  1653  001E               	movwi fsr1++
 16023  1654  0877               	movf	btemp+3,w
 16024  1655  001E               	movwi fsr1++
 16025  1656  319F  2758  3196   	fcall	_I2C2_MasterRead
 16026  1659                     l5007:	
 16027                           ;src/pba_rtc.c: 142:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 16028                           
 16029                           
 16030                           ;stkvar	_i2cWflag @ sp[(-2)+0]
 16031  1659  3F7E               	moviw [-2]fsr1
 16032  165A  1D03               	btfss	3,2
 16033  165B  2E5D               	goto	u3941
 16034  165C  2E5E               	goto	u3940
 16035  165D                     u3941:
 16036  165D  2E59               	goto	l5007
 16037  165E                     u3940:
 16038  165E                     l5009:
 16039                           
 16040                           ;src/pba_rtc.c: 143:     return BcdToBinary(data&0b00111111);
 16041                           ;stkvar	_data @ sp[(-2)+1]
 16042  165E  3F7F               	moviw [-1]fsr1
 16043  165F  393F               	andlw	63
 16044  1660  319C  24EF  3196   	fcall	_BcdToBinary
 16045  1663                     l993:
 16046                           
 16047                           ; _RTC_GetHours: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 16048  1663  317E               	addfsr 1,-2
 16049  1664  0008               	return
 16050  1665                     __end_of_RTC_GetHours:
 16051                           
 16052                           	psect	text45
 16053  1F58                     __ptext45:	
 16054 ;; *************** function _I2C2_MasterRead *****************
 16055 ;; Defined at:
 16056 ;;		line 621 in file "mcc_generated_files/i2c2.c"
 16057 ;; Parameters:    Size  Location     Type
 16058 ;;  pdata           2  [STACK] PTR unsigned char 
 16059 ;;		 -> data(1), data(2), data(1), data(1), 
 16060 ;;		 -> data(1), 
 16061 ;;  length          1  [STACK] unsigned char 
 16062 ;;  address         2  [STACK] unsigned short 
 16063 ;;  pflag           2  [STACK] PTR enum E8045
 16064 ;;		 -> i2cWflag(1), i2cWflag(1), i2cWflag(1), i2cWflag(1), 
 16065 ;;		 -> i2cWflag(1), 
 16066 ;; Auto vars:     Size  Location     Type
 16067 ;;		None
 16068 ;; Return value:  Size  Location     Type
 16069 ;;                  1    wreg      void 
 16070 ;; Registers used:
 16071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11, pclath
 16072 ;; Tracked objects:
 16073 ;;		On entry : 0/0
 16074 ;;		On exit  : 31/0
 16075 ;;		Unchanged: 0/0
 16076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16081 ;;Total ram usage:        0 bytes
 16082 ;; Hardware stack levels used:    1
 16083 ;; Hardware stack levels required when called:   10
 16084 ;; This function calls:
 16085 ;;		_I2C2_MasterReadTRBBuild
 16086 ;;		_I2C2_MasterTRBInsert
 16087 ;; This function is called by:
 16088 ;;		_RTC_GetSeconds
 16089 ;;		_RTC_GetMinutes
 16090 ;;		_RTC_GetHours
 16091 ;;		_RTC_IsTempConvDone
 16092 ;;		_RTC_GetTemp
 16093 ;; This function uses a reentrant model
 16094 ;;
 16095                           
 16096                           
 16097                           ;psect for function _I2C2_MasterRead
 16098  1F58                     _I2C2_MasterRead:
 16099  1F58                     l4507:	
 16100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16101                           ;incstack = 0
 16102                           ; Regs used in _I2C2_MasterRead: [wreg-fsr0h+fsr1l+fsr1h+status,2+status,0+btemp+10+btem
      +                          p+11+pclath]
 16103                           
 16104                           
 16105                           ;mcc_generated_files/i2c2.c: 622:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c2.c: 623:                                 uint8_t length,;mcc_generated
      +                          _files/i2c2.c: 624:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c2.c: 625:                                 I2C2_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c2.c: 626: {;mcc_generated_files/i2c2.c: 627:     static I2C2_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c2.c: 631:     if (i2c2_object.trStatus.s.full !
      +                          = 1)
 16106  1F58  0140               	movlb	0	; select bank0
 16107  1F59  1832               	btfsc	_i2c2_object+2,0
 16108  1F5A  2F5C               	goto	u3421
 16109  1F5B  2F5D               	goto	u3420
 16110  1F5C                     u3421:
 16111  1F5C  2F76               	goto	l4513
 16112  1F5D                     u3420:
 16113  1F5D                     l4509:
 16114                           
 16115                           ;mcc_generated_files/i2c2.c: 632:     {;mcc_generated_files/i2c2.c: 633:         I2C2_Ma
      +                          sterReadTRBBuild(&trBlock, pdata, length, address);
 16116                           ;stkvar	_address @ sp[(0)+-5]
 16117  1F5D  3F7B               	moviw [-5]fsr1
 16118  1F5E  001E               	movwi fsr1++
 16119  1F5F  3F7B               	moviw [-5]fsr1
 16120  1F60  001E               	movwi fsr1++
 16121                           
 16122                           ;stkvar	_length @ sp[(-2)+-3]
 16123  1F61  3F7B               	moviw [-5]fsr1
 16124  1F62  001E               	movwi fsr1++
 16125                           
 16126                           ;stkvar	_pdata @ sp[(-3)+-2]
 16127  1F63  3F7B               	moviw [-5]fsr1
 16128  1F64  001E               	movwi fsr1++
 16129  1F65  3F7B               	moviw [-5]fsr1
 16130  1F66  001E               	movwi fsr1++
 16131  1F67  304E               	movlw	(low (I2C2_MasterRead@trBlock| 0))& (0+255)
 16132  1F68  319F  277E  319F   	fcall	_I2C2_MasterReadTRBBuild
 16133  1F6B                     l4511:
 16134                           
 16135                           ;mcc_generated_files/i2c2.c: 634:         I2C2_MasterTRBInsert(1, &trBlock, pflag);
 16136                           ;stkvar	_pflag @ sp[(0)+-7]
 16137  1F6B  3F79               	moviw [-7]fsr1
 16138  1F6C  001E               	movwi fsr1++
 16139  1F6D  3F79               	moviw [-7]fsr1
 16140  1F6E  001E               	movwi fsr1++
 16141  1F6F  304E               	movlw	(low (I2C2_MasterRead@trBlock| 0))& (0+255)
 16142  1F70  001E               	movwi fsr1++
 16143  1F71  3001               	movlw	1
 16144  1F72  3194  24E2  319F   	fcall	_I2C2_MasterTRBInsert
 16145                           
 16146                           ;mcc_generated_files/i2c2.c: 635:     }
 16147  1F75  2F7C               	goto	l432
 16148  1F76                     l4513:
 16149                           
 16150                           ;mcc_generated_files/i2c2.c: 637:     {;mcc_generated_files/i2c2.c: 638:         *pflag 
      +                          = I2C2_MESSAGE_FAIL;
 16151                           ;stkvar	_pflag @ sp[(0)+-7]
 16152  1F76  3F79               	moviw [-7]fsr1
 16153  1F77  0084               	movwf	4
 16154  1F78  3F7A               	moviw [-6]fsr1
 16155  1F79  0085               	movwf	5
 16156  1F7A  0180               	clrf	0
 16157  1F7B  0A80               	incf	0,f
 16158  1F7C                     l432:
 16159                           
 16160                           ; _I2C2_MasterRead: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
 16161  1F7C  3179               	addfsr 1,-7
 16162  1F7D  0008               	return
 16163  1F7E                     __end_of_I2C2_MasterRead:
 16164                           
 16165                           	psect	text46
 16166  1F7E                     __ptext46:	
 16167 ;; *************** function _I2C2_MasterReadTRBBuild *****************
 16168 ;; Defined at:
 16169 ;;		line 708 in file "mcc_generated_files/i2c2.c"
 16170 ;; Parameters:    Size  Location     Type
 16171 ;;  ptrb            1    wreg     PTR struct .
 16172 ;;		 -> I2C2_MasterRead@trBlock(5), 
 16173 ;;  pdata           2  [STACK] PTR unsigned char 
 16174 ;;		 -> data(1), data(2), data(1), data(1), 
 16175 ;;		 -> data(1), 
 16176 ;;  length          1  [STACK] unsigned char 
 16177 ;;  address         2  [STACK] unsigned short 
 16178 ;; Auto vars:     Size  Location     Type
 16179 ;;  ptrb            1  [STACK] PTR struct .
 16180 ;;		 -> I2C2_MasterRead@trBlock(5), 
 16181 ;; Return value:  Size  Location     Type
 16182 ;;                  1    wreg      void 
 16183 ;; Registers used:
 16184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
 16185 ;; Tracked objects:
 16186 ;;		On entry : 3F/0
 16187 ;;		On exit  : 0/0
 16188 ;;		Unchanged: 0/0
 16189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16194 ;;Total ram usage:        0 bytes
 16195 ;; Hardware stack levels used:    1
 16196 ;; Hardware stack levels required when called:    8
 16197 ;; This function calls:
 16198 ;;		Nothing
 16199 ;; This function is called by:
 16200 ;;		_I2C2_MasterRead
 16201 ;; This function uses a reentrant model
 16202 ;;
 16203                           
 16204                           
 16205                           ;psect for function _I2C2_MasterReadTRBBuild
 16206  1F7E                     _I2C2_MasterReadTRBBuild:
 16207                           
 16208                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16209  1F7E  3141               	addfsr 1,1
 16210                           
 16211                           ;incstack = 0
 16212                           ; Regs used in _I2C2_MasterReadTRBBuild: [wreg-fsr0h+fsr1l+fsr1h+status,2+status,0+btemp
      +                          +10+btemp+11]
 16213                           ;_ptrb stored from wreg
 16214                           ;stkvar	_ptrb @ sp[(-1)+0]
 16215  1F7F  3FFF               	movwi [-1]fsr1
 16216  1F80                     l4297:
 16217                           
 16218                           ;mcc_generated_files/i2c2.c: 709:                                 I2C2_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c2.c: 710:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c2.c: 711:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c2.c: 712:                                 uint16_t address);mcc
      +                          _generated_files/i2c2.c: 713: {;mcc_generated_files/i2c2.c: 714:     ptrb->address = add
      +                          ress << 1;
 16219                           ;stkvar	_address @ sp[(-1)+-5]
 16220  1F80  3F7A               	moviw [-6]fsr1
 16221  1F81  00FE               	movwf	btemp+10
 16222  1F82  3F7B               	moviw [-5]fsr1
 16223  1F83  00FF               	movwf	btemp+11
 16224  1F84  35FE               	lslf	btemp+10,f
 16225  1F85  0DFF               	rlf	btemp+11,f
 16226                           
 16227                           ;stkvar	_ptrb @ sp[(-1)+0]
 16228  1F86  3F7F               	moviw [-1]fsr1
 16229  1F87  0084               	movwf	4
 16230  1F88  0185               	clrf	5
 16231  1F89  087E               	movf	wtemp5,w
 16232  1F8A  3F80               	movwi [0]fsr0
 16233  1F8B  087F               	movf	wtemp5+1,w
 16234  1F8C  3F81               	movwi [1]fsr0
 16235  1F8D                     l4299:
 16236                           
 16237                           ;mcc_generated_files/i2c2.c: 716:     ptrb->address |= 0x01;
 16238                           ;stkvar	_ptrb @ sp[(-1)+0]
 16239  1F8D  3F7F               	moviw [-1]fsr1
 16240  1F8E  0084               	movwf	4
 16241  1F8F  0185               	clrf	5
 16242  1F90  3001               	movlw	1
 16243  1F91  0480               	iorwf	0,f
 16244  1F92  3101               	addfsr 0,1
 16245  1F93  3000               	movlw	0
 16246  1F94  0480               	iorwf	0,f
 16247  1F95                     l4301:
 16248                           
 16249                           ;mcc_generated_files/i2c2.c: 717:     ptrb->length = length;
 16250                           ;stkvar	_length @ sp[(-1)+-3]
 16251                           ;stkvar	_ptrb @ sp[(-1)+0]
 16252  1F95  3F7F               	moviw [-1]fsr1
 16253  1F96  00FF               	movwf	btemp+11
 16254  1F97  087F               	movf	btemp+11,w
 16255  1F98  3E02               	addlw	2
 16256  1F99  0084               	movwf	4
 16257  1F9A  0185               	clrf	5
 16258  1F9B  3F7C               	moviw [-4]fsr1
 16259  1F9C  0080               	movwf	0
 16260  1F9D                     l4303:
 16261                           
 16262                           ;mcc_generated_files/i2c2.c: 718:     ptrb->pbuffer = pdata;
 16263                           ;stkvar	_pdata @ sp[(-1)+-2]
 16264                           ;stkvar	_ptrb @ sp[(-1)+0]
 16265  1F9D  3F7F               	moviw [-1]fsr1
 16266  1F9E  00FF               	movwf	btemp+11
 16267  1F9F  087F               	movf	btemp+11,w
 16268  1FA0  3E03               	addlw	3
 16269  1FA1  0084               	movwf	4
 16270  1FA2  0185               	clrf	5
 16271  1FA3  3F7D               	moviw [-3]fsr1
 16272  1FA4  3F80               	movwi [0]fsr0
 16273  1FA5  3F7E               	moviw [-2]fsr1
 16274  1FA6  3F81               	movwi [1]fsr0
 16275  1FA7                     l449:
 16276                           
 16277                           ; _I2C2_MasterReadTRBBuild: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 5, argsize = 5, vargsize = 0
 16278  1FA7  317A               	addfsr 1,-6
 16279  1FA8  0008               	return
 16280  1FA9                     __end_of_I2C2_MasterReadTRBBuild:
 16281                           
 16282                           	psect	text47
 16283  1CEF                     __ptext47:	
 16284 ;; *************** function _BcdToBinary *****************
 16285 ;; Defined at:
 16286 ;;		line 208 in file "src/pba_rtc.c"
 16287 ;; Parameters:    Size  Location     Type
 16288 ;;  numberBCD       1    wreg     unsigned char 
 16289 ;; Auto vars:     Size  Location     Type
 16290 ;;  numberBCD       1  [STACK] unsigned char 
 16291 ;;  einer           1  [STACK] unsigned char 
 16292 ;;  zehner          1  [STACK] unsigned char 
 16293 ;; Return value:  Size  Location     Type
 16294 ;;                  1    wreg      unsigned char 
 16295 ;; Registers used:
 16296 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11, pclath
 16297 ;; Tracked objects:
 16298 ;;		On entry : 0/0
 16299 ;;		On exit  : 0/0
 16300 ;;		Unchanged: 0/0
 16301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16306 ;;Total ram usage:        0 bytes
 16307 ;; Hardware stack levels used:    1
 16308 ;; Hardware stack levels required when called:    9
 16309 ;; This function calls:
 16310 ;;		___bmul
 16311 ;; This function is called by:
 16312 ;;		_RTC_GetSeconds
 16313 ;;		_RTC_GetMinutes
 16314 ;;		_RTC_GetHours
 16315 ;; This function uses a reentrant model
 16316 ;;
 16317                           
 16318                           
 16319                           ;psect for function _BcdToBinary
 16320  1CEF                     _BcdToBinary:
 16321                           
 16322                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16323  1CEF  3143               	addfsr 1,3
 16324                           
 16325                           ;incstack = 0
 16326                           ; Regs used in _BcdToBinary: [wreg+fsr1l+fsr1h+status,2-btemp+0+btemp+11+pclath]
 16327                           ;_numberBCD stored from wreg
 16328                           ;stkvar	_numberBCD @ sp[(-3)+0]
 16329  1CF0  3FFD               	movwi [-3]fsr1
 16330  1CF1                     l4679:
 16331                           
 16332                           ;src/pba_rtc.c: 209:     uint8_t zehner = (numberBCD >> 4) & 0b00001111;
 16333                           ;stkvar	_numberBCD @ sp[(-3)+0]
 16334  1CF1  3F7D               	moviw [-3]fsr1
 16335  1CF2  0E89               	swapf	9,f
 16336  1CF3  390F               	andlw	15
 16337  1CF4  390F               	andlw	15
 16338                           
 16339                           ;stkvar	_zehner @ sp[(-3)+2]
 16340  1CF5  3FFF               	movwi [-1]fsr1
 16341                           
 16342                           ;src/pba_rtc.c: 210:     uint8_t einer = numberBCD & 0b00001111;
 16343                           ;stkvar	_numberBCD @ sp[(-3)+0]
 16344  1CF6  3F7D               	moviw [-3]fsr1
 16345  1CF7  390F               	andlw	15
 16346                           
 16347                           ;stkvar	_einer @ sp[(-3)+1]
 16348  1CF8  3FFE               	movwi [-2]fsr1
 16349  1CF9                     l4681:
 16350                           
 16351                           ;src/pba_rtc.c: 211:     return (einer + (zehner*10));
 16352                           ;stkvar	_einer @ sp[(-3)+1]
 16353  1CF9  300A               	movlw	10
 16354  1CFA  001E               	movwi fsr1++
 16355                           
 16356                           ;stkvar	_zehner @ sp[(-4)+2]
 16357  1CFB  3F7E               	moviw [-2]fsr1
 16358  1CFC  319E  2610  319C   	fcall	___bmul
 16359  1CFF  00F4               	movwf	btemp
 16360  1D00  3F7E               	moviw [-2]fsr1
 16361  1D01  0774               	addwf	btemp,w
 16362  1D02                     l1034:
 16363                           
 16364                           ; _BcdToBinary: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 16365  1D02  317D               	addfsr 1,-3
 16366  1D03  0008               	return
 16367  1D04                     __end_of_BcdToBinary:
 16368                           
 16369                           	psect	text48
 16370  1E10                     __ptext48:	
 16371 ;; *************** function ___bmul *****************
 16372 ;; Defined at:
 16373 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul8.c"
 16374 ;; Parameters:    Size  Location     Type
 16375 ;;  multiplier      1    wreg     unsigned char 
 16376 ;;  multiplicand    1  [STACK] unsigned char 
 16377 ;; Auto vars:     Size  Location     Type
 16378 ;;  multiplier      1  [STACK] unsigned char 
 16379 ;;  product         1  [STACK] unsigned char 
 16380 ;; Return value:  Size  Location     Type
 16381 ;;                  1    wreg      unsigned char 
 16382 ;; Registers used:
 16383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11
 16384 ;; Tracked objects:
 16385 ;;		On entry : 0/0
 16386 ;;		On exit  : 0/0
 16387 ;;		Unchanged: 0/0
 16388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16393 ;;Total ram usage:        0 bytes
 16394 ;; Hardware stack levels used:    1
 16395 ;; Hardware stack levels required when called:    8
 16396 ;; This function calls:
 16397 ;;		Nothing
 16398 ;; This function is called by:
 16399 ;;		_BcdToBinary
 16400 ;;		_SYSTICK_TimerRun
 16401 ;;		_SYSTICK_TimerLoad
 16402 ;;		_SYSTICK_TimerStop
 16403 ;;		_SYSTICK_Timeout
 16404 ;;		_SYSTICK_AddTimeoutHandler
 16405 ;;		_SYSTICK_Handler
 16406 ;; This function uses a reentrant model
 16407 ;;
 16408                           
 16409                           
 16410                           ;psect for function ___bmul
 16411  1E10                     ___bmul:
 16412                           
 16413                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16414  1E10  3142               	addfsr 1,2
 16415                           
 16416                           ;incstack = 0
 16417 ;; hardware stack exceeded
 16418                           ; Regs used in ___bmul: [wreg+fsr1l+fsr1h+status,2-btemp+0+btemp+11]
 16419                           ;_multiplier stored from wreg
 16420                           ;stkvar	_multiplier @ sp[(-2)+0]
 16421  1E11  3FFE               	movwi [-2]fsr1
 16422  1E12                     l3833:
 16423                           
 16424                           ;stkvar	_product @ sp[(-2)+1]
 16425  1E12  3000               	movlw	0
 16426  1E13  3FFF               	movwi [-1]fsr1
 16427  1E14                     l1184:
 16428                           
 16429                           ;stkvar	_multiplier @ sp[(-2)+0]
 16430  1E14  3F7E               	moviw [-2]fsr1
 16431  1E15  1C09               	btfss	9,0
 16432  1E16  2E18               	goto	u2401
 16433  1E17  2E19               	goto	u2400
 16434  1E18                     u2401:
 16435  1E18  2E1E               	goto	l3837
 16436  1E19                     u2400:
 16437  1E19                     l3835:
 16438                           
 16439                           ;stkvar	_multiplicand @ sp[(-2)+-1]
 16440  1E19  3F7D               	moviw [-3]fsr1
 16441  1E1A  00FF               	movwf	btemp+11
 16442                           
 16443                           ;stkvar	_product @ sp[(-2)+1]
 16444  1E1B  3F7F               	moviw [-1]fsr1
 16445  1E1C  077F               	addwf	btemp+11,w
 16446  1E1D  3FFF               	movwi [-1]fsr1
 16447  1E1E                     l3837:
 16448                           
 16449                           ;stkvar	_multiplicand @ sp[(-2)+-1]
 16450  1E1E  3F7D               	moviw [-3]fsr1
 16451  1E1F  3589               	lslf	9,f
 16452  1E20  3FFD               	movwi [-3]fsr1
 16453  1E21                     l3839:
 16454                           
 16455                           ;stkvar	_multiplier @ sp[(-2)+0]
 16456  1E21  3F7E               	moviw [-2]fsr1
 16457  1E22  3689               	lsrf	9,f
 16458  1E23  3FFE               	movwi [-2]fsr1
 16459  1E24                     l3841:
 16460                           
 16461                           ;stkvar	_multiplier @ sp[(-2)+0]
 16462  1E24  3F7E               	moviw [-2]fsr1
 16463  1E25  1D03               	btfss	3,2
 16464  1E26  2E28               	goto	u2411
 16465  1E27  2E29               	goto	u2410
 16466  1E28                     u2411:
 16467  1E28  2E14               	goto	l1184
 16468  1E29                     u2410:
 16469  1E29                     l3843:
 16470                           
 16471                           ;stkvar	_product @ sp[(-2)+1]
 16472  1E29  3F7F               	moviw [-1]fsr1
 16473  1E2A                     l1187:
 16474                           
 16475                           ; ___bmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsiz
      +                          e = 1, vargsize = 0
 16476  1E2A  317D               	addfsr 1,-3
 16477  1E2B  0008               	return
 16478  1E2C                     __end_of___bmul:
 16479                           
 16480                           	psect	text49
 16481  11B2                     __ptext49:	
 16482 ;; *************** function _RTC_ConvertTemp *****************
 16483 ;; Defined at:
 16484 ;;		line 163 in file "src/pba_rtc.c"
 16485 ;; Parameters:    Size  Location     Type
 16486 ;;		None
 16487 ;; Auto vars:     Size  Location     Type
 16488 ;;  data            2  [STACK] unsigned char [2]
 16489 ;;  i2cWflag        1  [STACK] enum E8047
 16490 ;; Return value:  Size  Location     Type
 16491 ;;                  1    wreg      void 
 16492 ;; Registers used:
 16493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+2, btemp+3, btemp+10, btemp+11, pclath
 16494 ;; Tracked objects:
 16495 ;;		On entry : 0/0
 16496 ;;		On exit  : 0/0
 16497 ;;		Unchanged: 0/0
 16498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16503 ;;Total ram usage:        0 bytes
 16504 ;; Hardware stack levels used:    1
 16505 ;; Hardware stack levels required when called:   11
 16506 ;; This function calls:
 16507 ;;		_I2C2_MasterWrite
 16508 ;; This function is called by:
 16509 ;;		_main
 16510 ;; This function uses a reentrant model
 16511 ;;
 16512                           
 16513                           
 16514                           ;psect for function _RTC_ConvertTemp
 16515  11B2                     _RTC_ConvertTemp:
 16516                           
 16517                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16518  11B2  3143               	addfsr 1,3
 16519  11B3                     l5067:	
 16520                           ;incstack = 0
 16521                           ; Regs used in _RTC_ConvertTemp: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+2+btemp+
      +                          3+btemp+10+btemp+11+pclath]
 16522                           
 16523                           
 16524                           ;src/pba_rtc.c: 164:     I2C2_MESSAGE_STATUS i2cWflag = I2C2_MESSAGE_PENDING;
 16525  11B3  3002               	movlw	2
 16526                           
 16527                           ;stkvar	_i2cWflag @ sp[(-3)+2]
 16528  11B4  3FFF               	movwi [-1]fsr1
 16529  11B5                     l5069:
 16530                           
 16531                           ;src/pba_rtc.c: 165:     uint8_t data[2] = {0x0E,0x20};
 16532  11B5  0140               	movlb	0	; select bank0
 16533  11B6  0861               	movf	RTC_ConvertTemp@F8244+1,w
 16534  11B7  00FF               	movwf	btemp+11
 16535  11B8  0860               	movf	RTC_ConvertTemp@F8244,w
 16536  11B9  00FE               	movwf	btemp+10
 16537                           
 16538                           ;stkvar	_data @ sp[(-3)+0]
 16539  11BA  087E               	movf	btemp+10,w
 16540  11BB  3FFD               	movwi [-3]fsr1
 16541  11BC  087F               	movf	btemp+11,w
 16542  11BD  3FFE               	movwi [-2]fsr1
 16543  11BE                     l5071:
 16544                           
 16545                           ;src/pba_rtc.c: 166:     I2C2_MasterWrite(data,2,0b01101000,&i2cWflag);
 16546                           ;stkvar	_i2cWflag @ sp[(-3)+2]
 16547  11BE  30FF               	movlw	255
 16548  11BF  0706               	addwf	6,w
 16549  11C0  00F6               	movwf	btemp+2
 16550  11C1  30FF               	movlw	255
 16551  11C2  3D07               	addwfc	7,w
 16552  11C3  00F7               	movwf	btemp+3
 16553  11C4  0876               	movf	btemp+2,w
 16554  11C5  001E               	movwi fsr1++
 16555  11C6  0877               	movf	btemp+3,w
 16556  11C7  001E               	movwi fsr1++
 16557  11C8  3068               	movlw	104
 16558  11C9  001E               	movwi fsr1++
 16559  11CA  3000               	movlw	0
 16560  11CB  001E               	movwi fsr1++
 16561  11CC  3002               	movlw	2
 16562  11CD  001E               	movwi fsr1++
 16563                           
 16564                           ;stkvar	_data @ sp[(-8)+0]
 16565  11CE  30F8               	movlw	248
 16566  11CF  0706               	addwf	6,w
 16567  11D0  00F6               	movwf	btemp+2
 16568  11D1  30FF               	movlw	255
 16569  11D2  3D07               	addwfc	7,w
 16570  11D3  00F7               	movwf	btemp+3
 16571  11D4  0876               	movf	btemp+2,w
 16572  11D5  001E               	movwi fsr1++
 16573  11D6  0877               	movf	btemp+3,w
 16574  11D7  001E               	movwi fsr1++
 16575  11D8  319F  2732  3191   	fcall	_I2C2_MasterWrite
 16576  11DB                     l5073:	
 16577                           ;src/pba_rtc.c: 167:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 16578                           
 16579                           
 16580                           ;stkvar	_i2cWflag @ sp[(-3)+2]
 16581  11DB  3F7F               	moviw [-1]fsr1
 16582  11DC  1D03               	btfss	3,2
 16583  11DD  29DF               	goto	u4011
 16584  11DE  29E0               	goto	u4010
 16585  11DF                     u4011:
 16586  11DF  29DB               	goto	l5073
 16587  11E0                     u4010:
 16588  11E0                     l1009:
 16589                           
 16590                           ; _RTC_ConvertTemp: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16591  11E0  317D               	addfsr 1,-3
 16592  11E1  0008               	return
 16593  11E2                     __end_of_RTC_ConvertTemp:
 16594                           
 16595                           	psect	text50
 16596  1D04                     __ptext50:	
 16597 ;; *************** function _PBA_Init *****************
 16598 ;; Defined at:
 16599 ;;		line 67 in file "src/pba_config.c"
 16600 ;; Parameters:    Size  Location     Type
 16601 ;;		None
 16602 ;; Auto vars:     Size  Location     Type
 16603 ;;		None
 16604 ;; Return value:  Size  Location     Type
 16605 ;;                  1    wreg      void 
 16606 ;; Registers used:
 16607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+2, btemp+3, btemp+10, btemp+11, pclath
 16608 ;; Tracked objects:
 16609 ;;		On entry : 0/0
 16610 ;;		On exit  : 3F/0
 16611 ;;		Unchanged: 0/0
 16612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16617 ;;Total ram usage:        0 bytes
 16618 ;; Hardware stack levels used:    1
 16619 ;; Hardware stack levels required when called:   12
 16620 ;; This function calls:
 16621 ;;		_OLED_Init
 16622 ;;		_RTC_Init
 16623 ;;		_SYSTEM_Initialize
 16624 ;;		_TMR0_SetInterruptHandler
 16625 ;; This function is called by:
 16626 ;;		_main
 16627 ;; This function uses a reentrant model
 16628 ;;
 16629                           
 16630                           
 16631                           ;psect for function _PBA_Init
 16632  1D04                     _PBA_Init:
 16633  1D04                     l4879:	
 16634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16635                           ;incstack = 0
 16636                           ; Regs used in _PBA_Init: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+2+btemp+3+btemp
      +                          +10+btemp+11+pclath]
 16637                           
 16638                           
 16639                           ;src/pba_config.c: 68:     SYSTEM_Initialize();
 16640  1D04  319D  25A4  319D   	fcall	_SYSTEM_Initialize
 16641  1D07                     l4881:
 16642                           
 16643                           ;src/pba_config.c: 69:     (INTCONbits.GIE = 1);
 16644  1D07  178B               	bsf	11,7	;volatile
 16645  1D08                     l4883:
 16646                           
 16647                           ;src/pba_config.c: 70:     (INTCONbits.PEIE = 1);
 16648  1D08  170B               	bsf	11,6	;volatile
 16649  1D09                     l4885:
 16650                           
 16651                           ;src/pba_config.c: 71:     OLED_Init();
 16652  1D09  3192  22AB  319D   	fcall	_OLED_Init
 16653  1D0C                     l4887:
 16654                           
 16655                           ;src/pba_config.c: 72:     OLED_Init();
 16656  1D0C  3192  22AB  319D   	fcall	_OLED_Init
 16657  1D0F                     l4889:
 16658                           
 16659                           ;src/pba_config.c: 73:     RTC_Init();
 16660  1D0F  3191  2182  319D   	fcall	_RTC_Init
 16661  1D12                     l4891:
 16662                           
 16663                           ;src/pba_config.c: 74:     TMR0_SetInterruptHandler(&SYSTICK_Handler);
 16664  1D12  3057               	movlw	low _SYSTICK_Handler
 16665  1D13  001E               	movwi fsr1++
 16666  1D14  3008               	movlw	high _SYSTICK_Handler
 16667  1D15  001E               	movwi fsr1++
 16668  1D16  319B  23D3  319D   	fcall	_TMR0_SetInterruptHandler
 16669  1D19                     l803:
 16670                           
 16671                           ; _PBA_Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 16672  1D19  0008               	return
 16673  1D1A                     __end_of_PBA_Init:
 16674                           
 16675                           	psect	text51
 16676  1DA4                     __ptext51:	
 16677 ;; *************** function _SYSTEM_Initialize *****************
 16678 ;; Defined at:
 16679 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16680 ;; Parameters:    Size  Location     Type
 16681 ;;		None
 16682 ;; Auto vars:     Size  Location     Type
 16683 ;;		None
 16684 ;; Return value:  Size  Location     Type
 16685 ;;                  1    wreg      void 
 16686 ;; Registers used:
 16687 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath
 16688 ;; Tracked objects:
 16689 ;;		On entry : 0/0
 16690 ;;		On exit  : 3F/E
 16691 ;;		Unchanged: 0/0
 16692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16697 ;;Total ram usage:        0 bytes
 16698 ;; Hardware stack levels used:    1
 16699 ;; Hardware stack levels required when called:   10
 16700 ;; This function calls:
 16701 ;;		_ADC_Initialize
 16702 ;;		_EUSART1_Initialize
 16703 ;;		_I2C2_Initialize
 16704 ;;		_OSCILLATOR_Initialize
 16705 ;;		_PIN_MANAGER_Initialize
 16706 ;;		_PMD_Initialize
 16707 ;;		_SPI1_Initialize
 16708 ;;		_TMR0_Initialize
 16709 ;; This function is called by:
 16710 ;;		_PBA_Init
 16711 ;; This function uses a reentrant model
 16712 ;;
 16713                           
 16714                           
 16715                           ;psect for function _SYSTEM_Initialize
 16716  1DA4                     _SYSTEM_Initialize:
 16717  1DA4                     l4477:	
 16718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16719                           ;incstack = 0
 16720                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath]
 16721                           
 16722                           
 16723                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 16724  1DA4  319B  23E2  319D   	fcall	_PMD_Initialize
 16725  1DA7                     l4479:
 16726                           
 16727                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 16728  1DA7  3197  2723  319D   	fcall	_PIN_MANAGER_Initialize
 16729  1DAA                     l4481:
 16730                           
 16731                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 16732  1DAA  319B  23FC  319D   	fcall	_OSCILLATOR_Initialize
 16733  1DAD                     l4483:
 16734                           
 16735                           ;mcc_generated_files/mcc.c: 55:     SPI1_Initialize();
 16736  1DAD  3187  27F8  319D   	fcall	_SPI1_Initialize
 16737  1DB0                     l4485:
 16738                           
 16739                           ;mcc_generated_files/mcc.c: 56:     I2C2_Initialize();
 16740  1DB0  319C  24DA  319D   	fcall	_I2C2_Initialize
 16741  1DB3                     l4487:
 16742                           
 16743                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
 16744  1DB3  319B  23DA  319D   	fcall	_ADC_Initialize
 16745  1DB6                     l4489:
 16746                           
 16747                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
 16748  1DB6  319C  24B2  319D   	fcall	_TMR0_Initialize
 16749  1DB9                     l4491:
 16750                           
 16751                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
 16752  1DB9  3193  2392  319D   	fcall	_EUSART1_Initialize
 16753  1DBC                     l305:
 16754                           
 16755                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16756  1DBC  0008               	return
 16757  1DBD                     __end_of_SYSTEM_Initialize:
 16758                           
 16759                           	psect	text52
 16760  1CB2                     __ptext52:	
 16761 ;; *************** function _TMR0_Initialize *****************
 16762 ;; Defined at:
 16763 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 16764 ;; Parameters:    Size  Location     Type
 16765 ;;		None
 16766 ;; Auto vars:     Size  Location     Type
 16767 ;;		None
 16768 ;; Return value:  Size  Location     Type
 16769 ;;                  1    wreg      void 
 16770 ;; Registers used:
 16771 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath
 16772 ;; Tracked objects:
 16773 ;;		On entry : 3F/1
 16774 ;;		On exit  : 3F/B
 16775 ;;		Unchanged: 0/0
 16776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16781 ;;Total ram usage:        0 bytes
 16782 ;; Hardware stack levels used:    1
 16783 ;; Hardware stack levels required when called:    9
 16784 ;; This function calls:
 16785 ;;		_TMR0_SetInterruptHandler
 16786 ;; This function is called by:
 16787 ;;		_SYSTEM_Initialize
 16788 ;; This function uses a reentrant model
 16789 ;;
 16790                           
 16791                           
 16792                           ;psect for function _TMR0_Initialize
 16793  1CB2                     _TMR0_Initialize:
 16794  1CB2                     l4277:	
 16795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16796                           ;incstack = 0
 16797                           ; Regs used in _TMR0_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath]
 16798                           
 16799                           
 16800                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x46;
 16801  1CB2  3046               	movlw	70
 16802  1CB3  014B               	movlb	11	; select bank11
 16803  1CB4  009F               	movwf	31	;volatile
 16804                           
 16805                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x7C;
 16806  1CB5  307C               	movlw	124
 16807  1CB6  009D               	movwf	29	;volatile
 16808  1CB7                     l4279:
 16809                           
 16810                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 16811  1CB7  019C               	clrf	28	;volatile
 16812  1CB8                     l4281:
 16813                           
 16814                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 16815  1CB8  014E               	movlb	14	; select bank14
 16816  1CB9  128C               	bcf	12,5	;volatile
 16817  1CBA                     l4283:
 16818                           
 16819                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 16820  1CBA  1696               	bsf	22,5	;volatile
 16821  1CBB                     l4285:
 16822                           
 16823                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 16824  1CBB  3003               	movlw	low _TMR0_DefaultInterruptHandler
 16825  1CBC  001E               	movwi fsr1++
 16826  1CBD  3000               	movlw	high _TMR0_DefaultInterruptHandler
 16827  1CBE  001E               	movwi fsr1++
 16828  1CBF  319B  23D3  319C   	fcall	_TMR0_SetInterruptHandler
 16829  1CC2                     l4287:
 16830                           
 16831                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 16832  1CC2  3080               	movlw	128
 16833  1CC3  014B               	movlb	11	; select bank11
 16834  1CC4  009E               	movwf	30	;volatile
 16835  1CC5                     l596:
 16836                           
 16837                           ; _TMR0_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16838  1CC5  0008               	return
 16839  1CC6                     __end_of_TMR0_Initialize:
 16840                           
 16841                           	psect	text53
 16842  1BD3                     __ptext53:	
 16843 ;; *************** function _TMR0_SetInterruptHandler *****************
 16844 ;; Defined at:
 16845 ;;		line 142 in file "mcc_generated_files/tmr0.c"
 16846 ;; Parameters:    Size  Location     Type
 16847 ;;  InterruptHan    2  [STACK] PTR FTN()void 
 16848 ;;		 -> SYSTICK_Handler(1), TMR0_DefaultInterruptHandler(1), 
 16849 ;; Auto vars:     Size  Location     Type
 16850 ;;		None
 16851 ;; Return value:  Size  Location     Type
 16852 ;;                  1    wreg      void 
 16853 ;; Registers used:
 16854 ;;		wreg, fsr1l, fsr1h
 16855 ;; Tracked objects:
 16856 ;;		On entry : 0/0
 16857 ;;		On exit  : 3F/0
 16858 ;;		Unchanged: 0/0
 16859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16864 ;;Total ram usage:        0 bytes
 16865 ;; Hardware stack levels used:    1
 16866 ;; Hardware stack levels required when called:    8
 16867 ;; This function calls:
 16868 ;;		Nothing
 16869 ;; This function is called by:
 16870 ;;		_TMR0_Initialize
 16871 ;;		_PBA_Init
 16872 ;; This function uses a reentrant model
 16873 ;;
 16874                           
 16875                           
 16876                           ;psect for function _TMR0_SetInterruptHandler
 16877  1BD3                     _TMR0_SetInterruptHandler:
 16878  1BD3                     l4083:	
 16879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16880                           ;incstack = 0
 16881                           ; Regs used in _TMR0_SetInterruptHandler: [wreg+fsr1l+fsr1h]
 16882                           
 16883                           
 16884                           ;mcc_generated_files/tmr0.c: 143:     TMR0_InterruptHandler = InterruptHandler;
 16885                           ;stkvar	_InterruptHandler @ sp[(0)+-2]
 16886  1BD3  3F7E               	moviw [-2]fsr1
 16887  1BD4  0140               	movlb	0	; select bank0
 16888  1BD5  00EC               	movwf	_TMR0_InterruptHandler
 16889  1BD6  3F7F               	moviw [-1]fsr1
 16890  1BD7  00ED               	movwf	_TMR0_InterruptHandler+1
 16891  1BD8                     l621:
 16892                           
 16893                           ; _TMR0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 2, argsize = 2, vargsize = 0
 16894  1BD8  317E               	addfsr 1,-2
 16895  1BD9  0008               	return
 16896  1BDA                     __end_of_TMR0_SetInterruptHandler:
 16897                           
 16898                           	psect	text54
 16899  07F8                     __ptext54:	
 16900 ;; *************** function _SPI1_Initialize *****************
 16901 ;; Defined at:
 16902 ;;		line 65 in file "mcc_generated_files/spi1.c"
 16903 ;; Parameters:    Size  Location     Type
 16904 ;;		None
 16905 ;; Auto vars:     Size  Location     Type
 16906 ;;		None
 16907 ;; Return value:  Size  Location     Type
 16908 ;;                  1    wreg      void 
 16909 ;; Registers used:
 16910 ;;		wreg
 16911 ;; Tracked objects:
 16912 ;;		On entry : 3F/11
 16913 ;;		On exit  : 3F/3
 16914 ;;		Unchanged: 0/0
 16915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16920 ;;Total ram usage:        0 bytes
 16921 ;; Hardware stack levels used:    1
 16922 ;; Hardware stack levels required when called:    8
 16923 ;; This function calls:
 16924 ;;		Nothing
 16925 ;; This function is called by:
 16926 ;;		_SYSTEM_Initialize
 16927 ;; This function uses a reentrant model
 16928 ;;
 16929                           
 16930                           
 16931                           ;psect for function _SPI1_Initialize
 16932  07F8                     _SPI1_Initialize:
 16933  07F8                     l2229:	
 16934                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16935                           ;incstack = 0
 16936                           ; Regs used in _SPI1_Initialize: [wreg]
 16937                           
 16938                           
 16939                           ;mcc_generated_files/spi1.c: 70:     SSP1STAT = 0x40;
 16940  07F8  3040               	movlw	64
 16941  07F9  0143               	movlb	3	; select bank3
 16942  07FA  008F               	movwf	15	;volatile
 16943                           
 16944                           ;mcc_generated_files/spi1.c: 73:     SSP1CON1 = 0x2A;
 16945  07FB  302A               	movlw	42
 16946  07FC  0090               	movwf	16	;volatile
 16947                           
 16948                           ;mcc_generated_files/spi1.c: 76:     SSP1ADD = 0x07;
 16949  07FD  3007               	movlw	7
 16950  07FE  008D               	movwf	13	;volatile
 16951  07FF                     l15:
 16952                           
 16953                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16954  07FF  0008               	return
 16955  0800                     __end_of_SPI1_Initialize:
 16956                           
 16957                           	psect	text55
 16958  1BE2                     __ptext55:	
 16959 ;; *************** function _PMD_Initialize *****************
 16960 ;; Defined at:
 16961 ;;		line 78 in file "mcc_generated_files/mcc.c"
 16962 ;; Parameters:    Size  Location     Type
 16963 ;;		None
 16964 ;; Auto vars:     Size  Location     Type
 16965 ;;		None
 16966 ;; Return value:  Size  Location     Type
 16967 ;;                  1    wreg      void 
 16968 ;; Registers used:
 16969 ;;		status,2
 16970 ;; Tracked objects:
 16971 ;;		On entry : 0/0
 16972 ;;		On exit  : 3F/F
 16973 ;;		Unchanged: 0/0
 16974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16979 ;;Total ram usage:        0 bytes
 16980 ;; Hardware stack levels used:    1
 16981 ;; Hardware stack levels required when called:    8
 16982 ;; This function calls:
 16983 ;;		Nothing
 16984 ;; This function is called by:
 16985 ;;		_SYSTEM_Initialize
 16986 ;; This function uses a reentrant model
 16987 ;;
 16988                           
 16989                           
 16990                           ;psect for function _PMD_Initialize
 16991  1BE2                     _PMD_Initialize:
 16992  1BE2                     l2279:	
 16993                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16994                           ;incstack = 0
 16995                           ; Regs used in _PMD_Initialize: [status,2]
 16996                           
 16997                           
 16998                           ;mcc_generated_files/mcc.c: 81:     PMD0 = 0x00;
 16999  1BE2  014F               	movlb	15	; select bank15
 17000  1BE3  0196               	clrf	22	;volatile
 17001                           
 17002                           ;mcc_generated_files/mcc.c: 83:     PMD1 = 0x00;
 17003  1BE4  0197               	clrf	23	;volatile
 17004                           
 17005                           ;mcc_generated_files/mcc.c: 85:     PMD2 = 0x00;
 17006  1BE5  0198               	clrf	24	;volatile
 17007                           
 17008                           ;mcc_generated_files/mcc.c: 87:     PMD3 = 0x00;
 17009  1BE6  0199               	clrf	25	;volatile
 17010                           
 17011                           ;mcc_generated_files/mcc.c: 89:     PMD4 = 0x00;
 17012  1BE7  019A               	clrf	26	;volatile
 17013                           
 17014                           ;mcc_generated_files/mcc.c: 91:     PMD5 = 0x00;
 17015  1BE8  019B               	clrf	27	;volatile
 17016  1BE9                     l311:
 17017                           
 17018                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 17019  1BE9  0008               	return
 17020  1BEA                     __end_of_PMD_Initialize:
 17021                           
 17022                           	psect	text56
 17023  1723                     __ptext56:	
 17024 ;; *************** function _PIN_MANAGER_Initialize *****************
 17025 ;; Defined at:
 17026 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 17027 ;; Parameters:    Size  Location     Type
 17028 ;;		None
 17029 ;; Auto vars:     Size  Location     Type
 17030 ;;		None
 17031 ;; Return value:  Size  Location     Type
 17032 ;;                  1    wreg      void 
 17033 ;; Registers used:
 17034 ;;		wreg, status,2
 17035 ;; Tracked objects:
 17036 ;;		On entry : 3F/F
 17037 ;;		On exit  : 3F/3D
 17038 ;;		Unchanged: 0/0
 17039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17044 ;;Total ram usage:        0 bytes
 17045 ;; Hardware stack levels used:    1
 17046 ;; Hardware stack levels required when called:    8
 17047 ;; This function calls:
 17048 ;;		Nothing
 17049 ;; This function is called by:
 17050 ;;		_SYSTEM_Initialize
 17051 ;; This function uses a reentrant model
 17052 ;;
 17053                           
 17054                           
 17055                           ;psect for function _PIN_MANAGER_Initialize
 17056  1723                     _PIN_MANAGER_Initialize:
 17057  1723                     l2281:	
 17058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17059                           ;incstack = 0
 17060                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 17061                           
 17062                           
 17063                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 17064  1723  0140               	movlb	0	; select bank0
 17065  1724  019C               	clrf	28	;volatile
 17066                           
 17067                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 17068  1725  019B               	clrf	27	;volatile
 17069                           
 17070                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 17071  1726  0198               	clrf	24	;volatile
 17072                           
 17073                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
 17074  1727  019D               	clrf	29	;volatile
 17075                           
 17076                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 17077  1728  0199               	clrf	25	;volatile
 17078                           
 17079                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x00;
 17080  1729  019A               	clrf	26	;volatile
 17081  172A                     l2283:
 17082                           
 17083                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x08;
 17084  172A  3008               	movlw	8
 17085  172B  0096               	movwf	22	;volatile
 17086  172C                     l2285:
 17087                           
 17088                           ;mcc_generated_files/pin_manager.c: 71:     TRISF = 0xBF;
 17089  172C  30BF               	movlw	191
 17090  172D  0097               	movwf	23	;volatile
 17091  172E                     l2287:
 17092                           
 17093                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xCB;
 17094  172E  30CB               	movlw	203
 17095  172F  0092               	movwf	18	;volatile
 17096  1730                     l2289:
 17097                           
 17098                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xDA;
 17099  1730  30DA               	movlw	218
 17100  1731  0093               	movwf	19	;volatile
 17101  1732                     l2291:
 17102                           
 17103                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xFF;
 17104  1732  30FF               	movlw	255
 17105  1733  0094               	movwf	20	;volatile
 17106  1734                     l2293:
 17107                           
 17108                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x00;
 17109  1734  0195               	clrf	21	;volatile
 17110  1735                     l2295:
 17111                           
 17112                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0x00;
 17113  1735  017E               	movlb	62	; select bank62
 17114  1736  01D9               	clrf	89	;volatile
 17115  1737                     l2297:
 17116                           
 17117                           ;mcc_generated_files/pin_manager.c: 81:     ANSELC = 0x00;
 17118  1737  01CE               	clrf	78	;volatile
 17119                           
 17120                           ;mcc_generated_files/pin_manager.c: 82:     ANSELB = 0x01;
 17121  1738  3001               	movlw	1
 17122  1739  00C3               	movwf	67	;volatile
 17123  173A                     l2299:
 17124                           
 17125                           ;mcc_generated_files/pin_manager.c: 83:     ANSELE = 0x00;
 17126  173A  01E4               	clrf	100	;volatile
 17127  173B                     l2301:
 17128                           
 17129                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0x3F;
 17130  173B  303F               	movlw	63
 17131  173C  017C               	movlb	60	; select bank60
 17132  173D  00D0               	movwf	80	;volatile
 17133  173E                     l2303:
 17134                           
 17135                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0x3F;
 17136  173E  303F               	movlw	63
 17137  173F  017E               	movlb	62	; select bank62
 17138  1740  00B8               	movwf	56	;volatile
 17139  1741                     l2305:
 17140                           
 17141                           ;mcc_generated_files/pin_manager.c: 90:     WPUD = 0x00;
 17142  1741  01DA               	clrf	90	;volatile
 17143  1742                     l2307:
 17144                           
 17145                           ;mcc_generated_files/pin_manager.c: 91:     WPUF = 0x00;
 17146  1742  017C               	movlb	60	; select bank60
 17147  1743  01D1               	clrf	81	;volatile
 17148  1744                     l2309:
 17149                           
 17150                           ;mcc_generated_files/pin_manager.c: 92:     WPUE = 0x00;
 17151  1744  017E               	movlb	62	; select bank62
 17152  1745  01E5               	clrf	101	;volatile
 17153  1746                     l2311:
 17154                           
 17155                           ;mcc_generated_files/pin_manager.c: 93:     WPUB = 0x00;
 17156  1746  01C4               	clrf	68	;volatile
 17157  1747                     l2313:
 17158                           
 17159                           ;mcc_generated_files/pin_manager.c: 94:     WPUA = 0x00;
 17160  1747  01B9               	clrf	57	;volatile
 17161  1748                     l2315:
 17162                           
 17163                           ;mcc_generated_files/pin_manager.c: 95:     WPUC = 0x00;
 17164  1748  01CF               	clrf	79	;volatile
 17165  1749                     l2317:
 17166                           
 17167                           ;mcc_generated_files/pin_manager.c: 100:     ODCONE = 0x00;
 17168  1749  01E6               	clrf	102	;volatile
 17169  174A                     l2319:
 17170                           
 17171                           ;mcc_generated_files/pin_manager.c: 101:     ODCONF = 0x00;
 17172  174A  017C               	movlb	60	; select bank60
 17173  174B  01D2               	clrf	82	;volatile
 17174  174C                     l2321:
 17175                           
 17176                           ;mcc_generated_files/pin_manager.c: 102:     ODCONA = 0x00;
 17177  174C  017E               	movlb	62	; select bank62
 17178  174D  01BA               	clrf	58	;volatile
 17179  174E                     l2323:
 17180                           
 17181                           ;mcc_generated_files/pin_manager.c: 103:     ODCONB = 0x00;
 17182  174E  01C5               	clrf	69	;volatile
 17183  174F                     l2325:
 17184                           
 17185                           ;mcc_generated_files/pin_manager.c: 104:     ODCONC = 0x00;
 17186  174F  01D0               	clrf	80	;volatile
 17187  1750                     l2327:
 17188                           
 17189                           ;mcc_generated_files/pin_manager.c: 105:     ODCOND = 0x00;
 17190  1750  01DB               	clrf	91	;volatile
 17191  1751                     l2329:
 17192                           
 17193                           ;mcc_generated_files/pin_manager.c: 110:     SLRCONA = 0xFF;
 17194  1751  30FF               	movlw	255
 17195  1752  00BB               	movwf	59	;volatile
 17196  1753                     l2331:
 17197                           
 17198                           ;mcc_generated_files/pin_manager.c: 111:     SLRCONB = 0xFF;
 17199  1753  30FF               	movlw	255
 17200  1754  00C6               	movwf	70	;volatile
 17201  1755                     l2333:
 17202                           
 17203                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONC = 0xFF;
 17204  1755  30FF               	movlw	255
 17205  1756  00D1               	movwf	81	;volatile
 17206  1757                     l2335:
 17207                           
 17208                           ;mcc_generated_files/pin_manager.c: 113:     SLRCOND = 0xFF;
 17209  1757  30FF               	movlw	255
 17210  1758  00DC               	movwf	92	;volatile
 17211  1759                     l2337:
 17212                           
 17213                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONE = 0x07;
 17214  1759  3007               	movlw	7
 17215  175A  00E7               	movwf	103	;volatile
 17216  175B                     l2339:
 17217                           
 17218                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONF = 0xFF;
 17219  175B  30FF               	movlw	255
 17220  175C  017C               	movlb	60	; select bank60
 17221  175D  00D3               	movwf	83	;volatile
 17222  175E                     l2341:
 17223                           
 17224                           ;mcc_generated_files/pin_manager.c: 120:     INLVLA = 0xFF;
 17225  175E  30FF               	movlw	255
 17226  175F  017E               	movlb	62	; select bank62
 17227  1760  00BC               	movwf	60	;volatile
 17228  1761                     l2343:
 17229                           
 17230                           ;mcc_generated_files/pin_manager.c: 121:     INLVLB = 0xFF;
 17231  1761  30FF               	movlw	255
 17232  1762  00C7               	movwf	71	;volatile
 17233  1763                     l2345:
 17234                           
 17235                           ;mcc_generated_files/pin_manager.c: 122:     INLVLC = 0xFF;
 17236  1763  30FF               	movlw	255
 17237  1764  00D2               	movwf	82	;volatile
 17238  1765                     l2347:
 17239                           
 17240                           ;mcc_generated_files/pin_manager.c: 123:     INLVLD = 0xFF;
 17241  1765  30FF               	movlw	255
 17242  1766  00DD               	movwf	93	;volatile
 17243  1767                     l2349:
 17244                           
 17245                           ;mcc_generated_files/pin_manager.c: 124:     INLVLE = 0x0F;
 17246  1767  300F               	movlw	15
 17247  1768  00E8               	movwf	104	;volatile
 17248  1769                     l2351:
 17249                           
 17250                           ;mcc_generated_files/pin_manager.c: 125:     INLVLF = 0xFF;
 17251  1769  30FF               	movlw	255
 17252  176A  017C               	movlb	60	; select bank60
 17253  176B  00D4               	movwf	84	;volatile
 17254  176C                     l2353:
 17255                           
 17256                           ;mcc_generated_files/pin_manager.c: 134:     RF6PPS = 0x0F;
 17257  176C  300F               	movlw	15
 17258  176D  00BE               	movwf	62	;volatile
 17259  176E                     l2355:
 17260                           
 17261                           ;mcc_generated_files/pin_manager.c: 135:     SSP1CLKPPS = 0x0A;
 17262  176E  300A               	movlw	10
 17263  176F  017D               	movlb	61	; select bank61
 17264  1770  00C5               	movwf	69	;volatile
 17265  1771                     l2357:
 17266                           
 17267                           ;mcc_generated_files/pin_manager.c: 136:     SSP2DATPPS = 0x0B;
 17268  1771  300B               	movlw	11
 17269  1772  00C9               	movwf	73	;volatile
 17270  1773                     l2359:
 17271                           
 17272                           ;mcc_generated_files/pin_manager.c: 137:     RB0PPS = 0x16;
 17273  1773  3016               	movlw	22
 17274  1774  017E               	movlb	62	; select bank62
 17275  1775  0098               	movwf	24	;volatile
 17276  1776                     l2361:
 17277                           
 17278                           ;mcc_generated_files/pin_manager.c: 138:     RB2PPS = 0x15;
 17279  1776  3015               	movlw	21
 17280  1777  009A               	movwf	26	;volatile
 17281  1778                     l2363:
 17282                           
 17283                           ;mcc_generated_files/pin_manager.c: 139:     RB3PPS = 0x18;
 17284  1778  3018               	movlw	24
 17285  1779  009B               	movwf	27	;volatile
 17286  177A                     l2365:
 17287                           
 17288                           ;mcc_generated_files/pin_manager.c: 140:     RB4PPS = 0x17;
 17289  177A  3017               	movlw	23
 17290  177B  009C               	movwf	28	;volatile
 17291  177C                     l2367:
 17292                           
 17293                           ;mcc_generated_files/pin_manager.c: 141:     SSP1DATPPS = 0x09;
 17294  177C  3009               	movlw	9
 17295  177D  017D               	movlb	61	; select bank61
 17296  177E  00C6               	movwf	70	;volatile
 17297  177F                     l2369:
 17298                           
 17299                           ;mcc_generated_files/pin_manager.c: 142:     SSP2CLKPPS = 0x0C;
 17300  177F  300C               	movlw	12
 17301  1780  00C8               	movwf	72	;volatile
 17302  1781                     l2371:
 17303                           
 17304                           ;mcc_generated_files/pin_manager.c: 143:     RX1DTPPS = 0x2F;
 17305  1781  302F               	movlw	47
 17306  1782  00CB               	movwf	75	;volatile
 17307  1783                     l568:
 17308                           
 17309                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 17310  1783  0008               	return
 17311  1784                     __end_of_PIN_MANAGER_Initialize:
 17312                           
 17313                           	psect	text57
 17314  1BFC                     __ptext57:	
 17315 ;; *************** function _OSCILLATOR_Initialize *****************
 17316 ;; Defined at:
 17317 ;;		line 62 in file "mcc_generated_files/mcc.c"
 17318 ;; Parameters:    Size  Location     Type
 17319 ;;		None
 17320 ;; Auto vars:     Size  Location     Type
 17321 ;;		None
 17322 ;; Return value:  Size  Location     Type
 17323 ;;                  1    wreg      void 
 17324 ;; Registers used:
 17325 ;;		wreg, status,2
 17326 ;; Tracked objects:
 17327 ;;		On entry : 3F/3D
 17328 ;;		On exit  : 3F/11
 17329 ;;		Unchanged: 0/0
 17330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17335 ;;Total ram usage:        0 bytes
 17336 ;; Hardware stack levels used:    1
 17337 ;; Hardware stack levels required when called:    8
 17338 ;; This function calls:
 17339 ;;		Nothing
 17340 ;; This function is called by:
 17341 ;;		_SYSTEM_Initialize
 17342 ;; This function uses a reentrant model
 17343 ;;
 17344                           
 17345                           
 17346                           ;psect for function _OSCILLATOR_Initialize
 17347  1BFC                     _OSCILLATOR_Initialize:
 17348  1BFC                     l2373:	
 17349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17350                           ;incstack = 0
 17351                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17352                           
 17353                           
 17354                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
 17355  1BFC  3060               	movlw	96
 17356  1BFD  0151               	movlb	17	; select bank17
 17357  1BFE  008D               	movwf	13	;volatile
 17358  1BFF                     l2375:
 17359                           
 17360                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 17361  1BFF  018F               	clrf	15	;volatile
 17362  1C00                     l2377:
 17363                           
 17364                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 17365  1C00  0191               	clrf	17	;volatile
 17366                           
 17367                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x06;
 17368  1C01  3006               	movlw	6
 17369  1C02  0093               	movwf	19	;volatile
 17370  1C03                     l2379:
 17371                           
 17372                           ;mcc_generated_files/mcc.c: 73:     OSCSTAT = 0x00;
 17373  1C03  0190               	clrf	16	;volatile
 17374  1C04                     l2381:
 17375                           
 17376                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
 17377  1C04  0192               	clrf	18	;volatile
 17378  1C05                     l308:
 17379                           
 17380                           ; _OSCILLATOR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 0, argsize = 0, vargsize = 0
 17381  1C05  0008               	return
 17382  1C06                     __end_of_OSCILLATOR_Initialize:
 17383                           
 17384                           	psect	text58
 17385  1CDA                     __ptext58:	
 17386 ;; *************** function _I2C2_Initialize *****************
 17387 ;; Defined at:
 17388 ;;		line 198 in file "mcc_generated_files/i2c2.c"
 17389 ;; Parameters:    Size  Location     Type
 17390 ;;		None
 17391 ;; Auto vars:     Size  Location     Type
 17392 ;;		None
 17393 ;; Return value:  Size  Location     Type
 17394 ;;                  1    wreg      void 
 17395 ;; Registers used:
 17396 ;;		wreg, status,2
 17397 ;; Tracked objects:
 17398 ;;		On entry : 3F/3
 17399 ;;		On exit  : 3F/E
 17400 ;;		Unchanged: 0/0
 17401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17406 ;;Total ram usage:        0 bytes
 17407 ;; Hardware stack levels used:    1
 17408 ;; Hardware stack levels required when called:    8
 17409 ;; This function calls:
 17410 ;;		Nothing
 17411 ;; This function is called by:
 17412 ;;		_SYSTEM_Initialize
 17413 ;; This function uses a reentrant model
 17414 ;;
 17415                           
 17416                           
 17417                           ;psect for function _I2C2_Initialize
 17418  1CDA                     _I2C2_Initialize:
 17419  1CDA                     l2383:	
 17420                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17421                           ;incstack = 0
 17422                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
 17423                           
 17424                           
 17425                           ;mcc_generated_files/i2c2.c: 200:     i2c2_object.pTrHead = i2c2_tr_queue;
 17426  1CDA  3058               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
 17427  1CDB  0140               	movlb	0	; select bank0
 17428  1CDC  00B1               	movwf	low ((_i2c2_object| 0+1))
 17429                           
 17430                           ;mcc_generated_files/i2c2.c: 201:     i2c2_object.pTrTail = i2c2_tr_queue;
 17431  1CDD  3058               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
 17432  1CDE  00B0               	movwf	_i2c2_object
 17433  1CDF                     l2385:
 17434                           
 17435                           ;mcc_generated_files/i2c2.c: 202:     i2c2_object.trStatus.s.empty = 1;
 17436  1CDF  14B2               	bsf	_i2c2_object+2,1
 17437  1CE0                     l2387:
 17438                           
 17439                           ;mcc_generated_files/i2c2.c: 203:     i2c2_object.trStatus.s.full = 0;
 17440  1CE0  1032               	bcf	_i2c2_object+2,0
 17441  1CE1                     l2389:
 17442                           
 17443                           ;mcc_generated_files/i2c2.c: 205:     i2c2_object.i2cErrors = 0;
 17444  1CE1  01B4               	clrf	_i2c2_object+4
 17445  1CE2                     l2391:
 17446                           
 17447                           ;mcc_generated_files/i2c2.c: 208:     SSP2STAT = 0x00;
 17448  1CE2  0143               	movlb	3	; select bank3
 17449  1CE3  0199               	clrf	25	;volatile
 17450                           
 17451                           ;mcc_generated_files/i2c2.c: 210:     SSP2CON1 = 0x28;
 17452  1CE4  3028               	movlw	40
 17453  1CE5  009A               	movwf	26	;volatile
 17454  1CE6                     l2393:
 17455                           
 17456                           ;mcc_generated_files/i2c2.c: 212:     SSP2CON3 = 0x00;
 17457  1CE6  019C               	clrf	28	;volatile
 17458  1CE7                     l2395:
 17459                           
 17460                           ;mcc_generated_files/i2c2.c: 214:     SSP2ADD = 0x13;
 17461  1CE7  3013               	movlw	19
 17462  1CE8  0097               	movwf	23	;volatile
 17463  1CE9                     l2397:
 17464                           
 17465                           ;mcc_generated_files/i2c2.c: 217:     PIR3bits.SSP2IF = 0;
 17466  1CE9  014E               	movlb	14	; select bank14
 17467  1CEA  110F               	bcf	15,2	;volatile
 17468  1CEB                     l2399:
 17469                           
 17470                           ;mcc_generated_files/i2c2.c: 218:     PIR3bits.BCL2IF = 0;
 17471  1CEB  118F               	bcf	15,3	;volatile
 17472  1CEC                     l2401:
 17473                           
 17474                           ;mcc_generated_files/i2c2.c: 221:     PIE3bits.SSP2IE = 1;
 17475  1CEC  1519               	bsf	25,2	;volatile
 17476  1CED                     l2403:
 17477                           
 17478                           ;mcc_generated_files/i2c2.c: 222:     PIE3bits.BCL2IE = 1;
 17479  1CED  1599               	bsf	25,3	;volatile
 17480  1CEE                     l354:
 17481                           
 17482                           ; _I2C2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 17483  1CEE  0008               	return
 17484  1CEF                     __end_of_I2C2_Initialize:
 17485                           
 17486                           	psect	text59
 17487  1392                     __ptext59:	
 17488 ;; *************** function _EUSART1_Initialize *****************
 17489 ;; Defined at:
 17490 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 17491 ;; Parameters:    Size  Location     Type
 17492 ;;		None
 17493 ;; Auto vars:     Size  Location     Type
 17494 ;;		None
 17495 ;; Return value:  Size  Location     Type
 17496 ;;                  1    wreg      void 
 17497 ;; Registers used:
 17498 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath
 17499 ;; Tracked objects:
 17500 ;;		On entry : 3F/B
 17501 ;;		On exit  : 3F/E
 17502 ;;		Unchanged: 0/0
 17503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17508 ;;Total ram usage:        0 bytes
 17509 ;; Hardware stack levels used:    1
 17510 ;; Hardware stack levels required when called:    9
 17511 ;; This function calls:
 17512 ;;		_EUSART1_SetErrorHandler
 17513 ;;		_EUSART1_SetFramingErrorHandler
 17514 ;;		_EUSART1_SetOverrunErrorHandler
 17515 ;;		_EUSART1_SetRxInterruptHandler
 17516 ;;		_EUSART1_SetTxInterruptHandler
 17517 ;; This function is called by:
 17518 ;;		_SYSTEM_Initialize
 17519 ;; This function uses a reentrant model
 17520 ;;
 17521                           
 17522                           
 17523                           ;psect for function _EUSART1_Initialize
 17524  1392                     _EUSART1_Initialize:
 17525  1392                     l4235:	
 17526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17527                           ;incstack = 0
 17528                           ; Regs used in _EUSART1_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath]
 17529                           
 17530                           
 17531                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 17532  1392  014E               	movlb	14	; select bank14
 17533  1393  1299               	bcf	25,5	;volatile
 17534  1394                     l4237:
 17535                           
 17536                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 17537  1394  300F               	movlw	low _EUSART1_Receive_ISR
 17538  1395  001E               	movwi fsr1++
 17539  1396  3014               	movlw	high _EUSART1_Receive_ISR
 17540  1397  001E               	movwi fsr1++
 17541  1398  319B  23C5  3193   	fcall	_EUSART1_SetRxInterruptHandler
 17542  139B                     l4239:
 17543                           
 17544                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 17545  139B  014E               	movlb	14	; select bank14
 17546  139C  1219               	bcf	25,4	;volatile
 17547                           
 17548                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 17549  139D  30D8               	movlw	low _EUSART1_Transmit_ISR
 17550  139E  001E               	movwi fsr1++
 17551  139F  301D               	movlw	high _EUSART1_Transmit_ISR
 17552  13A0  001E               	movwi fsr1++
 17553  13A1  319B  23CC  3193   	fcall	_EUSART1_SetTxInterruptHandler
 17554  13A4                     l4241:
 17555                           
 17556                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 17557  13A4  3008               	movlw	8
 17558  13A5  0142               	movlb	2	; select bank2
 17559  13A6  009F               	movwf	31	;volatile
 17560  13A7                     l4243:
 17561                           
 17562                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 17563  13A7  3090               	movlw	144
 17564  13A8  009D               	movwf	29	;volatile
 17565  13A9                     l4245:
 17566                           
 17567                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 17568  13A9  3024               	movlw	36
 17569  13AA  009E               	movwf	30	;volatile
 17570  13AB                     l4247:
 17571                           
 17572                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x44;
 17573  13AB  3044               	movlw	68
 17574  13AC  009B               	movwf	27	;volatile
 17575  13AD                     l4249:
 17576                           
 17577                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
 17578  13AD  019C               	clrf	28	;volatile
 17579  13AE                     l4251:
 17580                           
 17581                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 17582  13AE  3002               	movlw	low _EUSART1_DefaultFramingErrorHandler
 17583  13AF  001E               	movwi fsr1++
 17584  13B0  3000               	movlw	high _EUSART1_DefaultFramingErrorHandler
 17585  13B1  001E               	movwi fsr1++
 17586  13B2  319B  23B7  3193   	fcall	_EUSART1_SetFramingErrorHandler
 17587  13B5                     l4253:
 17588                           
 17589                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 17590  13B5  3093               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 17591  13B6  001E               	movwi fsr1++
 17592  13B7  301B               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 17593  13B8  001E               	movwi fsr1++
 17594  13B9  319B  23BE  3193   	fcall	_EUSART1_SetOverrunErrorHandler
 17595  13BC                     l4255:
 17596                           
 17597                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 17598  13BC  308F               	movlw	low _EUSART1_DefaultErrorHandler
 17599  13BD  001E               	movwi fsr1++
 17600  13BE  301B               	movlw	high _EUSART1_DefaultErrorHandler
 17601  13BF  001E               	movwi fsr1++
 17602  13C0  319B  23B0  3193   	fcall	_EUSART1_SetErrorHandler
 17603                           
 17604                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 17605  13C3  0140               	movlb	0	; select bank0
 17606  13C4  01CA               	clrf	_eusart1RxLastError	;volatile
 17607                           
 17608                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 17609  13C5  01F3               	clrf	_eusart1TxHead	;volatile
 17610                           
 17611                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 17612  13C6  01CD               	clrf	_eusart1TxTail	;volatile
 17613  13C7                     l4257:
 17614                           
 17615                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 17616  13C7  3008               	movlw	8
 17617  13C8  00EF               	movwf	_eusart1TxBufferRemaining	;volatile
 17618  13C9                     l4259:
 17619                           
 17620                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 17621  13C9  01F2               	clrf	_eusart1RxHead	;volatile
 17622  13CA                     l4261:
 17623                           
 17624                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 17625  13CA  01CC               	clrf	_eusart1RxTail	;volatile
 17626  13CB                     l4263:
 17627                           
 17628                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 17629  13CB  01CB               	clrf	_eusart1RxCount	;volatile
 17630  13CC                     l4265:
 17631                           
 17632                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 17633  13CC  014E               	movlb	14	; select bank14
 17634  13CD  1699               	bsf	25,5	;volatile
 17635  13CE                     l156:
 17636                           
 17637                           ; _EUSART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 17638  13CE  0008               	return
 17639  13CF                     __end_of_EUSART1_Initialize:
 17640                           
 17641                           	psect	text60
 17642  1BCC                     __ptext60:	
 17643 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 17644 ;; Defined at:
 17645 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 17646 ;; Parameters:    Size  Location     Type
 17647 ;;  interruptHan    2  [STACK] PTR FTN()void 
 17648 ;;		 -> EUSART1_Transmit_ISR(1), 
 17649 ;; Auto vars:     Size  Location     Type
 17650 ;;		None
 17651 ;; Return value:  Size  Location     Type
 17652 ;;                  1    wreg      void 
 17653 ;; Registers used:
 17654 ;;		wreg, fsr1l, fsr1h
 17655 ;; Tracked objects:
 17656 ;;		On entry : 3F/E
 17657 ;;		On exit  : 3F/1
 17658 ;;		Unchanged: 0/0
 17659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17664 ;;Total ram usage:        0 bytes
 17665 ;; Hardware stack levels used:    1
 17666 ;; Hardware stack levels required when called:    8
 17667 ;; This function calls:
 17668 ;;		Nothing
 17669 ;; This function is called by:
 17670 ;;		_EUSART1_Initialize
 17671 ;; This function uses a reentrant model
 17672 ;;
 17673                           
 17674                           
 17675                           ;psect for function _EUSART1_SetTxInterruptHandler
 17676  1BCC                     _EUSART1_SetTxInterruptHandler:
 17677  1BCC                     l4047:	
 17678                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17679                           ;incstack = 0
 17680                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg+fsr1l+fsr1h]
 17681                           
 17682                           
 17683                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17684                           ;stkvar	_interruptHandler @ sp[(0)+-2]
 17685  1BCC  3F7E               	moviw [-2]fsr1
 17686  1BCD  0141               	movlb	1	; select bank1
 17687  1BCE  00DA               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+128)
 17688  1BCF  3F7F               	moviw [-1]fsr1
 17689  1BD0  00DB               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128)
 17690  1BD1                     l222:
 17691                           
 17692                           ; _EUSART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 2, argsize = 2, vargsize = 0
 17693  1BD1  317E               	addfsr 1,-2
 17694  1BD2  0008               	return
 17695  1BD3                     __end_of_EUSART1_SetTxInterruptHandler:
 17696                           
 17697                           	psect	text61
 17698  1BC5                     __ptext61:	
 17699 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 17700 ;; Defined at:
 17701 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 17702 ;; Parameters:    Size  Location     Type
 17703 ;;  interruptHan    2  [STACK] PTR FTN()void 
 17704 ;;		 -> ReceiveHandler(1), EUSART1_Receive_ISR(1), 
 17705 ;; Auto vars:     Size  Location     Type
 17706 ;;		None
 17707 ;; Return value:  Size  Location     Type
 17708 ;;                  1    wreg      void 
 17709 ;; Registers used:
 17710 ;;		wreg, fsr1l, fsr1h
 17711 ;; Tracked objects:
 17712 ;;		On entry : 31/0
 17713 ;;		On exit  : 3F/1
 17714 ;;		Unchanged: 0/0
 17715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17720 ;;Total ram usage:        0 bytes
 17721 ;; Hardware stack levels used:    1
 17722 ;; Hardware stack levels required when called:    8
 17723 ;; This function calls:
 17724 ;;		Nothing
 17725 ;; This function is called by:
 17726 ;;		_EUSART1_Initialize
 17727 ;;		_main
 17728 ;; This function uses a reentrant model
 17729 ;;
 17730                           
 17731                           
 17732                           ;psect for function _EUSART1_SetRxInterruptHandler
 17733  1BC5                     _EUSART1_SetRxInterruptHandler:
 17734  1BC5                     l4045:	
 17735                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17736                           ;incstack = 0
 17737                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg+fsr1l+fsr1h]
 17738                           
 17739                           
 17740                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17741                           ;stkvar	_interruptHandler @ sp[(0)+-2]
 17742  1BC5  3F7E               	moviw [-2]fsr1
 17743  1BC6  0141               	movlb	1	; select bank1
 17744  1BC7  00D8               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+128)
 17745  1BC8  3F7F               	moviw [-1]fsr1
 17746  1BC9  00D9               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128)
 17747  1BCA                     l225:
 17748                           
 17749                           ; _EUSART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 2, argsize = 2, vargsize = 0
 17750  1BCA  317E               	addfsr 1,-2
 17751  1BCB  0008               	return
 17752  1BCC                     __end_of_EUSART1_SetRxInterruptHandler:
 17753                           
 17754                           	psect	text62
 17755  1BBE                     __ptext62:	
 17756 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 17757 ;; Defined at:
 17758 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 17759 ;; Parameters:    Size  Location     Type
 17760 ;;  interruptHan    2  [STACK] PTR FTN()void 
 17761 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 17762 ;; Auto vars:     Size  Location     Type
 17763 ;;		None
 17764 ;; Return value:  Size  Location     Type
 17765 ;;                  1    wreg      void 
 17766 ;; Registers used:
 17767 ;;		wreg, fsr1l, fsr1h
 17768 ;; Tracked objects:
 17769 ;;		On entry : 3F/1
 17770 ;;		On exit  : 3F/1
 17771 ;;		Unchanged: 0/0
 17772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17777 ;;Total ram usage:        0 bytes
 17778 ;; Hardware stack levels used:    1
 17779 ;; Hardware stack levels required when called:    8
 17780 ;; This function calls:
 17781 ;;		Nothing
 17782 ;; This function is called by:
 17783 ;;		_EUSART1_Initialize
 17784 ;; This function uses a reentrant model
 17785 ;;
 17786                           
 17787                           
 17788                           ;psect for function _EUSART1_SetOverrunErrorHandler
 17789  1BBE                     _EUSART1_SetOverrunErrorHandler:
 17790  1BBE                     l4051:	
 17791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17792                           ;incstack = 0
 17793                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg+fsr1l+fsr1h]
 17794                           
 17795                           
 17796                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 17797                           ;stkvar	_interruptHandler @ sp[(0)+-2]
 17798  1BBE  3F7E               	moviw [-2]fsr1
 17799  1BBF  0141               	movlb	1	; select bank1
 17800  1BC0  00D4               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
 17801  1BC1  3F7F               	moviw [-1]fsr1
 17802  1BC2  00D5               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
 17803  1BC3                     l216:
 17804                           
 17805                           ; _EUSART1_SetOverrunErrorHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 2, argsize = 2, vargsize = 0
 17806  1BC3  317E               	addfsr 1,-2
 17807  1BC4  0008               	return
 17808  1BC5                     __end_of_EUSART1_SetOverrunErrorHandler:
 17809                           
 17810                           	psect	text63
 17811  1BB7                     __ptext63:	
 17812 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 17813 ;; Defined at:
 17814 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 17815 ;; Parameters:    Size  Location     Type
 17816 ;;  interruptHan    2  [STACK] PTR FTN()void 
 17817 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 17818 ;; Auto vars:     Size  Location     Type
 17819 ;;		None
 17820 ;; Return value:  Size  Location     Type
 17821 ;;                  1    wreg      void 
 17822 ;; Registers used:
 17823 ;;		wreg, fsr1l, fsr1h
 17824 ;; Tracked objects:
 17825 ;;		On entry : 3F/2
 17826 ;;		On exit  : 3F/1
 17827 ;;		Unchanged: 0/0
 17828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17833 ;;Total ram usage:        0 bytes
 17834 ;; Hardware stack levels used:    1
 17835 ;; Hardware stack levels required when called:    8
 17836 ;; This function calls:
 17837 ;;		Nothing
 17838 ;; This function is called by:
 17839 ;;		_EUSART1_Initialize
 17840 ;; This function uses a reentrant model
 17841 ;;
 17842                           
 17843                           
 17844                           ;psect for function _EUSART1_SetFramingErrorHandler
 17845  1BB7                     _EUSART1_SetFramingErrorHandler:
 17846  1BB7                     l4049:	
 17847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17848                           ;incstack = 0
 17849                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg+fsr1l+fsr1h]
 17850                           
 17851                           
 17852                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 17853                           ;stkvar	_interruptHandler @ sp[(0)+-2]
 17854  1BB7  3F7E               	moviw [-2]fsr1
 17855  1BB8  0141               	movlb	1	; select bank1
 17856  1BB9  00D6               	movwf	_EUSART1_FramingErrorHandler^(0+128)
 17857  1BBA  3F7F               	moviw [-1]fsr1
 17858  1BBB  00D7               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
 17859  1BBC                     l213:
 17860                           
 17861                           ; _EUSART1_SetFramingErrorHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 2, argsize = 2, vargsize = 0
 17862  1BBC  317E               	addfsr 1,-2
 17863  1BBD  0008               	return
 17864  1BBE                     __end_of_EUSART1_SetFramingErrorHandler:
 17865                           
 17866                           	psect	text64
 17867  1BB0                     __ptext64:	
 17868 ;; *************** function _EUSART1_SetErrorHandler *****************
 17869 ;; Defined at:
 17870 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 17871 ;; Parameters:    Size  Location     Type
 17872 ;;  interruptHan    2  [STACK] PTR FTN()void 
 17873 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 17874 ;; Auto vars:     Size  Location     Type
 17875 ;;		None
 17876 ;; Return value:  Size  Location     Type
 17877 ;;                  1    wreg      void 
 17878 ;; Registers used:
 17879 ;;		wreg, fsr1l, fsr1h
 17880 ;; Tracked objects:
 17881 ;;		On entry : 3F/1
 17882 ;;		On exit  : 3F/1
 17883 ;;		Unchanged: 0/0
 17884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17889 ;;Total ram usage:        0 bytes
 17890 ;; Hardware stack levels used:    1
 17891 ;; Hardware stack levels required when called:    8
 17892 ;; This function calls:
 17893 ;;		Nothing
 17894 ;; This function is called by:
 17895 ;;		_EUSART1_Initialize
 17896 ;; This function uses a reentrant model
 17897 ;;
 17898                           
 17899                           
 17900                           ;psect for function _EUSART1_SetErrorHandler
 17901  1BB0                     _EUSART1_SetErrorHandler:
 17902  1BB0                     l4053:	
 17903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17904                           ;incstack = 0
 17905                           ; Regs used in _EUSART1_SetErrorHandler: [wreg+fsr1l+fsr1h]
 17906                           
 17907                           
 17908                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 17909                           ;stkvar	_interruptHandler @ sp[(0)+-2]
 17910  1BB0  3F7E               	moviw [-2]fsr1
 17911  1BB1  0141               	movlb	1	; select bank1
 17912  1BB2  00D2               	movwf	_EUSART1_ErrorHandler^(0+128)
 17913  1BB3  3F7F               	moviw [-1]fsr1
 17914  1BB4  00D3               	movwf	(_EUSART1_ErrorHandler+1)^(0+128)
 17915  1BB5                     l219:
 17916                           
 17917                           ; _EUSART1_SetErrorHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 2, argsize = 2, vargsize = 0
 17918  1BB5  317E               	addfsr 1,-2
 17919  1BB6  0008               	return
 17920  1BB7                     __end_of_EUSART1_SetErrorHandler:
 17921                           
 17922                           	psect	text65
 17923  1BDA                     __ptext65:	
 17924 ;; *************** function _ADC_Initialize *****************
 17925 ;; Defined at:
 17926 ;;		line 65 in file "mcc_generated_files/adc.c"
 17927 ;; Parameters:    Size  Location     Type
 17928 ;;		None
 17929 ;; Auto vars:     Size  Location     Type
 17930 ;;		None
 17931 ;; Return value:  Size  Location     Type
 17932 ;;                  1    wreg      void 
 17933 ;; Registers used:
 17934 ;;		wreg, status,2
 17935 ;; Tracked objects:
 17936 ;;		On entry : 3F/E
 17937 ;;		On exit  : 3F/1
 17938 ;;		Unchanged: 0/0
 17939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17944 ;;Total ram usage:        0 bytes
 17945 ;; Hardware stack levels used:    1
 17946 ;; Hardware stack levels required when called:    8
 17947 ;; This function calls:
 17948 ;;		Nothing
 17949 ;; This function is called by:
 17950 ;;		_SYSTEM_Initialize
 17951 ;; This function uses a reentrant model
 17952 ;;
 17953                           
 17954                           
 17955                           ;psect for function _ADC_Initialize
 17956  1BDA                     _ADC_Initialize:
 17957  1BDA                     l2231:	
 17958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17959                           ;incstack = 0
 17960                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 17961                           
 17962                           
 17963                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
 17964  1BDA  3001               	movlw	1
 17965  1BDB  0141               	movlb	1	; select bank1
 17966  1BDC  009D               	movwf	29	;volatile
 17967                           
 17968                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0xA0;
 17969  1BDD  30A0               	movlw	160
 17970  1BDE  009E               	movwf	30	;volatile
 17971  1BDF                     l2233:
 17972                           
 17973                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
 17974  1BDF  019B               	clrf	27	;volatile
 17975  1BE0                     l2235:
 17976                           
 17977                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
 17978  1BE0  019C               	clrf	28	;volatile
 17979  1BE1                     l60:
 17980                           
 17981                           ; _ADC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 17982  1BE1  0008               	return
 17983  1BE2                     __end_of_ADC_Initialize:
 17984                           
 17985                           	psect	text66
 17986  1182                     __ptext66:	
 17987 ;; *************** function _RTC_Init *****************
 17988 ;; Defined at:
 17989 ;;		line 64 in file "src/pba_rtc.c"
 17990 ;; Parameters:    Size  Location     Type
 17991 ;;		None
 17992 ;; Auto vars:     Size  Location     Type
 17993 ;;  data            2  [STACK] unsigned char [2]
 17994 ;;  i2cWflag        1  [STACK] enum E8047
 17995 ;; Return value:  Size  Location     Type
 17996 ;;                  1    wreg      void 
 17997 ;; Registers used:
 17998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+2, btemp+3, btemp+10, btemp+11, pclath
 17999 ;; Tracked objects:
 18000 ;;		On entry : 3F/0
 18001 ;;		On exit  : 0/0
 18002 ;;		Unchanged: 0/0
 18003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18008 ;;Total ram usage:        0 bytes
 18009 ;; Hardware stack levels used:    1
 18010 ;; Hardware stack levels required when called:   11
 18011 ;; This function calls:
 18012 ;;		_I2C2_MasterWrite
 18013 ;; This function is called by:
 18014 ;;		_PBA_Init
 18015 ;; This function uses a reentrant model
 18016 ;;
 18017                           
 18018                           
 18019                           ;psect for function _RTC_Init
 18020  1182                     _RTC_Init:
 18021                           
 18022                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18023  1182  3143               	addfsr 1,3
 18024  1183                     l4671:	
 18025                           ;incstack = 0
 18026                           ; Regs used in _RTC_Init: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+2+btemp+3+btemp
      +                          +10+btemp+11+pclath]
 18027                           
 18028                           
 18029                           ;src/pba_rtc.c: 65:     I2C2_MESSAGE_STATUS i2cWflag = I2C2_MESSAGE_PENDING;
 18030  1183  3002               	movlw	2
 18031                           
 18032                           ;stkvar	_i2cWflag @ sp[(-3)+2]
 18033  1184  3FFF               	movwi [-1]fsr1
 18034  1185                     l4673:
 18035                           
 18036                           ;src/pba_rtc.c: 67:     uint8_t data[2] = {0x0E,0x00};
 18037  1185  0140               	movlb	0	; select bank0
 18038  1186  0863               	movf	RTC_Init@F8216+1,w
 18039  1187  00FF               	movwf	btemp+11
 18040  1188  0862               	movf	RTC_Init@F8216,w
 18041  1189  00FE               	movwf	btemp+10
 18042                           
 18043                           ;stkvar	_data @ sp[(-3)+0]
 18044  118A  087E               	movf	btemp+10,w
 18045  118B  3FFD               	movwi [-3]fsr1
 18046  118C  087F               	movf	btemp+11,w
 18047  118D  3FFE               	movwi [-2]fsr1
 18048  118E                     l4675:
 18049                           
 18050                           ;src/pba_rtc.c: 68:     I2C2_MasterWrite(data,2,0b01101000,&i2cWflag);
 18051                           ;stkvar	_i2cWflag @ sp[(-3)+2]
 18052  118E  30FF               	movlw	255
 18053  118F  0706               	addwf	6,w
 18054  1190  00F6               	movwf	btemp+2
 18055  1191  30FF               	movlw	255
 18056  1192  3D07               	addwfc	7,w
 18057  1193  00F7               	movwf	btemp+3
 18058  1194  0876               	movf	btemp+2,w
 18059  1195  001E               	movwi fsr1++
 18060  1196  0877               	movf	btemp+3,w
 18061  1197  001E               	movwi fsr1++
 18062  1198  3068               	movlw	104
 18063  1199  001E               	movwi fsr1++
 18064  119A  3000               	movlw	0
 18065  119B  001E               	movwi fsr1++
 18066  119C  3002               	movlw	2
 18067  119D  001E               	movwi fsr1++
 18068                           
 18069                           ;stkvar	_data @ sp[(-8)+0]
 18070  119E  30F8               	movlw	248
 18071  119F  0706               	addwf	6,w
 18072  11A0  00F6               	movwf	btemp+2
 18073  11A1  30FF               	movlw	255
 18074  11A2  3D07               	addwfc	7,w
 18075  11A3  00F7               	movwf	btemp+3
 18076  11A4  0876               	movf	btemp+2,w
 18077  11A5  001E               	movwi fsr1++
 18078  11A6  0877               	movf	btemp+3,w
 18079  11A7  001E               	movwi fsr1++
 18080  11A8  319F  2732  3191   	fcall	_I2C2_MasterWrite
 18081  11AB                     l4677:	
 18082                           ;src/pba_rtc.c: 69:     while(i2cWflag!=I2C2_MESSAGE_COMPLETE);
 18083                           
 18084                           
 18085                           ;stkvar	_i2cWflag @ sp[(-3)+2]
 18086  11AB  3F7F               	moviw [-1]fsr1
 18087  11AC  1D03               	btfss	3,2
 18088  11AD  29AF               	goto	u3601
 18089  11AE  29B0               	goto	u3600
 18090  11AF                     u3601:
 18091  11AF  29AB               	goto	l4677
 18092  11B0                     u3600:
 18093  11B0                     l950:
 18094                           
 18095                           ; _RTC_Init: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 18096  11B0  317D               	addfsr 1,-3
 18097  11B1  0008               	return
 18098  11B2                     __end_of_RTC_Init:
 18099                           
 18100                           	psect	text67
 18101  1F32                     __ptext67:	
 18102 ;; *************** function _I2C2_MasterWrite *****************
 18103 ;; Defined at:
 18104 ;;		line 600 in file "mcc_generated_files/i2c2.c"
 18105 ;; Parameters:    Size  Location     Type
 18106 ;;  pdata           2  [STACK] PTR unsigned char 
 18107 ;;		 -> data(1), data(2), data(2), data(2), 
 18108 ;;		 -> data(1), data(2), data(1), data(2), 
 18109 ;;		 -> data(1), data(2), 
 18110 ;;  length          1  [STACK] unsigned char 
 18111 ;;  address         2  [STACK] unsigned short 
 18112 ;;  pflag           2  [STACK] PTR enum E8045
 18113 ;;		 -> i2cWflag(1), i2cWflag(1), i2cWflag(1), i2cWflag(1), 
 18114 ;;		 -> i2cWflag(1), i2cWflag(1), i2cWflag(1), i2cWflag(1), 
 18115 ;;		 -> i2cWflag(1), i2cWflag(1), 
 18116 ;; Auto vars:     Size  Location     Type
 18117 ;;		None
 18118 ;; Return value:  Size  Location     Type
 18119 ;;                  1    wreg      void 
 18120 ;; Registers used:
 18121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11, pclath
 18122 ;; Tracked objects:
 18123 ;;		On entry : 0/0
 18124 ;;		On exit  : 31/0
 18125 ;;		Unchanged: 0/0
 18126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18131 ;;Total ram usage:        0 bytes
 18132 ;; Hardware stack levels used:    1
 18133 ;; Hardware stack levels required when called:   10
 18134 ;; This function calls:
 18135 ;;		_I2C2_MasterTRBInsert
 18136 ;;		_I2C2_MasterWriteTRBBuild
 18137 ;; This function is called by:
 18138 ;;		_RTC_Init
 18139 ;;		_RTC_GetSeconds
 18140 ;;		_RTC_SetSeconds
 18141 ;;		_RTC_GetMinutes
 18142 ;;		_RTC_SetMinutes
 18143 ;;		_RTC_GetHours
 18144 ;;		_RTC_SetHours
 18145 ;;		_RTC_ConvertTemp
 18146 ;;		_RTC_IsTempConvDone
 18147 ;;		_RTC_GetTemp
 18148 ;; This function uses a reentrant model
 18149 ;;
 18150                           
 18151                           
 18152                           ;psect for function _I2C2_MasterWrite
 18153  1F32                     _I2C2_MasterWrite:
 18154  1F32                     l4289:	
 18155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18156                           ;incstack = 0
 18157                           ; Regs used in _I2C2_MasterWrite: [wreg-fsr0h+fsr1l+fsr1h+status,2+status,0+btemp+10+bte
      +                          mp+11+pclath]
 18158                           
 18159                           
 18160                           ;mcc_generated_files/i2c2.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c2.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c2.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c2.c: 604:                                 I2C2_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c2.c: 605: {;mcc_generated_files/i2c2.c: 606:     static I2C2_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c2.c: 609:     if (i2c2_object.trStatus.s.full !
      +                          = 1)
 18161  1F32  0140               	movlb	0	; select bank0
 18162  1F33  1832               	btfsc	_i2c2_object+2,0
 18163  1F34  2F36               	goto	u3161
 18164  1F35  2F37               	goto	u3160
 18165  1F36                     u3161:
 18166  1F36  2F50               	goto	l4295
 18167  1F37                     u3160:
 18168  1F37                     l4291:
 18169                           
 18170                           ;mcc_generated_files/i2c2.c: 610:     {;mcc_generated_files/i2c2.c: 611:         I2C2_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 18171                           ;stkvar	_address @ sp[(0)+-5]
 18172  1F37  3F7B               	moviw [-5]fsr1
 18173  1F38  001E               	movwi fsr1++
 18174  1F39  3F7B               	moviw [-5]fsr1
 18175  1F3A  001E               	movwi fsr1++
 18176                           
 18177                           ;stkvar	_length @ sp[(-2)+-3]
 18178  1F3B  3F7B               	moviw [-5]fsr1
 18179  1F3C  001E               	movwi fsr1++
 18180                           
 18181                           ;stkvar	_pdata @ sp[(-3)+-2]
 18182  1F3D  3F7B               	moviw [-5]fsr1
 18183  1F3E  001E               	movwi fsr1++
 18184  1F3F  3F7B               	moviw [-5]fsr1
 18185  1F40  001E               	movwi fsr1++
 18186  1F41  3053               	movlw	(low (I2C2_MasterWrite@trBlock| 0))& (0+255)
 18187  1F42  319E  26C9  319F   	fcall	_I2C2_MasterWriteTRBBuild
 18188  1F45                     l4293:
 18189                           
 18190                           ;mcc_generated_files/i2c2.c: 612:         I2C2_MasterTRBInsert(1, &trBlock, pflag);
 18191                           ;stkvar	_pflag @ sp[(0)+-7]
 18192  1F45  3F79               	moviw [-7]fsr1
 18193  1F46  001E               	movwi fsr1++
 18194  1F47  3F79               	moviw [-7]fsr1
 18195  1F48  001E               	movwi fsr1++
 18196  1F49  3053               	movlw	(low (I2C2_MasterWrite@trBlock| 0))& (0+255)
 18197  1F4A  001E               	movwi fsr1++
 18198  1F4B  3001               	movlw	1
 18199  1F4C  3194  24E2  319F   	fcall	_I2C2_MasterTRBInsert
 18200                           
 18201                           ;mcc_generated_files/i2c2.c: 613:     }
 18202  1F4F  2F56               	goto	l425
 18203  1F50                     l4295:
 18204                           
 18205                           ;mcc_generated_files/i2c2.c: 615:     {;mcc_generated_files/i2c2.c: 616:         *pflag 
      +                          = I2C2_MESSAGE_FAIL;
 18206                           ;stkvar	_pflag @ sp[(0)+-7]
 18207  1F50  3F79               	moviw [-7]fsr1
 18208  1F51  0084               	movwf	4
 18209  1F52  3F7A               	moviw [-6]fsr1
 18210  1F53  0085               	movwf	5
 18211  1F54  0180               	clrf	0
 18212  1F55  0A80               	incf	0,f
 18213  1F56                     l425:
 18214                           
 18215                           ; _I2C2_MasterWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           7, argsize = 7, vargsize = 0
 18216  1F56  3179               	addfsr 1,-7
 18217  1F57  0008               	return
 18218  1F58                     __end_of_I2C2_MasterWrite:
 18219                           
 18220                           	psect	text68
 18221  1EC9                     __ptext68:	
 18222 ;; *************** function _I2C2_MasterWriteTRBBuild *****************
 18223 ;; Defined at:
 18224 ;;		line 721 in file "mcc_generated_files/i2c2.c"
 18225 ;; Parameters:    Size  Location     Type
 18226 ;;  ptrb            1    wreg     PTR struct .
 18227 ;;		 -> I2C2_MasterWrite@trBlock(5), 
 18228 ;;  pdata           2  [STACK] PTR unsigned char 
 18229 ;;		 -> data(1), data(2), data(2), data(2), 
 18230 ;;		 -> data(1), data(2), data(1), data(2), 
 18231 ;;		 -> data(1), data(2), 
 18232 ;;  length          1  [STACK] unsigned char 
 18233 ;;  address         2  [STACK] unsigned short 
 18234 ;; Auto vars:     Size  Location     Type
 18235 ;;  ptrb            1  [STACK] PTR struct .
 18236 ;;		 -> I2C2_MasterWrite@trBlock(5), 
 18237 ;; Return value:  Size  Location     Type
 18238 ;;                  1    wreg      void 
 18239 ;; Registers used:
 18240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
 18241 ;; Tracked objects:
 18242 ;;		On entry : 3F/0
 18243 ;;		On exit  : 0/0
 18244 ;;		Unchanged: 0/0
 18245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18250 ;;Total ram usage:        0 bytes
 18251 ;; Hardware stack levels used:    1
 18252 ;; Hardware stack levels required when called:    8
 18253 ;; This function calls:
 18254 ;;		Nothing
 18255 ;; This function is called by:
 18256 ;;		_I2C2_MasterWrite
 18257 ;; This function uses a reentrant model
 18258 ;;
 18259                           
 18260                           
 18261                           ;psect for function _I2C2_MasterWriteTRBBuild
 18262  1EC9                     _I2C2_MasterWriteTRBBuild:
 18263                           
 18264                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18265  1EC9  3141               	addfsr 1,1
 18266                           
 18267                           ;incstack = 0
 18268                           ; Regs used in _I2C2_MasterWriteTRBBuild: [wreg-fsr0h+fsr1l+fsr1h+status,2+status,0+btem
      +                          p+10+btemp+11]
 18269                           ;_ptrb stored from wreg
 18270                           ;stkvar	_ptrb @ sp[(-1)+0]
 18271  1ECA  3FFF               	movwi [-1]fsr1
 18272  1ECB                     l4055:
 18273                           
 18274                           ;mcc_generated_files/i2c2.c: 722:                                 I2C2_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c2.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c2.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c2.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c2.c: 726: {;mcc_generated_files/i2c2.c: 727:     ptrb->address = add
      +                          ress << 1;
 18275                           ;stkvar	_address @ sp[(-1)+-5]
 18276  1ECB  3F7A               	moviw [-6]fsr1
 18277  1ECC  00FE               	movwf	btemp+10
 18278  1ECD  3F7B               	moviw [-5]fsr1
 18279  1ECE  00FF               	movwf	btemp+11
 18280  1ECF  35FE               	lslf	btemp+10,f
 18281  1ED0  0DFF               	rlf	btemp+11,f
 18282                           
 18283                           ;stkvar	_ptrb @ sp[(-1)+0]
 18284  1ED1  3F7F               	moviw [-1]fsr1
 18285  1ED2  0084               	movwf	4
 18286  1ED3  0185               	clrf	5
 18287  1ED4  087E               	movf	wtemp5,w
 18288  1ED5  3F80               	movwi [0]fsr0
 18289  1ED6  087F               	movf	wtemp5+1,w
 18290  1ED7  3F81               	movwi [1]fsr0
 18291  1ED8                     l4057:
 18292                           
 18293                           ;mcc_generated_files/i2c2.c: 728:     ptrb->length = length;
 18294                           ;stkvar	_length @ sp[(-1)+-3]
 18295                           ;stkvar	_ptrb @ sp[(-1)+0]
 18296  1ED8  3F7F               	moviw [-1]fsr1
 18297  1ED9  00FF               	movwf	btemp+11
 18298  1EDA  087F               	movf	btemp+11,w
 18299  1EDB  3E02               	addlw	2
 18300  1EDC  0084               	movwf	4
 18301  1EDD  0185               	clrf	5
 18302  1EDE  3F7C               	moviw [-4]fsr1
 18303  1EDF  0080               	movwf	0
 18304  1EE0                     l4059:
 18305                           
 18306                           ;mcc_generated_files/i2c2.c: 729:     ptrb->pbuffer = pdata;
 18307                           ;stkvar	_pdata @ sp[(-1)+-2]
 18308                           ;stkvar	_ptrb @ sp[(-1)+0]
 18309  1EE0  3F7F               	moviw [-1]fsr1
 18310  1EE1  00FF               	movwf	btemp+11
 18311  1EE2  087F               	movf	btemp+11,w
 18312  1EE3  3E03               	addlw	3
 18313  1EE4  0084               	movwf	4
 18314  1EE5  0185               	clrf	5
 18315  1EE6  3F7D               	moviw [-3]fsr1
 18316  1EE7  3F80               	movwi [0]fsr0
 18317  1EE8  3F7E               	moviw [-2]fsr1
 18318  1EE9  3F81               	movwi [1]fsr0
 18319  1EEA                     l452:
 18320                           
 18321                           ; _I2C2_MasterWriteTRBBuild: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 5, argsize = 5, vargsize = 0
 18322  1EEA  317A               	addfsr 1,-6
 18323  1EEB  0008               	return
 18324  1EEC                     __end_of_I2C2_MasterWriteTRBBuild:
 18325                           
 18326                           	psect	text69
 18327  14E2                     __ptext69:	
 18328 ;; *************** function _I2C2_MasterTRBInsert *****************
 18329 ;; Defined at:
 18330 ;;		line 654 in file "mcc_generated_files/i2c2.c"
 18331 ;; Parameters:    Size  Location     Type
 18332 ;;  count           1    wreg     unsigned char 
 18333 ;;  ptrb_list       1  [STACK] PTR struct .
 18334 ;;		 -> I2C2_MasterRead@trBlock(5), I2C2_MasterWrite@trBlock(5), 
 18335 ;;  pflag           2  [STACK] PTR enum E8045
 18336 ;;		 -> i2cWflag(1), i2cWflag(1), i2cWflag(1), i2cWflag(1), 
 18337 ;;		 -> i2cWflag(1), i2cWflag(1), i2cWflag(1), i2cWflag(1), 
 18338 ;;		 -> i2cWflag(1), i2cWflag(1), 
 18339 ;; Auto vars:     Size  Location     Type
 18340 ;;  count           1  [STACK] unsigned char 
 18341 ;; Return value:  Size  Location     Type
 18342 ;;                  1    wreg      void 
 18343 ;; Registers used:
 18344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 18345 ;; Tracked objects:
 18346 ;;		On entry : 0/0
 18347 ;;		On exit  : 31/0
 18348 ;;		Unchanged: 0/0
 18349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18354 ;;Total ram usage:        0 bytes
 18355 ;; Hardware stack levels used:    1
 18356 ;; Hardware stack levels required when called:    9
 18357 ;; This function calls:
 18358 ;;		_I2C2_WaitForLastPacketToComplete
 18359 ;; This function is called by:
 18360 ;;		_I2C2_MasterWrite
 18361 ;;		_I2C2_MasterRead
 18362 ;; This function uses a reentrant model
 18363 ;;
 18364                           
 18365                           
 18366                           ;psect for function _I2C2_MasterTRBInsert
 18367  14E2                     _I2C2_MasterTRBInsert:
 18368                           
 18369                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18370  14E2  3141               	addfsr 1,1
 18371                           
 18372                           ;incstack = 0
 18373                           ; Regs used in _I2C2_MasterTRBInsert: [wreg-fsr0h+fsr1l+fsr1h+status,2+status,0+pclath]
 18374                           ;_count stored from wreg
 18375                           ;stkvar	_count @ sp[(-1)+0]
 18376  14E3  3FFF               	movwi [-1]fsr1
 18377  14E4                     l4061:
 18378                           
 18379                           ;mcc_generated_files/i2c2.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c2.c: 656:                                 I2C2_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c2.c: 657:                                 I2C2_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c2.c: 658: {;mcc_generated_files/i2c2.c: 661:   
      +                            if (i2c2_object.trStatus.s.full != 1)
 18380  14E4  0140               	movlb	0	; select bank0
 18381  14E5  1832               	btfsc	_i2c2_object+2,0
 18382  14E6  2CE8               	goto	u2831
 18383  14E7  2CE9               	goto	u2830
 18384  14E8                     u2831:
 18385  14E8  2D14               	goto	l4075
 18386  14E9                     u2830:
 18387  14E9                     l4063:
 18388                           
 18389                           ;mcc_generated_files/i2c2.c: 662:     {;mcc_generated_files/i2c2.c: 663:         *pflag 
      +                          = I2C2_MESSAGE_PENDING;
 18390                           ;stkvar	_pflag @ sp[(-1)+-3]
 18391  14E9  3F7C               	moviw [-4]fsr1
 18392  14EA  0084               	movwf	4
 18393  14EB  3F7D               	moviw [-3]fsr1
 18394  14EC  0085               	movwf	5
 18395  14ED  3002               	movlw	2
 18396  14EE  0080               	movwf	0
 18397                           
 18398                           ;mcc_generated_files/i2c2.c: 665:         i2c2_object.pTrTail->ptrb_list = ptrb_list;
 18399                           ;stkvar	_ptrb_list @ sp[(-1)+-1]
 18400  14EF  0A30               	incf	_i2c2_object,w
 18401  14F0  0084               	movwf	4
 18402  14F1  0185               	clrf	5
 18403  14F2  3F7E               	moviw [-2]fsr1
 18404  14F3  0080               	movwf	0
 18405                           
 18406                           ;mcc_generated_files/i2c2.c: 666:         i2c2_object.pTrTail->count = count;
 18407                           ;stkvar	_count @ sp[(-1)+0]
 18408  14F4  0830               	movf	_i2c2_object,w
 18409  14F5  0084               	movwf	4
 18410  14F6  0185               	clrf	5
 18411  14F7  3F7F               	moviw [-1]fsr1
 18412  14F8  0080               	movwf	0
 18413  14F9                     l4065:
 18414                           
 18415                           ;mcc_generated_files/i2c2.c: 667:         i2c2_object.pTrTail->pTrFlag = pflag;
 18416                           ;stkvar	_pflag @ sp[(-1)+-3]
 18417  14F9  0830               	movf	_i2c2_object,w
 18418  14FA  3E02               	addlw	2
 18419  14FB  0084               	movwf	4
 18420  14FC  0185               	clrf	5
 18421  14FD  3F7C               	moviw [-4]fsr1
 18422  14FE  3F80               	movwi [0]fsr0
 18423  14FF  3F7D               	moviw [-3]fsr1
 18424  1500  3F81               	movwi [1]fsr0
 18425  1501                     l4067:
 18426                           
 18427                           ;mcc_generated_files/i2c2.c: 668:         i2c2_object.pTrTail++;
 18428  1501  3004               	movlw	4
 18429  1502  07B0               	addwf	_i2c2_object,f
 18430                           
 18431                           ;mcc_generated_files/i2c2.c: 671:         if (i2c2_object.pTrTail == (i2c2_tr_queue + 1)
      +                          )
 18432  1503  0830               	movf	_i2c2_object,w
 18433  1504  3A5C               	xorlw	(low ((_i2c2_tr_queue| 0+4)))& (0+255)
 18434  1505  1D03               	skipz
 18435  1506  2D08               	goto	u2841
 18436  1507  2D09               	goto	u2840
 18437  1508                     u2841:
 18438  1508  2D0B               	goto	l4071
 18439  1509                     u2840:
 18440  1509                     l4069:
 18441                           
 18442                           ;mcc_generated_files/i2c2.c: 672:         {;mcc_generated_files/i2c2.c: 674:            
      +                           i2c2_object.pTrTail = i2c2_tr_queue;
 18443  1509  3058               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
 18444  150A  00B0               	movwf	_i2c2_object
 18445  150B                     l4071:
 18446                           
 18447                           ;mcc_generated_files/i2c2.c: 679:         i2c2_object.trStatus.s.empty = 0;
 18448  150B  10B2               	bcf	_i2c2_object+2,1
 18449                           
 18450                           ;mcc_generated_files/i2c2.c: 682:         if (i2c2_object.pTrHead == i2c2_object.pTrTail
      +                          )
 18451  150C  0831               	movf	low ((_i2c2_object| 0+1)),w
 18452  150D  0630               	xorwf	_i2c2_object,w
 18453  150E  1D03               	skipz
 18454  150F  2D11               	goto	u2851
 18455  1510  2D12               	goto	u2850
 18456  1511                     u2851:
 18457  1511  2D1A               	goto	l4077
 18458  1512                     u2850:
 18459  1512                     l4073:
 18460                           
 18461                           ;mcc_generated_files/i2c2.c: 683:         {;mcc_generated_files/i2c2.c: 685:            
      +                           i2c2_object.trStatus.s.full = 1;
 18462  1512  1432               	bsf	_i2c2_object+2,0
 18463  1513  2D1A               	goto	l4077
 18464  1514                     l4075:
 18465                           
 18466                           ;mcc_generated_files/i2c2.c: 690:     {;mcc_generated_files/i2c2.c: 691:         *pflag 
      +                          = I2C2_MESSAGE_FAIL;
 18467                           ;stkvar	_pflag @ sp[(-1)+-3]
 18468  1514  3F7C               	moviw [-4]fsr1
 18469  1515  0084               	movwf	4
 18470  1516  3F7D               	moviw [-3]fsr1
 18471  1517  0085               	movwf	5
 18472  1518  0180               	clrf	0
 18473  1519  0A80               	incf	0,f
 18474  151A                     l4077:
 18475                           
 18476                           ;mcc_generated_files/i2c2.c: 695:     if (*pflag == I2C2_MESSAGE_PENDING)
 18477                           ;stkvar	_pflag @ sp[(-1)+-3]
 18478  151A  3F7C               	moviw [-4]fsr1
 18479  151B  0084               	movwf	4
 18480  151C  3F7D               	moviw [-3]fsr1
 18481  151D  0085               	movwf	5
 18482  151E  3002               	movlw	2
 18483  151F  0600               	xorwf	0,w
 18484  1520  1D03               	btfss	3,2
 18485  1521  2D23               	goto	u2861
 18486  1522  2D24               	goto	u2860
 18487  1523                     u2861:
 18488  1523  2D29               	goto	l446
 18489  1524                     u2860:
 18490  1524                     l4079:
 18491                           
 18492                           ;mcc_generated_files/i2c2.c: 696:     {;mcc_generated_files/i2c2.c: 697:         I2C2_Wa
      +                          itForLastPacketToComplete();
 18493  1524  319B  23A9  3194   	fcall	_I2C2_WaitForLastPacketToComplete
 18494  1527                     l4081:
 18495                           
 18496                           ;mcc_generated_files/i2c2.c: 702:         PIR3bits.SSP2IF = 1;
 18497  1527  014E               	movlb	14	; select bank14
 18498  1528  150F               	bsf	15,2	;volatile
 18499  1529                     l446:
 18500                           
 18501                           ; _I2C2_MasterTRBInsert: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 3, argsize = 3, vargsize = 0
 18502  1529  317C               	addfsr 1,-4
 18503  152A  0008               	return
 18504  152B                     __end_of_I2C2_MasterTRBInsert:
 18505                           
 18506                           	psect	text70
 18507  1BA9                     __ptext70:	
 18508 ;; *************** function _I2C2_WaitForLastPacketToComplete *****************
 18509 ;; Defined at:
 18510 ;;		line 644 in file "mcc_generated_files/i2c2.c"
 18511 ;; Parameters:    Size  Location     Type
 18512 ;;		None
 18513 ;; Auto vars:     Size  Location     Type
 18514 ;;		None
 18515 ;; Return value:  Size  Location     Type
 18516 ;;                  1    wreg      void 
 18517 ;; Registers used:
 18518 ;;		wreg, status,2, status,0
 18519 ;; Tracked objects:
 18520 ;;		On entry : 3F/0
 18521 ;;		On exit  : 3F/0
 18522 ;;		Unchanged: 0/0
 18523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18528 ;;Total ram usage:        0 bytes
 18529 ;; Hardware stack levels used:    1
 18530 ;; Hardware stack levels required when called:    8
 18531 ;; This function calls:
 18532 ;;		Nothing
 18533 ;; This function is called by:
 18534 ;;		_I2C2_MasterTRBInsert
 18535 ;; This function uses a reentrant model
 18536 ;;
 18537                           
 18538                           
 18539                           ;psect for function _I2C2_WaitForLastPacketToComplete
 18540  1BA9                     _I2C2_WaitForLastPacketToComplete:
 18541  1BA9                     l3895:	
 18542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18543                           ;incstack = 0
 18544                           ; Regs used in _I2C2_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 18545                           
 18546  1BA9                     l3897:	
 18547                           ;mcc_generated_files/i2c2.c: 646:     while(i2c2_state != S_MASTER_IDLE)
 18548                           
 18549                           
 18550                           ;mcc_generated_files/i2c2.c: 646:     while(i2c2_state != S_MASTER_IDLE)
 18551  1BA9  0140               	movlb	0	; select bank0
 18552  1BAA  0849               	movf	_i2c2_state,w
 18553  1BAB  1D03               	btfss	3,2
 18554  1BAC  2BAE               	goto	u2511
 18555  1BAD  2BAF               	goto	u2510
 18556  1BAE                     u2511:
 18557  1BAE  2BA9               	goto	l3897
 18558  1BAF                     u2510:
 18559  1BAF                     l438:
 18560                           
 18561                           ; _I2C2_WaitForLastPacketToComplete: autosize = 0, savesize = 0, parsavesize = 0, tempsi
      +                          ze = 0 parsize = 0, argsize = 0, vargsize = 0
 18562  1BAF  0008               	return
 18563  1BB0                     __end_of_I2C2_WaitForLastPacketToComplete:
 18564                           
 18565                           	psect	text71
 18566  12AB                     __ptext71:	
 18567 ;; *************** function _OLED_Init *****************
 18568 ;; Defined at:
 18569 ;;		line 105 in file "src/pba_oled.c"
 18570 ;; Parameters:    Size  Location     Type
 18571 ;;		None
 18572 ;; Auto vars:     Size  Location     Type
 18573 ;;		None
 18574 ;; Return value:  Size  Location     Type
 18575 ;;                  1    wreg      void 
 18576 ;; Registers used:
 18577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11, pclath
 18578 ;; Tracked objects:
 18579 ;;		On entry : 31/E
 18580 ;;		On exit  : 3F/0
 18581 ;;		Unchanged: 0/0
 18582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18587 ;;Total ram usage:        0 bytes
 18588 ;; Hardware stack levels used:    1
 18589 ;; Hardware stack levels required when called:   10
 18590 ;; This function calls:
 18591 ;;		_SPI1_Exchange8bit
 18592 ;;		_Send
 18593 ;; This function is called by:
 18594 ;;		_PBA_Init
 18595 ;; This function uses a reentrant model
 18596 ;;
 18597                           
 18598                           
 18599                           ;psect for function _OLED_Init
 18600  12AB                     _OLED_Init:
 18601  12AB                     l835:	
 18602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18603                           ;incstack = 0
 18604                           ; Regs used in _OLED_Init: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+11+pclath]
 18605                           ;src/pba_oled.c: 106:     do { LATBbits.LATB5 = 1; } while(0);
 18606                           
 18607  12AB  0140               	movlb	0	; select bank0
 18608  12AC  1699               	bsf	25,5	;volatile
 18609  12AD                     l4645:
 18610                           
 18611                           ;src/pba_oled.c: 107:     _delay((unsigned long)((1)*(32000000/4000.0)));
 18612  12AD  300B               	movlw	11
 18613  12AE  00F4               	movwf	btemp
 18614  12AF  3062               	movlw	98
 18615  12B0                     u4597:
 18616  12B0  0B89               	decfsz	9,f
 18617  12B1  2AB0               	goto	u4597
 18618  12B2  0BF4               	decfsz	btemp,f
 18619  12B3  2AB0               	goto	u4597
 18620  12B4  3200               	nop2
 18621  12B5                     l4647:
 18622  12B5  0140               	movlb	0	; select bank0
 18623  12B6  1298               	bcf	24,5	;volatile
 18624  12B7                     l4649:
 18625                           
 18626                           ;src/pba_oled.c: 109:     SPI1_Exchange8bit(0b11111000);
 18627  12B7  30F8               	movlw	248
 18628  12B8  319C  2428  3192   	fcall	_SPI1_Exchange8bit
 18629  12BB                     l4651:
 18630                           
 18631                           ;src/pba_oled.c: 110:     Send(0x3A);
 18632  12BB  303A               	movlw	58
 18633  12BC  319D  25F4  3192   	fcall	_Send
 18634  12BF                     l4653:
 18635                           
 18636                           ;src/pba_oled.c: 111:     Send(0x09);
 18637  12BF  3009               	movlw	9
 18638  12C0  319D  25F4  3192   	fcall	_Send
 18639  12C3                     l4655:
 18640                           
 18641                           ;src/pba_oled.c: 112:     Send(0x72);
 18642  12C3  3072               	movlw	114
 18643  12C4  319D  25F4  3192   	fcall	_Send
 18644  12C7                     l4657:
 18645                           
 18646                           ;src/pba_oled.c: 114:     SPI1_Exchange8bit(0b11111010);
 18647  12C7  30FA               	movlw	250
 18648  12C8  319C  2428  3192   	fcall	_SPI1_Exchange8bit
 18649  12CB                     l4659:
 18650                           
 18651                           ;src/pba_oled.c: 115:     Send(0x04);
 18652  12CB  3004               	movlw	4
 18653  12CC  319D  25F4  3192   	fcall	_Send
 18654  12CF                     l4661:
 18655                           
 18656                           ;src/pba_oled.c: 117:     SPI1_Exchange8bit(0b11111000);
 18657  12CF  30F8               	movlw	248
 18658  12D0  319C  2428  3192   	fcall	_SPI1_Exchange8bit
 18659  12D3                     l4663:
 18660                           
 18661                           ;src/pba_oled.c: 118:     Send(0x38);
 18662  12D3  3038               	movlw	56
 18663  12D4  319D  25F4  3192   	fcall	_Send
 18664  12D7                     l4665:
 18665                           
 18666                           ;src/pba_oled.c: 119:     Send(0x01);
 18667  12D7  3001               	movlw	1
 18668  12D8  319D  25F4  3192   	fcall	_Send
 18669  12DB                     l4667:
 18670                           
 18671                           ;src/pba_oled.c: 120:     Send(0x0C);
 18672  12DB  300C               	movlw	12
 18673  12DC  319D  25F4  3192   	fcall	_Send
 18674  12DF                     l4669:
 18675  12DF  0140               	movlb	0	; select bank0
 18676  12E0  1698               	bsf	24,5	;volatile
 18677  12E1                     l841:
 18678                           
 18679                           ; _OLED_Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 18680  12E1  0008               	return
 18681  12E2                     __end_of_OLED_Init:
 18682                           
 18683                           	psect	text72
 18684  1BEA                     __ptext72:	
 18685 ;; *************** function _PBA_ConfigPrintf *****************
 18686 ;; Defined at:
 18687 ;;		line 94 in file "src/pba_config.c"
 18688 ;; Parameters:    Size  Location     Type
 18689 ;;  enableOLED      1    wreg     _Bool 
 18690 ;;  enableUART      1  [STACK] _Bool 
 18691 ;; Auto vars:     Size  Location     Type
 18692 ;;  enableOLED      1  [STACK] _Bool 
 18693 ;; Return value:  Size  Location     Type
 18694 ;;                  1    wreg      void 
 18695 ;; Registers used:
 18696 ;;		wreg, fsr1l, fsr1h
 18697 ;; Tracked objects:
 18698 ;;		On entry : 3F/0
 18699 ;;		On exit  : 3F/0
 18700 ;;		Unchanged: 0/0
 18701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18706 ;;Total ram usage:        0 bytes
 18707 ;; Hardware stack levels used:    1
 18708 ;; Hardware stack levels required when called:    8
 18709 ;; This function calls:
 18710 ;;		Nothing
 18711 ;; This function is called by:
 18712 ;;		_main
 18713 ;; This function uses a reentrant model
 18714 ;;
 18715                           
 18716                           
 18717                           ;psect for function _PBA_ConfigPrintf
 18718  1BEA                     _PBA_ConfigPrintf:
 18719                           
 18720                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18721  1BEA  3141               	addfsr 1,1
 18722                           
 18723                           ;incstack = 0
 18724                           ; Regs used in _PBA_ConfigPrintf: [wreg+fsr1l+fsr1h]
 18725                           ;_enableOLED stored from wreg
 18726                           ;stkvar	_enableOLED @ sp[(-1)+0]
 18727  1BEB  3FFF               	movwi [-1]fsr1
 18728  1BEC                     l5127:
 18729                           
 18730                           ;src/pba_config.c: 95:     printfEnableOLED = enableOLED;
 18731                           ;stkvar	_enableOLED @ sp[(-1)+0]
 18732  1BEC  3F7F               	moviw [-1]fsr1
 18733  1BED  0140               	movlb	0	; select bank0
 18734  1BEE  00E5               	movwf	_printfEnableOLED
 18735  1BEF                     l5129:
 18736                           
 18737                           ;src/pba_config.c: 96:     printfEnableUART = enableUART;
 18738                           ;stkvar	_enableUART @ sp[(-1)+-1]
 18739  1BEF  3F7E               	moviw [-2]fsr1
 18740  1BF0  00C3               	movwf	_printfEnableUART
 18741  1BF1                     l809:
 18742                           
 18743                           ; _PBA_ConfigPrintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 18744  1BF1  317E               	addfsr 1,-2
 18745  1BF2  0008               	return
 18746  1BF3                     __end_of_PBA_ConfigPrintf:
 18747                           
 18748                           	psect	text73
 18749  13CF                     __ptext73:	
 18750 ;; *************** function _OLED_SelectROM *****************
 18751 ;; Defined at:
 18752 ;;		line 271 in file "src/pba_oled.c"
 18753 ;; Parameters:    Size  Location     Type
 18754 ;;  oledROM         1    wreg     enum E8195
 18755 ;; Auto vars:     Size  Location     Type
 18756 ;;  oledROM         1  [STACK] enum E8195
 18757 ;; Return value:  Size  Location     Type
 18758 ;;                  1    wreg      void 
 18759 ;; Registers used:
 18760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11, pclath
 18761 ;; Tracked objects:
 18762 ;;		On entry : 3F/0
 18763 ;;		On exit  : 3F/0
 18764 ;;		Unchanged: 0/0
 18765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18770 ;;Total ram usage:        0 bytes
 18771 ;; Hardware stack levels used:    1
 18772 ;; Hardware stack levels required when called:   10
 18773 ;; This function calls:
 18774 ;;		_SPI1_Exchange8bit
 18775 ;;		_Send
 18776 ;; This function is called by:
 18777 ;;		_main
 18778 ;; This function uses a reentrant model
 18779 ;;
 18780                           
 18781                           
 18782                           ;psect for function _OLED_SelectROM
 18783  13CF                     _OLED_SelectROM:
 18784                           
 18785                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18786  13CF  3145               	addfsr 1,5
 18787                           
 18788                           ;incstack = 0
 18789                           ; Regs used in _OLED_SelectROM: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+11+pclath
      +                          ]
 18790                           ;_oledROM stored from wreg
 18791                           ;stkvar	_oledROM @ sp[(-5)+0]
 18792  13D0  3FFB               	movwi [-5]fsr1
 18793  13D1                     l906:	
 18794                           ;src/pba_oled.c: 272:     do { LATAbits.LATA5 = 0; } while(0);
 18795                           
 18796  13D1  0140               	movlb	0	; select bank0
 18797  13D2  1298               	bcf	24,5	;volatile
 18798  13D3                     l5043:
 18799                           
 18800                           ;src/pba_oled.c: 273:     SPI1_Exchange8bit(0b11111000);
 18801  13D3  30F8               	movlw	248
 18802  13D4  319C  2428  3193   	fcall	_SPI1_Exchange8bit
 18803  13D7                     l5045:
 18804                           
 18805                           ;src/pba_oled.c: 274:     Send(0x3A);
 18806  13D7  303A               	movlw	58
 18807  13D8  319D  25F4  3193   	fcall	_Send
 18808  13DB                     l5047:
 18809                           
 18810                           ;src/pba_oled.c: 275:     Send(0x72);
 18811  13DB  3072               	movlw	114
 18812  13DC  319D  25F4  3193   	fcall	_Send
 18813                           
 18814                           ;src/pba_oled.c: 277:     SPI1_Exchange8bit(0b11111010);
 18815  13DF  30FA               	movlw	250
 18816  13E0  319C  2428  3193   	fcall	_SPI1_Exchange8bit
 18817  13E3                     l5049:
 18818                           
 18819                           ;src/pba_oled.c: 278:     Send(oledROM == ROMA ? 0x00 : oledROM == ROMB ? 0x04 : 0x08);
 18820                           ;stkvar	_oledROM @ sp[(-5)+0]
 18821  13E3  3F7B               	moviw [-5]fsr1
 18822  13E4  1903               	btfsc	3,2
 18823  13E5  2BE7               	goto	u3991
 18824  13E6  2BE8               	goto	u3990
 18825  13E7                     u3991:
 18826  13E7  2BFC               	goto	l5057
 18827  13E8                     u3990:
 18828  13E8                     l5051:
 18829                           
 18830                           ;stkvar	_oledROM @ sp[(-5)+0]
 18831  13E8  3F7B               	moviw [-5]fsr1
 18832  13E9  3A01               	xorlw	1
 18833  13EA  1903               	btfsc	3,2
 18834  13EB  2BED               	goto	u4001
 18835  13EC  2BEE               	goto	u4000
 18836  13ED                     u4001:
 18837  13ED  2BF3               	goto	l5055
 18838  13EE                     u4000:
 18839  13EE                     l5053:
 18840                           
 18841                           ;stkvar	_OLED_SelectROM$1614 @ sp[(-5)+1]
 18842  13EE  3008               	movlw	8
 18843  13EF  3FFC               	movwi [-4]fsr1
 18844  13F0  3000               	movlw	0
 18845  13F1  3FFD               	movwi [-3]fsr1
 18846  13F2  2BF7               	goto	l915
 18847  13F3                     l5055:
 18848                           
 18849                           ;stkvar	_OLED_SelectROM$1614 @ sp[(-5)+1]
 18850  13F3  3004               	movlw	4
 18851  13F4  3FFC               	movwi [-4]fsr1
 18852  13F5  3000               	movlw	0
 18853  13F6  3FFD               	movwi [-3]fsr1
 18854  13F7                     l915:
 18855                           
 18856                           ;stkvar	_OLED_SelectROM$1614 @ sp[(-5)+1]
 18857                           ;stkvar	_OLED_SelectROM$1613 @ sp[(-5)+3]
 18858  13F7  3F7C               	moviw [-4]fsr1
 18859  13F8  3FFE               	movwi [-2]fsr1
 18860  13F9  3F7D               	moviw [-3]fsr1
 18861  13FA  3FFF               	movwi [-1]fsr1
 18862  13FB  2BFF               	goto	l5059
 18863  13FC                     l5057:
 18864                           
 18865                           ;stkvar	_OLED_SelectROM$1613 @ sp[(-5)+3]
 18866  13FC  3000               	movlw	0
 18867  13FD  3FFE               	movwi [-2]fsr1
 18868  13FE  3FFF               	movwi [-1]fsr1
 18869  13FF                     l5059:
 18870                           
 18871                           ;stkvar	_OLED_SelectROM$1613 @ sp[(-5)+3]
 18872  13FF  3F7E               	moviw [-2]fsr1
 18873  1400  319D  25F4  3193   	fcall	_Send
 18874  1403                     l5061:
 18875                           
 18876                           ;src/pba_oled.c: 279:     SPI1_Exchange8bit(0b11111000);
 18877  1403  30F8               	movlw	248
 18878  1404  319C  2428  3193   	fcall	_SPI1_Exchange8bit
 18879  1407                     l5063:
 18880                           
 18881                           ;src/pba_oled.c: 280:     Send(0x38);
 18882  1407  3038               	movlw	56
 18883  1408  319D  25F4  3193   	fcall	_Send
 18884  140B                     l5065:
 18885  140B  0140               	movlb	0	; select bank0
 18886  140C  1698               	bsf	24,5	;volatile
 18887  140D                     l918:
 18888                           
 18889                           ; _OLED_SelectROM: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 18890  140D  317B               	addfsr 1,-5
 18891  140E  0008               	return
 18892  140F                     __end_of_OLED_SelectROM:
 18893                           
 18894                           	psect	text74
 18895  1EA7                     __ptext74:	
 18896 ;; *************** function _OLED_CursorOn *****************
 18897 ;; Defined at:
 18898 ;;		line 289 in file "src/pba_oled.c"
 18899 ;; Parameters:    Size  Location     Type
 18900 ;;  cursor          1    wreg     _Bool 
 18901 ;; Auto vars:     Size  Location     Type
 18902 ;;  cursor          1  [STACK] _Bool 
 18903 ;; Return value:  Size  Location     Type
 18904 ;;                  1    wreg      void 
 18905 ;; Registers used:
 18906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11, pclath
 18907 ;; Tracked objects:
 18908 ;;		On entry : 0/0
 18909 ;;		On exit  : 3F/0
 18910 ;;		Unchanged: 0/0
 18911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18916 ;;Total ram usage:        0 bytes
 18917 ;; Hardware stack levels used:    1
 18918 ;; Hardware stack levels required when called:   10
 18919 ;; This function calls:
 18920 ;;		_SPI1_Exchange8bit
 18921 ;;		_Send
 18922 ;; This function is called by:
 18923 ;;		_main
 18924 ;; This function uses a reentrant model
 18925 ;;
 18926                           
 18927                           
 18928                           ;psect for function _OLED_CursorOn
 18929  1EA7                     _OLED_CursorOn:
 18930                           
 18931                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18932  1EA7  3143               	addfsr 1,3
 18933                           
 18934                           ;incstack = 0
 18935                           ; Regs used in _OLED_CursorOn: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+11+pclath]
 18936                           ;_cursor stored from wreg
 18937                           ;stkvar	_cursor @ sp[(-3)+0]
 18938  1EA8  3FFD               	movwi [-3]fsr1
 18939  1EA9                     l921:	
 18940                           ;src/pba_oled.c: 290:     do { LATAbits.LATA5 = 0; } while(0);
 18941                           
 18942  1EA9  0140               	movlb	0	; select bank0
 18943  1EAA  1298               	bcf	24,5	;volatile
 18944  1EAB                     l5113:
 18945                           
 18946                           ;src/pba_oled.c: 291:     SPI1_Exchange8bit(0b11111000);
 18947  1EAB  30F8               	movlw	248
 18948  1EAC  319C  2428  319E   	fcall	_SPI1_Exchange8bit
 18949  1EAF                     l5115:
 18950                           
 18951                           ;src/pba_oled.c: 292:     Send(0x38);
 18952  1EAF  3038               	movlw	56
 18953  1EB0  319D  25F4  319E   	fcall	_Send
 18954  1EB3                     l5117:
 18955                           
 18956                           ;src/pba_oled.c: 293:     Send(cursor ? 0x0D : 0x0C);
 18957                           ;stkvar	_cursor @ sp[(-3)+0]
 18958  1EB3  3F7D               	moviw [-3]fsr1
 18959  1EB4  1D03               	btfss	3,2
 18960  1EB5  2EB7               	goto	u4071
 18961  1EB6  2EB8               	goto	u4070
 18962  1EB7                     u4071:
 18963  1EB7  2EBD               	goto	l5121
 18964  1EB8                     u4070:
 18965  1EB8                     l5119:
 18966                           
 18967                           ;stkvar	_OLED_CursorOn$1617 @ sp[(-3)+1]
 18968  1EB8  300C               	movlw	12
 18969  1EB9  3FFE               	movwi [-2]fsr1
 18970  1EBA  3000               	movlw	0
 18971  1EBB  3FFF               	movwi [-1]fsr1
 18972  1EBC  2EC1               	goto	l5123
 18973  1EBD                     l5121:
 18974                           
 18975                           ;stkvar	_OLED_CursorOn$1617 @ sp[(-3)+1]
 18976  1EBD  300D               	movlw	13
 18977  1EBE  3FFE               	movwi [-2]fsr1
 18978  1EBF  3000               	movlw	0
 18979  1EC0  3FFF               	movwi [-1]fsr1
 18980  1EC1                     l5123:
 18981                           
 18982                           ;stkvar	_OLED_CursorOn$1617 @ sp[(-3)+1]
 18983  1EC1  3F7E               	moviw [-2]fsr1
 18984  1EC2  319D  25F4  319E   	fcall	_Send
 18985  1EC5                     l5125:
 18986  1EC5  0140               	movlb	0	; select bank0
 18987  1EC6  1698               	bsf	24,5	;volatile
 18988  1EC7                     l929:
 18989                           
 18990                           ; _OLED_CursorOn: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 18991  1EC7  317D               	addfsr 1,-3
 18992  1EC8  0008               	return
 18993  1EC9                     __end_of_OLED_CursorOn:
 18994                           
 18995                           	psect	text75
 18996  1DF4                     __ptext75:	
 18997 ;; *************** function _Send *****************
 18998 ;; Defined at:
 18999 ;;		line 325 in file "src/pba_oled.c"
 19000 ;; Parameters:    Size  Location     Type
 19001 ;;  data            1    wreg     unsigned char 
 19002 ;; Auto vars:     Size  Location     Type
 19003 ;;  data            1  [STACK] unsigned char 
 19004 ;; Return value:  Size  Location     Type
 19005 ;;                  1    wreg      void 
 19006 ;; Registers used:
 19007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+11, pclath
 19008 ;; Tracked objects:
 19009 ;;		On entry : 3F/3
 19010 ;;		On exit  : 3F/3
 19011 ;;		Unchanged: 0/0
 19012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19017 ;;Total ram usage:        0 bytes
 19018 ;; Hardware stack levels used:    1
 19019 ;; Hardware stack levels required when called:    9
 19020 ;; This function calls:
 19021 ;;		_SPI1_Exchange8bit
 19022 ;; This function is called by:
 19023 ;;		_OLED_Init
 19024 ;;		_OLED_Putc
 19025 ;;		_OLED_GotoXY
 19026 ;;		_OLED_Clear
 19027 ;;		_OLED_SelectROM
 19028 ;;		_OLED_CursorOn
 19029 ;; This function uses a reentrant model
 19030 ;;
 19031                           
 19032                           
 19033                           ;psect for function _Send
 19034  1DF4                     _Send:
 19035                           
 19036                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19037  1DF4  3141               	addfsr 1,1
 19038                           
 19039                           ;incstack = 0
 19040 ;; hardware stack exceeded
 19041                           ; Regs used in _Send: [wreg-fsr0h+fsr1l+fsr1h+status,2+status,0+btemp+11+pclath]
 19042                           ;_data stored from wreg
 19043                           ;stkvar	_data @ sp[(-1)+0]
 19044  1DF5  3FFF               	movwi [-1]fsr1
 19045  1DF6                     l4089:
 19046                           
 19047                           ;src/pba_oled.c: 326:     data = BitReverseTable256[data];
 19048                           ;stkvar	_data @ sp[(-1)+0]
 19049  1DF6  3F7F               	moviw [-1]fsr1
 19050  1DF7  3E00               	addlw	low (_BitReverseTable256| (0+32768))
 19051  1DF8  0084               	movwf	4
 19052  1DF9  3090               	movlw	high (_BitReverseTable256| (0+32768))
 19053  1DFA  1803               	skipnc
 19054  1DFB  3E01               	addlw	1
 19055  1DFC  0085               	movwf	5
 19056  1DFD  0800               	movf	0,w	;code access
 19057                           
 19058                           ;stkvar	_data @ sp[(-1)+0]
 19059  1DFE  3FFF               	movwi [-1]fsr1
 19060  1DFF                     l4091:
 19061                           
 19062                           ;src/pba_oled.c: 327:     SPI1_Exchange8bit(data&0xF0);
 19063                           ;stkvar	_data @ sp[(-1)+0]
 19064  1DFF  3F7F               	moviw [-1]fsr1
 19065  1E00  39F0               	andlw	240
 19066  1E01  319C  2428  319D   	fcall	_SPI1_Exchange8bit
 19067  1E04                     l4093:
 19068                           
 19069                           ;src/pba_oled.c: 328:     SPI1_Exchange8bit((data<<4)&0xF0);
 19070                           ;stkvar	_data @ sp[(-1)+0]
 19071  1E04  3F7F               	moviw [-1]fsr1
 19072  1E05  00FF               	movwf	btemp+11
 19073  1E06  0E7F               	swapf	btemp+11,w
 19074  1E07  39F0               	andlw	240
 19075  1E08  00FF               	movwf	btemp+11
 19076  1E09  087F               	movf	btemp+11,w
 19077  1E0A  39F0               	andlw	240
 19078  1E0B  319C  2428  319D   	fcall	_SPI1_Exchange8bit
 19079  1E0E                     l934:
 19080                           
 19081                           ; _Send: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize 
      +                          = 0, vargsize = 0
 19082  1E0E  317F               	addfsr 1,-1
 19083  1E0F  0008               	return
 19084  1E10                     __end_of_Send:
 19085                           
 19086                           	psect	text76
 19087  1C28                     __ptext76:	
 19088 ;; *************** function _SPI1_Exchange8bit *****************
 19089 ;; Defined at:
 19090 ;;		line 79 in file "mcc_generated_files/spi1.c"
 19091 ;; Parameters:    Size  Location     Type
 19092 ;;  data            1    wreg     unsigned char 
 19093 ;; Auto vars:     Size  Location     Type
 19094 ;;  data            1  [STACK] unsigned char 
 19095 ;; Return value:  Size  Location     Type
 19096 ;;                  1    wreg      unsigned char 
 19097 ;; Registers used:
 19098 ;;		wreg, fsr1l, fsr1h
 19099 ;; Tracked objects:
 19100 ;;		On entry : 0/0
 19101 ;;		On exit  : 3F/3
 19102 ;;		Unchanged: 0/0
 19103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19108 ;;Total ram usage:        0 bytes
 19109 ;; Hardware stack levels used:    1
 19110 ;; Hardware stack levels required when called:    8
 19111 ;; This function calls:
 19112 ;;		Nothing
 19113 ;; This function is called by:
 19114 ;;		_OLED_Init
 19115 ;;		_OLED_Putc
 19116 ;;		_OLED_GotoXY
 19117 ;;		_OLED_Clear
 19118 ;;		_OLED_SelectROM
 19119 ;;		_OLED_CursorOn
 19120 ;;		_Send
 19121 ;; This function uses a reentrant model
 19122 ;;
 19123                           
 19124                           
 19125                           ;psect for function _SPI1_Exchange8bit
 19126  1C28                     _SPI1_Exchange8bit:
 19127                           
 19128                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19129  1C28  3141               	addfsr 1,1
 19130                           
 19131                           ;incstack = 0
 19132 ;; hardware stack exceeded
 19133                           ; Regs used in _SPI1_Exchange8bit: [wreg+fsr1l+fsr1h]
 19134                           ;_data stored from wreg
 19135                           ;stkvar	_data @ sp[(-1)+0]
 19136  1C29  3FFF               	movwi [-1]fsr1
 19137  1C2A                     l3887:
 19138                           
 19139                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SSP1CON1bits.WCOL = 0;
 19140  1C2A  0143               	movlb	3	; select bank3
 19141  1C2B  1390               	bcf	16,7	;volatile
 19142  1C2C                     l3889:
 19143                           
 19144                           ;mcc_generated_files/spi1.c: 84:     SSP1BUF = data;
 19145                           ;stkvar	_data @ sp[(-1)+0]
 19146  1C2C  3F7F               	moviw [-1]fsr1
 19147  1C2D  008C               	movwf	12	;volatile
 19148  1C2E                     l18:	
 19149                           ;mcc_generated_files/spi1.c: 87:     {;mcc_generated_files/spi1.c: 88:     }
 19150                           
 19151                           
 19152                           ;mcc_generated_files/spi1.c: 86:     while(SSP1STATbits.BF == 0x0)
 19153  1C2E  1C0F               	btfss	15,0	;volatile
 19154  1C2F  2C31               	goto	u2501
 19155  1C30  2C32               	goto	u2500
 19156  1C31                     u2501:
 19157  1C31  2C2E               	goto	l18
 19158  1C32                     u2500:
 19159  1C32                     l3891:
 19160                           
 19161                           ;mcc_generated_files/spi1.c: 90:     return (SSP1BUF);
 19162  1C32  080C               	movf	12,w	;volatile
 19163  1C33                     l21:
 19164                           
 19165                           ; _SPI1_Exchange8bit: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 19166  1C33  317F               	addfsr 1,-1
 19167  1C34  0008               	return
 19168  1C35                     __end_of_SPI1_Exchange8bit:
 19169                           
 19170                           	psect	text77
 19171  12E2                     __ptext77:	
 19172 ;; *************** function _BTN_GetPosEdge *****************
 19173 ;; Defined at:
 19174 ;;		line 59 in file "src/pba_btn.c"
 19175 ;; Parameters:    Size  Location     Type
 19176 ;;  button          1    wreg     unsigned char 
 19177 ;; Auto vars:     Size  Location     Type
 19178 ;;  button          1  [STACK] unsigned char 
 19179 ;;  posEdge         1  [STACK] _Bool 
 19180 ;; Return value:  Size  Location     Type
 19181 ;;                  1    wreg      _Bool 
 19182 ;; Registers used:
 19183 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11, pclath
 19184 ;; Tracked objects:
 19185 ;;		On entry : 0/0
 19186 ;;		On exit  : 3F/0
 19187 ;;		Unchanged: 0/0
 19188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19193 ;;Total ram usage:        0 bytes
 19194 ;; Hardware stack levels used:    1
 19195 ;; Hardware stack levels required when called:    9
 19196 ;; This function calls:
 19197 ;;		_BitTest
 19198 ;; This function is called by:
 19199 ;;		_main
 19200 ;; This function uses a reentrant model
 19201 ;;
 19202                           
 19203                           
 19204                           ;psect for function _BTN_GetPosEdge
 19205  12E2                     _BTN_GetPosEdge:
 19206                           
 19207                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19208  12E2  3142               	addfsr 1,2
 19209                           
 19210                           ;incstack = 0
 19211                           ; Regs used in _BTN_GetPosEdge: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+10+btemp+11+pc
      +                          lath]
 19212                           ;_button stored from wreg
 19213                           ;stkvar	_button @ sp[(-2)+0]
 19214  12E3  3FFE               	movwi [-2]fsr1
 19215  12E4                     l4931:
 19216                           
 19217                           ;src/pba_btn.c: 60:     static uint8_t flags = 0xFF;;src/pba_btn.c: 61:     _Bool posEdg
      +                          e = 0;
 19218                           ;stkvar	_posEdge @ sp[(-2)+1]
 19219  12E4  3000               	movlw	0
 19220  12E5  3FFF               	movwi [-1]fsr1
 19221  12E6                     l4933:
 19222                           
 19223                           ;src/pba_btn.c: 63:     if(BitTest(PORTC,button)&&!BitTest(flags,button)){
 19224                           ;stkvar	_button @ sp[(-2)+0]
 19225  12E6  3F7E               	moviw [-2]fsr1
 19226  12E7  001E               	movwi fsr1++
 19227  12E8  0140               	movlb	0	; select bank0
 19228  12E9  080E               	movf	14,w	;volatile
 19229  12EA  319D  2546  3192   	fcall	_BitTest
 19230  12ED  3A00               	xorlw	0
 19231  12EE  1903               	skipnz
 19232  12EF  2AF1               	goto	u3851
 19233  12F0  2AF2               	goto	u3850
 19234  12F1                     u3851:
 19235  12F1  2B00               	goto	l4939
 19236  12F2                     u3850:
 19237  12F2                     l4935:
 19238                           
 19239                           ;stkvar	_button @ sp[(-2)+0]
 19240  12F2  3F7E               	moviw [-2]fsr1
 19241  12F3  001E               	movwi fsr1++
 19242  12F4  0140               	movlb	0	; select bank0
 19243  12F5  0866               	movf	BTN_GetPosEdge@flags,w
 19244  12F6  319D  2546  3192   	fcall	_BitTest
 19245  12F9  3A00               	xorlw	0
 19246  12FA  1D03               	skipz
 19247  12FB  2AFD               	goto	u3861
 19248  12FC  2AFE               	goto	u3860
 19249  12FD                     u3861:
 19250  12FD  2B00               	goto	l4939
 19251  12FE                     u3860:
 19252  12FE                     l4937:
 19253                           
 19254                           ;src/pba_btn.c: 64:         posEdge = 1;
 19255  12FE  3001               	movlw	1
 19256                           
 19257                           ;stkvar	_posEdge @ sp[(-2)+1]
 19258  12FF  3FFF               	movwi [-1]fsr1
 19259  1300                     l4939:
 19260                           
 19261                           ;src/pba_btn.c: 68:     flags |= PORTC & (1<<button);
 19262  1300  3001               	movlw	1
 19263  1301  00FF               	movwf	btemp+11
 19264                           
 19265                           ;stkvar	_button @ sp[(-2)+0]
 19266  1302  3F7E               	moviw [-2]fsr1
 19267  1303  0A89               	incf	9,f
 19268  1304  2B06               	goto	u3874
 19269  1305                     u3875:
 19270  1305  35FF               	lslf	btemp+11,f
 19271  1306                     u3874:
 19272  1306  0B89               	decfsz	9,f
 19273  1307  2B05               	goto	u3875
 19274  1308  087F               	movf	btemp+11,w
 19275  1309  0140               	movlb	0	; select bank0
 19276  130A  050E               	andwf	14,w	;volatile
 19277  130B  04E6               	iorwf	BTN_GetPosEdge@flags,f
 19278  130C                     l4941:
 19279                           
 19280                           ;src/pba_btn.c: 69:     flags &= PORTC | (~(1<<button));
 19281  130C  3001               	movlw	1
 19282  130D  00FF               	movwf	btemp+11
 19283                           
 19284                           ;stkvar	_button @ sp[(-2)+0]
 19285  130E  3F7E               	moviw [-2]fsr1
 19286  130F  0A89               	incf	9,f
 19287  1310  2B12               	goto	u3884
 19288  1311                     u3885:
 19289  1311  35FF               	lslf	btemp+11,f
 19290  1312                     u3884:
 19291  1312  0B89               	decfsz	9,f
 19292  1313  2B11               	goto	u3885
 19293  1314  087F               	movf	btemp+11,w
 19294  1315  3AFF               	xorlw	255
 19295  1316  040E               	iorwf	14,w	;volatile
 19296  1317  05E6               	andwf	BTN_GetPosEdge@flags,f
 19297  1318                     l4943:
 19298                           
 19299                           ;src/pba_btn.c: 70:     return posEdge;
 19300                           ;stkvar	_posEdge @ sp[(-2)+1]
 19301  1318  3F7F               	moviw [-1]fsr1
 19302  1319                     l760:
 19303                           
 19304                           ; _BTN_GetPosEdge: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 19305  1319  317E               	addfsr 1,-2
 19306  131A  0008               	return
 19307  131B                     __end_of_BTN_GetPosEdge:
 19308                           
 19309                           	psect	text78
 19310  1D46                     __ptext78:	
 19311 ;; *************** function _BitTest *****************
 19312 ;; Defined at:
 19313 ;;		line 113 in file "src/pba_btn.c"
 19314 ;; Parameters:    Size  Location     Type
 19315 ;;  reg             1    wreg     unsigned char 
 19316 ;;  bitNumber       1  [STACK] unsigned char 
 19317 ;; Auto vars:     Size  Location     Type
 19318 ;;  reg             1  [STACK] unsigned char 
 19319 ;; Return value:  Size  Location     Type
 19320 ;;                  1    wreg      _Bool 
 19321 ;; Registers used:
 19322 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
 19323 ;; Tracked objects:
 19324 ;;		On entry : 3F/0
 19325 ;;		On exit  : 0/0
 19326 ;;		Unchanged: 0/0
 19327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19332 ;;Total ram usage:        0 bytes
 19333 ;; Hardware stack levels used:    1
 19334 ;; Hardware stack levels required when called:    8
 19335 ;; This function calls:
 19336 ;;		Nothing
 19337 ;; This function is called by:
 19338 ;;		_BTN_GetPosEdge
 19339 ;; This function uses a reentrant model
 19340 ;;
 19341                           
 19342                           
 19343                           ;psect for function _BitTest
 19344  1D46                     _BitTest:
 19345                           
 19346                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19347  1D46  3141               	addfsr 1,1
 19348                           
 19349                           ;incstack = 0
 19350                           ; Regs used in _BitTest: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+10+btemp+11]
 19351                           ;_reg stored from wreg
 19352                           ;stkvar	_reg @ sp[(-1)+0]
 19353  1D47  3FFF               	movwi [-1]fsr1
 19354  1D48                     l4633:
 19355                           
 19356                           ;src/pba_btn.c: 114:     if(reg & (1 << bitNumber))
 19357                           ;stkvar	_reg @ sp[(-1)+0]
 19358  1D48  3F7F               	moviw [-1]fsr1
 19359  1D49  00FF               	movwf	btemp+11
 19360  1D4A  3001               	movlw	1
 19361  1D4B  00FE               	movwf	btemp+10
 19362                           
 19363                           ;stkvar	_bitNumber @ sp[(-1)+-1]
 19364  1D4C  3F7E               	moviw [-2]fsr1
 19365  1D4D  0A89               	incf	9,f
 19366  1D4E  2D50               	goto	u3584
 19367  1D4F                     u3585:
 19368  1D4F  35FE               	lslf	btemp+10,f
 19369  1D50                     u3584:
 19370  1D50  0B89               	decfsz	9,f
 19371  1D51  2D4F               	goto	u3585
 19372  1D52  087E               	movf	btemp+10,w
 19373  1D53  057F               	andwf	btemp+11,w
 19374  1D54  1903               	btfsc	3,2
 19375  1D55  2D57               	goto	u3591
 19376  1D56  2D58               	goto	u3590
 19377  1D57                     u3591:
 19378  1D57  2D5A               	goto	l4641
 19379  1D58                     u3590:
 19380  1D58                     l4635:
 19381                           
 19382                           ;src/pba_btn.c: 115:         return 1;
 19383  1D58  3001               	movlw	1
 19384  1D59  2D5B               	goto	l775
 19385  1D5A                     l4641:
 19386                           
 19387                           ;src/pba_btn.c: 117:         return 0;
 19388  1D5A  3000               	movlw	0
 19389  1D5B                     l775:
 19390                           
 19391                           ; _BitTest: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsi
      +                          ze = 1, vargsize = 0
 19392  1D5B  317E               	addfsr 1,-2
 19393  1D5C  0008               	return
 19394  1D5D                     __end_of_BitTest:
 19395                           
 19396                           	psect	text79
 19397  1E2C                     __ptext79:	
 19398 ;; *************** function _ADC_GetConversion *****************
 19399 ;; Defined at:
 19400 ;;		line 110 in file "mcc_generated_files/adc.c"
 19401 ;; Parameters:    Size  Location     Type
 19402 ;;  channel         1    wreg     enum E8049
 19403 ;; Auto vars:     Size  Location     Type
 19404 ;;  channel         1  [STACK] enum E8049
 19405 ;; Return value:  Size  Location     Type
 19406 ;;                  2  [STACK] unsigned short 
 19407 ;; Registers used:
 19408 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+11
 19409 ;; Tracked objects:
 19410 ;;		On entry : 0/0
 19411 ;;		On exit  : 3F/1
 19412 ;;		Unchanged: 0/0
 19413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19418 ;;Total ram usage:        0 bytes
 19419 ;; Hardware stack levels used:    1
 19420 ;; Hardware stack levels required when called:    8
 19421 ;; This function calls:
 19422 ;;		Nothing
 19423 ;; This function is called by:
 19424 ;;		_main
 19425 ;; This function uses a reentrant model
 19426 ;;
 19427                           
 19428                           
 19429                           ;psect for function _ADC_GetConversion
 19430  1E2C                     _ADC_GetConversion:
 19431                           
 19432                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19433  1E2C  3141               	addfsr 1,1
 19434                           
 19435                           ;incstack = 0
 19436                           ; Regs used in _ADC_GetConversion: [wreg+fsr1l+fsr1h+status,2-btemp+1+btemp+11]
 19437                           ;_channel stored from wreg
 19438                           ;stkvar	_channel @ sp[(-1)+0]
 19439  1E2D  3FFF               	movwi [-1]fsr1
 19440  1E2E                     l2871:
 19441                           
 19442                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
 19443                           ;stkvar	_channel @ sp[(-1)+0]
 19444  1E2E  3F7F               	moviw [-1]fsr1
 19445  1E2F  00FF               	movwf	btemp+11
 19446  1E30  0DFF               	rlf	btemp+11,f
 19447  1E31  0DFF               	rlf	btemp+11,f
 19448  1E32  0141               	movlb	1	; select bank1
 19449  1E33  081D               	movf	29,w	;volatile
 19450  1E34  067F               	xorwf	btemp+11,w
 19451  1E35  3903               	andlw	-253
 19452  1E36  067F               	xorwf	btemp+11,w
 19453  1E37  009D               	movwf	29	;volatile
 19454  1E38                     l2873:
 19455                           
 19456                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
 19457  1E38  141D               	bsf	29,0	;volatile
 19458  1E39                     l2875:
 19459                           
 19460                           ;mcc_generated_files/adc.c: 119:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 19461  1E39  300D               	movlw	13
 19462  1E3A                     u4607:
 19463  1E3A  0B89               	decfsz	9,f
 19464  1E3B  2E3A               	goto	u4607
 19465  1E3C  0000               	nop
 19466  1E3D                     l2877:
 19467                           
 19468                           ;mcc_generated_files/adc.c: 122:     ADCON0bits.GO = 1;
 19469  1E3D  0141               	movlb	1	; select bank1
 19470  1E3E  149D               	bsf	29,1	;volatile
 19471  1E3F                     l75:	
 19472                           ;mcc_generated_files/adc.c: 126:     {;mcc_generated_files/adc.c: 127:     }
 19473                           
 19474                           
 19475                           ;mcc_generated_files/adc.c: 125:     while (ADCON0bits.GO)
 19476  1E3F  189D               	btfsc	29,1	;volatile
 19477  1E40  2E42               	goto	u1321
 19478  1E41  2E43               	goto	u1320
 19479  1E42                     u1321:
 19480  1E42  2E3F               	goto	l75
 19481  1E43                     u1320:
 19482  1E43                     l2879:
 19483                           
 19484                           ;mcc_generated_files/adc.c: 130:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 19485  1E43  081C               	movf	28,w	;volatile
 19486  1E44  00F5               	movwf	btemp+1
 19487  1E45  081B               	movf	27,w	;volatile
 19488  1E46  00F4               	movwf	btemp
 19489  1E47                     l78:
 19490                           
 19491                           ; _ADC_GetConversion: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 19492  1E47  317F               	addfsr 1,-1
 19493  1E48  0008               	return
 19494  1E49                     __end_of_ADC_GetConversion:
 19495                           
 19496                           	psect	intentry
 19497  0004                     __pintentry:	
 19498 ;; *************** function _INTERRUPT_InterruptManager *****************
 19499 ;; Defined at:
 19500 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 19501 ;; Parameters:    Size  Location     Type
 19502 ;;		None
 19503 ;; Auto vars:     Size  Location     Type
 19504 ;;		None
 19505 ;; Return value:  Size  Location     Type
 19506 ;;                  1    wreg      void 
 19507 ;; Registers used:
 19508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+8, btemp+9, btemp+10, btemp+11, pclath
 19509 ;; Tracked objects:
 19510 ;;		On entry : 0/0
 19511 ;;		On exit  : 3F/0
 19512 ;;		Unchanged: 0/0
 19513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19516 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19517 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19518 ;;Total ram usage:        5 bytes
 19519 ;; Hardware stack levels used:    1
 19520 ;; Hardware stack levels required when called:    7
 19521 ;; This function calls:
 19522 ;;		Absolute function
 19523 ;;		_EUSART1_Receive_ISR
 19524 ;;		_EUSART1_Transmit_ISR
 19525 ;;		_I2C2_BusCollisionISR
 19526 ;;		_I2C2_ISR
 19527 ;;		_ReceiveHandler
 19528 ;;		_TMR0_ISR
 19529 ;; This function is called by:
 19530 ;;		Interrupt level 1
 19531 ;; This function uses a non-reentrant model
 19532 ;;
 19533                           
 19534  0004                     _INTERRUPT_InterruptManager:
 19535                           
 19536                           ;incstack = 0
 19537 ;; hardware stack exceeded
 19538                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+bte
      +                          mp+8-btemp+11+pclath]
 19539  0004  3180               	pagesel	$
 19540  0005  0874               	movf	btemp,w
 19541  0006  0140               	movlb	0	; select bank0
 19542  0007  00E7               	movwf	??_INTERRUPT_InterruptManager
 19543  0008  087C               	movf	btemp+8,w
 19544  0009  00E8               	movwf	??_INTERRUPT_InterruptManager+1
 19545  000A  087D               	movf	btemp+9,w
 19546  000B  00E9               	movwf	??_INTERRUPT_InterruptManager+2
 19547  000C  087E               	movf	btemp+10,w
 19548  000D  00EA               	movwf	??_INTERRUPT_InterruptManager+3
 19549  000E  087F               	movf	btemp+11,w
 19550  000F  00EB               	movwf	??_INTERRUPT_InterruptManager+4
 19551  0010  3058               	movlw	low ___int_sp
 19552  0011  0086               	movwf	6
 19553  0012  3022               	movlw	high ___int_sp
 19554  0013  0087               	movwf	7
 19555  0014                     i1l5141:
 19556                           
 19557                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 19558  0014  014E               	movlb	14	; select bank14
 19559  0015  1E96               	btfss	22,5	;volatile
 19560  0016  2818               	goto	u408_21
 19561  0017  2819               	goto	u408_20
 19562  0018                     u408_21:
 19563  0018  2821               	goto	i1l250
 19564  0019                     u408_20:
 19565  0019                     i1l5143:
 19566  0019  1E8C               	btfss	12,5	;volatile
 19567  001A  281C               	goto	u409_21
 19568  001B  281D               	goto	u409_20
 19569  001C                     u409_21:
 19570  001C  2821               	goto	i1l250
 19571  001D                     u409_20:
 19572  001D                     i1l5145:
 19573                           
 19574                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 19575  001D  319B  2397  3180   	fcall	_TMR0_ISR
 19576                           
 19577                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 19578  0020  2863               	goto	i1l262
 19579  0021                     i1l250:	
 19580                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 19581                           
 19582  0021  1F0B               	btfss	11,6	;volatile
 19583  0022  2824               	goto	u410_21
 19584  0023  2825               	goto	u410_20
 19585  0024                     u410_21:
 19586  0024  2863               	goto	i1l262
 19587  0025                     u410_20:
 19588  0025                     i1l5147:
 19589                           
 19590                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL2IE == 1 && PIR3bits.BCL2IF == 1)
 19591  0025  1D99               	btfss	25,3	;volatile
 19592  0026  2828               	goto	u411_21
 19593  0027  2829               	goto	u411_20
 19594  0028                     u411_21:
 19595  0028  2831               	goto	i1l253
 19596  0029                     u411_20:
 19597  0029                     i1l5149:
 19598  0029  1D8F               	btfss	15,3	;volatile
 19599  002A  282C               	goto	u412_21
 19600  002B  282D               	goto	u412_20
 19601  002C                     u412_21:
 19602  002C  2831               	goto	i1l253
 19603  002D                     u412_20:
 19604  002D                     i1l5151:
 19605                           
 19606                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C2_BusCollisionISR();
 19607  002D  3188  2000  3180   	fcall	_I2C2_BusCollisionISR
 19608                           
 19609                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 19610  0030  2863               	goto	i1l262
 19611  0031                     i1l253:	
 19612                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP2IE == 1 && PI
      +                          R3bits.SSP2IF == 1)
 19613                           
 19614  0031  1D19               	btfss	25,2	;volatile
 19615  0032  2834               	goto	u413_21
 19616  0033  2835               	goto	u413_20
 19617  0034                     u413_21:
 19618  0034  283D               	goto	i1l255
 19619  0035                     u413_20:
 19620  0035                     i1l5153:
 19621  0035  1D0F               	btfss	15,2	;volatile
 19622  0036  2838               	goto	u414_21
 19623  0037  2839               	goto	u414_20
 19624  0038                     u414_21:
 19625  0038  283D               	goto	i1l255
 19626  0039                     u414_20:
 19627  0039                     i1l5155:
 19628                           
 19629                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C2_ISR();
 19630  0039  3186  26B7  3180   	fcall	_I2C2_ISR
 19631                           
 19632                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 19633  003C  2863               	goto	i1l262
 19634  003D                     i1l255:	
 19635                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 19636                           
 19637  003D  1E19               	btfss	25,4	;volatile
 19638  003E  2840               	goto	u415_21
 19639  003F  2841               	goto	u415_20
 19640  0040                     u415_21:
 19641  0040  2850               	goto	i1l257
 19642  0041                     u415_20:
 19643  0041                     i1l5157:
 19644  0041  1E0F               	btfss	15,4	;volatile
 19645  0042  2844               	goto	u416_21
 19646  0043  2845               	goto	u416_20
 19647  0044                     u416_21:
 19648  0044  2850               	goto	i1l257
 19649  0045                     u416_20:
 19650  0045                     i1l5159:
 19651                           
 19652                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 19653  0045  0141               	movlb	1	; select bank1
 19654  0046  085B               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128),w
 19655  0047  00FF               	movwf	btemp+11
 19656  0048  085A               	movf	_EUSART1_TxDefaultInterruptHandler^(0+128),w
 19657  0049  00FE               	movwf	btemp+10
 19658  004A  087F               	movf	btemp+11,w
 19659  004B  008A               	movwf	10
 19660  004C  087E               	movf	btemp+10,w
 19661  004D  000A               	callw
 19662  004E  3180               	pagesel	$
 19663                           
 19664                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 19665  004F  2863               	goto	i1l262
 19666  0050                     i1l257:	
 19667                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 19668                           
 19669  0050  1E99               	btfss	25,5	;volatile
 19670  0051  2853               	goto	u417_21
 19671  0052  2854               	goto	u417_20
 19672  0053                     u417_21:
 19673  0053  2863               	goto	i1l256
 19674  0054                     u417_20:
 19675  0054                     i1l5161:
 19676  0054  1E8F               	btfss	15,5	;volatile
 19677  0055  2857               	goto	u418_21
 19678  0056  2858               	goto	u418_20
 19679  0057                     u418_21:
 19680  0057  2863               	goto	i1l256
 19681  0058                     u418_20:
 19682  0058                     i1l5163:
 19683                           
 19684                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 19685  0058  0141               	movlb	1	; select bank1
 19686  0059  0859               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128),w
 19687  005A  00FF               	movwf	btemp+11
 19688  005B  0858               	movf	_EUSART1_RxDefaultInterruptHandler^(0+128),w
 19689  005C  00FE               	movwf	btemp+10
 19690  005D  087F               	movf	btemp+11,w
 19691  005E  008A               	movwf	10
 19692  005F  087E               	movf	btemp+10,w
 19693  0060  000A               	callw
 19694  0061  3180               	pagesel	$
 19695                           
 19696                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 19697  0062  2863               	goto	i1l262
 19698  0063                     i1l256:
 19699  0063                     i1l262:
 19700  0063  0140               	movlb	0	; select bank0
 19701  0064  086B               	movf	??_INTERRUPT_InterruptManager+4,w
 19702  0065  00FF               	movwf	btemp+11
 19703  0066  086A               	movf	??_INTERRUPT_InterruptManager+3,w
 19704  0067  00FE               	movwf	btemp+10
 19705  0068  0869               	movf	??_INTERRUPT_InterruptManager+2,w
 19706  0069  00FD               	movwf	btemp+9
 19707  006A  0868               	movf	??_INTERRUPT_InterruptManager+1,w
 19708  006B  00FC               	movwf	btemp+8
 19709  006C  0867               	movf	??_INTERRUPT_InterruptManager,w
 19710  006D  00F4               	movwf	btemp
 19711  006E  0009               	retfie
 19712  006F                     __end_of_INTERRUPT_InterruptManager:
 19713                           
 19714                           	psect	text81
 19715  1B97                     __ptext81:	
 19716 ;; *************** function _TMR0_ISR *****************
 19717 ;; Defined at:
 19718 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 19719 ;; Parameters:    Size  Location     Type
 19720 ;;		None
 19721 ;; Auto vars:     Size  Location     Type
 19722 ;;		None
 19723 ;; Return value:  Size  Location     Type
 19724 ;;                  1    wreg      void 
 19725 ;; Registers used:
 19726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+8, btemp+9, btemp+10, btemp+11, pclath
 19727 ;; Tracked objects:
 19728 ;;		On entry : 3F/E
 19729 ;;		On exit  : 0/0
 19730 ;;		Unchanged: 0/0
 19731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19736 ;;Total ram usage:        0 bytes
 19737 ;; Hardware stack levels used:    1
 19738 ;; Hardware stack levels required when called:    6
 19739 ;; This function calls:
 19740 ;;		_TMR0_CallBack
 19741 ;; This function is called by:
 19742 ;;		_INTERRUPT_InterruptManager
 19743 ;; This function uses a reentrant model
 19744 ;;
 19745                           
 19746                           
 19747                           ;psect for function _TMR0_ISR
 19748  1B97                     _TMR0_ISR:
 19749  1B97                     l4729:	
 19750                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19751                           ;incstack = 0
 19752 ;; hardware stack exceeded
 19753                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+8-btemp+11+pcla
      +                          th]
 19754                           
 19755                           
 19756                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 19757  1B97  014E               	movlb	14	; select bank14
 19758  1B98  128C               	bcf	12,5	;volatile
 19759  1B99                     l4731:
 19760                           
 19761                           ;mcc_generated_files/tmr0.c: 127:     TMR0_CallBack();
 19762  1B99  319C  247E  319B   	fcall	_TMR0_CallBack
 19763  1B9C                     l614:
 19764                           
 19765                           ; _TMR0_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 19766  1B9C  0008               	return
 19767  1B9D                     __end_of_TMR0_ISR:
 19768                           
 19769                           	psect	text82
 19770  1C7E                     __ptext82:	
 19771 ;; *************** function _TMR0_CallBack *****************
 19772 ;; Defined at:
 19773 ;;		line 132 in file "mcc_generated_files/tmr0.c"
 19774 ;; Parameters:    Size  Location     Type
 19775 ;;		None
 19776 ;; Auto vars:     Size  Location     Type
 19777 ;;		None
 19778 ;; Return value:  Size  Location     Type
 19779 ;;                  1    wreg      void 
 19780 ;; Registers used:
 19781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+8, btemp+9, btemp+10, btemp+11, pclath
 19782 ;; Tracked objects:
 19783 ;;		On entry : 3F/E
 19784 ;;		On exit  : 0/0
 19785 ;;		Unchanged: 0/0
 19786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19791 ;;Total ram usage:        0 bytes
 19792 ;; Hardware stack levels used:    1
 19793 ;; Hardware stack levels required when called:    5
 19794 ;; This function calls:
 19795 ;;		Absolute function
 19796 ;;		_SYSTICK_Handler
 19797 ;;		_TMR0_DefaultInterruptHandler
 19798 ;; This function is called by:
 19799 ;;		_TMR0_ISR
 19800 ;; This function uses a reentrant model
 19801 ;;
 19802                           
 19803                           
 19804                           ;psect for function _TMR0_CallBack
 19805  1C7E                     _TMR0_CallBack:
 19806  1C7E                     l4515:	
 19807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19808                           ;incstack = 0
 19809 ;; hardware stack exceeded
 19810                           ; Regs used in _TMR0_CallBack: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+8-btemp+11
      +                          +pclath]
 19811                           
 19812                           
 19813                           ;mcc_generated_files/tmr0.c: 136:     if(TMR0_InterruptHandler)
 19814  1C7E  0140               	movlb	0	; select bank0
 19815  1C7F  086C               	movf	_TMR0_InterruptHandler,w
 19816  1C80  046D               	iorwf	_TMR0_InterruptHandler+1,w
 19817  1C81  1903               	btfsc	3,2
 19818  1C82  2C84               	goto	u343_21
 19819  1C83  2C85               	goto	u343_20
 19820  1C84                     u343_21:
 19821  1C84  2C8E               	goto	l618
 19822  1C85                     u343_20:
 19823  1C85                     l4517:
 19824                           
 19825                           ;mcc_generated_files/tmr0.c: 137:     {;mcc_generated_files/tmr0.c: 138:         TMR0_In
      +                          terruptHandler();
 19826  1C85  086D               	movf	_TMR0_InterruptHandler+1,w
 19827  1C86  00FF               	movwf	btemp+11
 19828  1C87  086C               	movf	_TMR0_InterruptHandler,w
 19829  1C88  00FE               	movwf	btemp+10
 19830  1C89  087F               	movf	btemp+11,w
 19831  1C8A  008A               	movwf	10
 19832  1C8B  087E               	movf	btemp+10,w
 19833  1C8C  000A               	callw
 19834  1C8D  319C               	pagesel	$
 19835  1C8E                     l618:
 19836                           
 19837                           ; _TMR0_CallBack: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 19838  1C8E  0008               	return
 19839  1C8F                     __end_of_TMR0_CallBack:
 19840                           
 19841                           	psect	text83
 19842  0857                     __ptext83:	
 19843 ;; *************** function _SYSTICK_Handler *****************
 19844 ;; Defined at:
 19845 ;;		line 169 in file "src/pba_systick.c"
 19846 ;; Parameters:    Size  Location     Type
 19847 ;;		None
 19848 ;; Auto vars:     Size  Location     Type
 19849 ;;  i               1  [STACK] unsigned char 
 19850 ;; Return value:  Size  Location     Type
 19851 ;;                  1    wreg      void 
 19852 ;; Registers used:
 19853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+8, btemp+9, btemp+10, btemp+11, pclath
 19854 ;; Tracked objects:
 19855 ;;		On entry : 3F/0
 19856 ;;		On exit  : 0/0
 19857 ;;		Unchanged: 0/0
 19858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19863 ;;Total ram usage:        0 bytes
 19864 ;; Hardware stack levels used:    1
 19865 ;; Hardware stack levels required when called:    4
 19866 ;; This function calls:
 19867 ;;		_Summer
 19868 ;;		___bmul
 19869 ;; This function is called by:
 19870 ;;		_PBA_Init
 19871 ;;		_TMR0_CallBack
 19872 ;; This function uses a reentrant model
 19873 ;;
 19874                           
 19875                           
 19876                           ;psect for function _SYSTICK_Handler
 19877  0857                     _SYSTICK_Handler:
 19878                           
 19879                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19880  0857  3143               	addfsr 1,3
 19881  0858                     l4327:	
 19882                           ;incstack = 0
 19883 ;; hardware stack exceeded
 19884                           ; Regs used in _SYSTICK_Handler: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+8-btemp+
      +                          11+pclath]
 19885                           
 19886                           
 19887                           ;src/pba_systick.c: 173:     for (uint8_t i = 0; i < 6; i++)
 19888                           ;stkvar	_i @ sp[(-3)+0]
 19889  0858  3000               	movlw	0
 19890  0859  3FFD               	movwi [-3]fsr1
 19891  085A                     l4333:
 19892                           
 19893                           ;src/pba_systick.c: 174:     {;src/pba_systick.c: 175:         if (softTimer[i].state ==
      +                           RUNNING && softTimer[i].tickCnt > 0)
 19894  085A  3007               	movlw	7
 19895  085B  001E               	movwi fsr1++
 19896                           
 19897                           ;stkvar	_i @ sp[(-4)+0]
 19898  085C  3F7C               	moviw [-4]fsr1
 19899  085D  319E  2610  3188   	fcall	___bmul
 19900  0860  3EA4               	addlw	(low ((_softTimer| 0+4)))& (0+255)
 19901  0861  0084               	movwf	4
 19902  0862  0185               	clrf	5
 19903  0863  0300               	decf	0,w
 19904  0864  1D03               	btfss	3,2
 19905  0865  2867               	goto	u320_21
 19906  0866  2868               	goto	u320_20
 19907  0867                     u320_21:
 19908  0867  28D4               	goto	l4347
 19909  0868                     u320_20:
 19910  0868                     l4335:
 19911  0868  3007               	movlw	7
 19912  0869  001E               	movwi fsr1++
 19913                           
 19914                           ;stkvar	_i @ sp[(-4)+0]
 19915  086A  3F7C               	moviw [-4]fsr1
 19916  086B  319E  2610  3188   	fcall	___bmul
 19917  086E  3EA0               	addlw	(low (_softTimer| 0))& (0+255)
 19918  086F  0084               	movwf	4
 19919  0870  0185               	clrf	5
 19920  0871  3F00               	moviw [0]fsr0
 19921  0872  00FC               	movwf	btemp+8
 19922  0873  3F01               	moviw [1]fsr0
 19923  0874  00FD               	movwf	btemp+9
 19924  0875  3F02               	moviw [2]fsr0
 19925  0876  00FE               	movwf	btemp+10
 19926  0877  3F03               	moviw [3]fsr0
 19927  0878  00FF               	movwf	btemp+11
 19928  0879  087F               	movf	btemp+11,w
 19929  087A  047E               	iorwf	btemp+10,w
 19930  087B  047D               	iorwf	btemp+9,w
 19931  087C  047C               	iorwf	btemp+8,w
 19932  087D  1903               	skipnz
 19933  087E  2880               	goto	u321_21
 19934  087F  2881               	goto	u321_20
 19935  0880                     u321_21:
 19936  0880  28D4               	goto	l4347
 19937  0881                     u321_20:
 19938  0881                     l4337:
 19939                           
 19940                           ;src/pba_systick.c: 176:         {;src/pba_systick.c: 177:             softTimer[i].tick
      +                          Cnt--;
 19941  0881  3007               	movlw	7
 19942  0882  001E               	movwi fsr1++
 19943                           
 19944                           ;stkvar	_i @ sp[(-4)+0]
 19945  0883  3F7C               	moviw [-4]fsr1
 19946  0884  319E  2610  3188   	fcall	___bmul
 19947  0887  3EA0               	addlw	(low (_softTimer| 0))& (0+255)
 19948  0888  0084               	movwf	4
 19949  0889  0185               	clrf	5
 19950  088A  3001               	movlw	1
 19951  088B  0280               	subwf	0,f
 19952  088C  3101               	addfsr 0,1
 19953  088D  3000               	movlw	0
 19954  088E  3B80               	subwfb	0,f
 19955  088F  3101               	addfsr 0,1
 19956  0890  3000               	movlw	0
 19957  0891  3B80               	subwfb	0,f
 19958  0892  3101               	addfsr 0,1
 19959  0893  3000               	movlw	0
 19960  0894  3B80               	subwfb	0,f
 19961  0895  313D               	addfsr 0,-3
 19962  0896                     l4339:
 19963                           
 19964                           ;src/pba_systick.c: 178:             if(softTimer[i].tickCnt == 0 && softTimer[i].p_call
      +                          backFunction != 0){
 19965  0896  3007               	movlw	7
 19966  0897  001E               	movwi fsr1++
 19967                           
 19968                           ;stkvar	_i @ sp[(-4)+0]
 19969  0898  3F7C               	moviw [-4]fsr1
 19970  0899  319E  2610  3188   	fcall	___bmul
 19971  089C  3EA0               	addlw	(low (_softTimer| 0))& (0+255)
 19972  089D  0084               	movwf	4
 19973  089E  0185               	clrf	5
 19974  089F  3F00               	moviw [0]fsr0
 19975  08A0  00FC               	movwf	btemp+8
 19976  08A1  3F01               	moviw [1]fsr0
 19977  08A2  00FD               	movwf	btemp+9
 19978  08A3  3F02               	moviw [2]fsr0
 19979  08A4  00FE               	movwf	btemp+10
 19980  08A5  3F03               	moviw [3]fsr0
 19981  08A6  00FF               	movwf	btemp+11
 19982  08A7  087F               	movf	btemp+11,w
 19983  08A8  047E               	iorwf	btemp+10,w
 19984  08A9  047D               	iorwf	btemp+9,w
 19985  08AA  047C               	iorwf	btemp+8,w
 19986  08AB  1D03               	skipz
 19987  08AC  28AE               	goto	u322_21
 19988  08AD  28AF               	goto	u322_20
 19989  08AE                     u322_21:
 19990  08AE  28D4               	goto	l4347
 19991  08AF                     u322_20:
 19992  08AF                     l4341:
 19993  08AF  3007               	movlw	7
 19994  08B0  001E               	movwi fsr1++
 19995                           
 19996                           ;stkvar	_i @ sp[(-4)+0]
 19997  08B1  3F7C               	moviw [-4]fsr1
 19998  08B2  319E  2610  3188   	fcall	___bmul
 19999  08B5  3EA5               	addlw	(low ((_softTimer| 0+5)))& (0+255)
 20000  08B6  0084               	movwf	4
 20001  08B7  0185               	clrf	5
 20002  08B8  0012               	moviw fsr0++
 20003  08B9  0400               	iorwf	0,w
 20004  08BA  1903               	btfsc	3,2
 20005  08BB  28BD               	goto	u323_21
 20006  08BC  28BE               	goto	u323_20
 20007  08BD                     u323_21:
 20008  08BD  28D4               	goto	l4347
 20009  08BE                     u323_20:
 20010  08BE                     l4343:
 20011                           
 20012                           ;src/pba_systick.c: 179:                 softTimer[i].p_callbackFunction();
 20013  08BE  3007               	movlw	7
 20014  08BF  001E               	movwi fsr1++
 20015                           
 20016                           ;stkvar	_i @ sp[(-4)+0]
 20017  08C0  3F7C               	moviw [-4]fsr1
 20018  08C1  319E  2610  3188   	fcall	___bmul
 20019  08C4  3EA5               	addlw	(low ((_softTimer| 0+5)))& (0+255)
 20020  08C5  0084               	movwf	4
 20021  08C6  0185               	clrf	5
 20022                           
 20023                           ;stkvar	_SYSTICK_Handler$2453 @ sp[(-3)+1]
 20024  08C7  3F00               	moviw [0]fsr0
 20025  08C8  3FFE               	movwi [-2]fsr1
 20026  08C9  3F01               	moviw [1]fsr0
 20027  08CA  3FFF               	movwi [-1]fsr1
 20028  08CB                     l4345:
 20029                           
 20030                           ;src/pba_systick.c: 179:                 softTimer[i].p_callbackFunction();
 20031                           ;stkvar	_SYSTICK_Handler$2453 @ sp[(-3)+1]
 20032  08CB  3F7E               	moviw [-2]fsr1
 20033  08CC  00FE               	movwf	btemp+10
 20034  08CD  3F7F               	moviw [-1]fsr1
 20035  08CE  00FF               	movwf	btemp+11
 20036  08CF  087F               	movf	btemp+11,w
 20037  08D0  008A               	movwf	10
 20038  08D1  087E               	movf	btemp+10,w
 20039  08D2  000A               	callw
 20040  08D3  3188               	pagesel	$
 20041  08D4                     l4347:
 20042                           
 20043                           ;src/pba_systick.c: 182:     }
 20044                           ;stkvar	_i @ sp[(-3)+0]
 20045  08D4  3F7D               	moviw [-3]fsr1
 20046  08D5  3E01               	addlw	1
 20047  08D6  3FFD               	movwi [-3]fsr1
 20048  08D7                     l4349:
 20049                           
 20050                           ;stkvar	_i @ sp[(-3)+0]
 20051  08D7  3F7D               	moviw [-3]fsr1
 20052  08D8  00FF               	movwf	btemp+11
 20053  08D9  3006               	movlw	6
 20054  08DA  027F               	subwf	btemp+11,w
 20055  08DB  1C03               	skipc
 20056  08DC  28DE               	goto	u324_21
 20057  08DD  28DF               	goto	u324_20
 20058  08DE                     u324_21:
 20059  08DE  285A               	goto	l4333
 20060  08DF                     u324_20:
 20061  08DF                     l1093:
 20062                           
 20063                           ; _SYSTICK_Handler: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20064  08DF  317D               	addfsr 1,-3
 20065  08E0  0008               	return
 20066  08E1                     __end_of_SYSTICK_Handler:
 20067                           
 20068                           	psect	text84
 20069  0003                     __ptext84:	
 20070 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 20071 ;; Defined at:
 20072 ;;		line 146 in file "mcc_generated_files/tmr0.c"
 20073 ;; Parameters:    Size  Location     Type
 20074 ;;		None
 20075 ;; Auto vars:     Size  Location     Type
 20076 ;;		None
 20077 ;; Return value:  Size  Location     Type
 20078 ;;                  1    wreg      void 
 20079 ;; Registers used:
 20080 ;;		None
 20081 ;; Tracked objects:
 20082 ;;		On entry : 3F/0
 20083 ;;		On exit  : 0/0
 20084 ;;		Unchanged: 0/0
 20085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20090 ;;Total ram usage:        0 bytes
 20091 ;; Hardware stack levels used:    1
 20092 ;; This function calls:
 20093 ;;		Nothing
 20094 ;; This function is called by:
 20095 ;;		_TMR0_Initialize
 20096 ;;		_TMR0_CallBack
 20097 ;; This function uses a reentrant model
 20098 ;;
 20099                           
 20100                           
 20101                           ;psect for function _TMR0_DefaultInterruptHandler
 20102  0003                     _TMR0_DefaultInterruptHandler:
 20103  0003                     l624:	
 20104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20105                           ;incstack = 0
 20106                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 20107                           
 20108                           
 20109                           ; _TMR0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 20110  0003  0008               	return
 20111  0004                     __end_of_TMR0_DefaultInterruptHandler:
 20112                           
 20113                           	psect	text85
 20114  1C6E                     __ptext85:	
 20115 ;; *************** function _Summer *****************
 20116 ;; Defined at:
 20117 ;;		line 312 in file "main.c"
 20118 ;; Parameters:    Size  Location     Type
 20119 ;;		None
 20120 ;; Auto vars:     Size  Location     Type
 20121 ;;		None
 20122 ;; Return value:  Size  Location     Type
 20123 ;;                  1    wreg      void 
 20124 ;; Registers used:
 20125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+11, pclath
 20126 ;; Tracked objects:
 20127 ;;		On entry : 0/0
 20128 ;;		On exit  : 0/0
 20129 ;;		Unchanged: 0/0
 20130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20135 ;;Total ram usage:        0 bytes
 20136 ;; Hardware stack levels used:    1
 20137 ;; Hardware stack levels required when called:    3
 20138 ;; This function calls:
 20139 ;;		_SYSTICK_TimerLoadAndRun
 20140 ;; This function is called by:
 20141 ;;		_main
 20142 ;;		_SYSTICK_Handler
 20143 ;; This function uses a reentrant model
 20144 ;;
 20145                           
 20146                           
 20147                           ;psect for function _Summer
 20148  1C6E                     _Summer:
 20149  1C6E                     l745:	
 20150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20151                           ;incstack = 0
 20152 ;; hardware stack exceeded
 20153                           ; Regs used in _Summer: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+11+pclath]
 20154                           ;main.c: 313:     do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 20155                           
 20156  1C6E                     l4085:
 20157  1C6E  3004               	movlw	4
 20158  1C6F  0140               	movlb	0	; select bank0
 20159  1C70  069C               	xorwf	28,f	;volatile
 20160  1C71                     l4087:
 20161                           
 20162                           ;main.c: 314:     SYSTICK_TimerLoadAndRun(SUMMER_TIMER, 1);
 20163  1C71  3001               	movlw	1
 20164  1C72  001E               	movwi fsr1++
 20165  1C73  3000               	movlw	0
 20166  1C74  001E               	movwi fsr1++
 20167  1C75  3000               	movlw	0
 20168  1C76  001E               	movwi fsr1++
 20169  1C77  3000               	movlw	0
 20170  1C78  001E               	movwi fsr1++
 20171  1C79  3002               	movlw	2
 20172  1C7A  319C  24C6  319C   	fcall	_SYSTICK_TimerLoadAndRun
 20173  1C7D                     l747:
 20174                           
 20175                           ; _Summer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsiz
      +                          e = 0, vargsize = 0
 20176  1C7D  0008               	return
 20177  1C7E                     __end_of_Summer:
 20178                           
 20179                           	psect	text86
 20180  140F                     __ptext86:	
 20181 ;; *************** function _EUSART1_Receive_ISR *****************
 20182 ;; Defined at:
 20183 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 20184 ;; Parameters:    Size  Location     Type
 20185 ;;		None
 20186 ;; Auto vars:     Size  Location     Type
 20187 ;;		None
 20188 ;; Return value:  Size  Location     Type
 20189 ;;                  1    wreg      void 
 20190 ;; Registers used:
 20191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+10, btemp+11, pclath
 20192 ;; Tracked objects:
 20193 ;;		On entry : 3F/1
 20194 ;;		On exit  : 0/0
 20195 ;;		Unchanged: 0/0
 20196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20201 ;;Total ram usage:        0 bytes
 20202 ;; Hardware stack levels used:    1
 20203 ;; Hardware stack levels required when called:    2
 20204 ;; This function calls:
 20205 ;;		Absolute function
 20206 ;;		_EUSART1_DefaultErrorHandler
 20207 ;;		_EUSART1_DefaultFramingErrorHandler
 20208 ;;		_EUSART1_DefaultOverrunErrorHandler
 20209 ;;		_EUSART1_RxDataHandler
 20210 ;; This function is called by:
 20211 ;;		_EUSART1_Initialize
 20212 ;;		_INTERRUPT_InterruptManager
 20213 ;; This function uses a reentrant model
 20214 ;;
 20215                           
 20216                           
 20217                           ;psect for function _EUSART1_Receive_ISR
 20218  140F                     _EUSART1_Receive_ISR:
 20219  140F                     l4709:	
 20220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20221                           ;incstack = 0
 20222                           ; Regs used in _EUSART1_Receive_ISR: [wreg-fsr0h+status,2+status,0+btemp+10+btemp+11+pcl
      +                          ath]
 20223                           
 20224                           
 20225                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 20226  140F  0872               	movf	_eusart1RxHead,w	;volatile
 20227  1410  3E20               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 20228  1411  0084               	movwf	4
 20229  1412  0185               	clrf	5
 20230  1413  0180               	clrf	0
 20231  1414                     l4711:
 20232                           
 20233                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 20234  1414  0142               	movlb	2	; select bank2
 20235  1415  1D1D               	btfss	29,2	;volatile
 20236  1416  2C18               	goto	u364_21
 20237  1417  2C19               	goto	u364_20
 20238  1418                     u364_21:
 20239  1418  2C28               	goto	l4717
 20240  1419                     u364_20:
 20241  1419                     l4713:
 20242                           
 20243                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 20244  1419  0872               	movf	_eusart1RxHead,w	;volatile
 20245  141A  3E20               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 20246  141B  0084               	movwf	4
 20247  141C  0185               	clrf	5
 20248  141D  1480               	bsf	0,1
 20249  141E                     l4715:
 20250                           
 20251                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 20252  141E  0141               	movlb	1	; select bank1
 20253  141F  0857               	movf	(_EUSART1_FramingErrorHandler+1)^(0+128),w
 20254  1420  00FF               	movwf	btemp+11
 20255  1421  0856               	movf	_EUSART1_FramingErrorHandler^(0+128),w
 20256  1422  00FE               	movwf	btemp+10
 20257  1423  087F               	movf	btemp+11,w
 20258  1424  008A               	movwf	10
 20259  1425  087E               	movf	btemp+10,w
 20260  1426  000A               	callw
 20261  1427  3194               	pagesel	$
 20262  1428                     l4717:
 20263                           
 20264                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 20265  1428  0142               	movlb	2	; select bank2
 20266  1429  1C9D               	btfss	29,1	;volatile
 20267  142A  2C2C               	goto	u365_21
 20268  142B  2C2D               	goto	u365_20
 20269  142C                     u365_21:
 20270  142C  2C3C               	goto	l4723
 20271  142D                     u365_20:
 20272  142D                     l4719:
 20273                           
 20274                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 20275  142D  0872               	movf	_eusart1RxHead,w	;volatile
 20276  142E  3E20               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 20277  142F  0084               	movwf	4
 20278  1430  0185               	clrf	5
 20279  1431  1500               	bsf	0,2
 20280  1432                     l4721:
 20281                           
 20282                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 20283  1432  0141               	movlb	1	; select bank1
 20284  1433  0855               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
 20285  1434  00FF               	movwf	btemp+11
 20286  1435  0854               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
 20287  1436  00FE               	movwf	btemp+10
 20288  1437  087F               	movf	btemp+11,w
 20289  1438  008A               	movwf	10
 20290  1439  087E               	movf	btemp+10,w
 20291  143A  000A               	callw
 20292  143B  3194               	pagesel	$
 20293  143C                     l4723:
 20294                           
 20295                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 20296  143C  0872               	movf	_eusart1RxHead,w	;volatile
 20297  143D  3E20               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 20298  143E  0084               	movwf	4
 20299  143F  0185               	clrf	5
 20300  1440  0800               	movf	0,w
 20301  1441  1903               	btfsc	3,2
 20302  1442  2C44               	goto	u366_21
 20303  1443  2C45               	goto	u366_20
 20304  1444                     u366_21:
 20305  1444  2C50               	goto	l4727
 20306  1445                     u366_20:
 20307  1445                     l4725:
 20308                           
 20309                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 20310  1445  0141               	movlb	1	; select bank1
 20311  1446  0853               	movf	(_EUSART1_ErrorHandler+1)^(0+128),w
 20312  1447  00FF               	movwf	btemp+11
 20313  1448  0852               	movf	_EUSART1_ErrorHandler^(0+128),w
 20314  1449  00FE               	movwf	btemp+10
 20315  144A  087F               	movf	btemp+11,w
 20316  144B  008A               	movwf	10
 20317  144C  087E               	movf	btemp+10,w
 20318  144D  000A               	callw
 20319  144E  3194               	pagesel	$
 20320                           
 20321                           ;mcc_generated_files/eusart1.c: 233:     } else {
 20322  144F  2C53               	goto	l197
 20323  1450                     l4727:
 20324                           
 20325                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 20326  1450  319C  24A0  3194   	fcall	_EUSART1_RxDataHandler
 20327  1453                     l197:
 20328                           
 20329                           ; _EUSART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 0, argsize = 0, vargsize = 0
 20330  1453  0008               	return
 20331  1454                     __end_of_EUSART1_Receive_ISR:
 20332                           
 20333                           	psect	text87
 20334  1C42                     __ptext87:	
 20335 ;; *************** function _ReceiveHandler *****************
 20336 ;; Defined at:
 20337 ;;		line 322 in file "main.c"
 20338 ;; Parameters:    Size  Location     Type
 20339 ;;		None
 20340 ;; Auto vars:     Size  Location     Type
 20341 ;;  c               1  [STACK] unsigned char 
 20342 ;; Return value:  Size  Location     Type
 20343 ;;                  1    wreg      void 
 20344 ;; Registers used:
 20345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+10, btemp+11, pclath
 20346 ;; Tracked objects:
 20347 ;;		On entry : 3F/1
 20348 ;;		On exit  : 3F/E
 20349 ;;		Unchanged: 0/0
 20350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20355 ;;Total ram usage:        0 bytes
 20356 ;; Hardware stack levels used:    1
 20357 ;; Hardware stack levels required when called:    4
 20358 ;; This function calls:
 20359 ;;		_EUSART1_Write
 20360 ;;		_OLED_Putc
 20361 ;; This function is called by:
 20362 ;;		_main
 20363 ;;		_INTERRUPT_InterruptManager
 20364 ;; This function uses a reentrant model
 20365 ;;
 20366                           
 20367                           
 20368                           ;psect for function _ReceiveHandler
 20369  1C42                     _ReceiveHandler:
 20370                           
 20371                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20372  1C42  3141               	addfsr 1,1
 20373  1C43                     l5135:	
 20374                           ;incstack = 0
 20375 ;; hardware stack exceeded
 20376                           ; Regs used in _ReceiveHandler: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+10+btemp+
      +                          11+pclath]
 20377                           
 20378                           
 20379                           ;main.c: 323:     char c = RC1REG;
 20380  1C43  0142               	movlb	2	; select bank2
 20381  1C44  0819               	movf	25,w	;volatile
 20382                           
 20383                           ;stkvar	_c @ sp[(-1)+0]
 20384  1C45  3FFF               	movwi [-1]fsr1
 20385  1C46                     l5137:
 20386                           
 20387                           ;main.c: 324:     OLED_Putc(c);
 20388                           ;stkvar	_c @ sp[(-1)+0]
 20389  1C46  3F7F               	moviw [-1]fsr1
 20390  1C47  3189  219E  319C   	fcall	_OLED_Putc
 20391  1C4A                     l5139:
 20392                           
 20393                           ;main.c: 325:     EUSART1_Write(c);
 20394                           ;stkvar	_c @ sp[(-1)+0]
 20395  1C4A  3F7F               	moviw [-1]fsr1
 20396  1C4B  3191  2101  319C   	fcall	_EUSART1_Write
 20397  1C4E                     l750:
 20398                           
 20399                           ; _ReceiveHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20400  1C4E  317F               	addfsr 1,-1
 20401  1C4F  0008               	return
 20402  1C50                     __end_of_ReceiveHandler:
 20403                           
 20404                           	psect	text88
 20405  06B7                     __ptext88:	
 20406 ;; *************** function _I2C2_ISR *****************
 20407 ;; Defined at:
 20408 ;;		line 235 in file "mcc_generated_files/i2c2.c"
 20409 ;; Parameters:    Size  Location     Type
 20410 ;;		None
 20411 ;; Auto vars:     Size  Location     Type
 20412 ;;		None
 20413 ;; Return value:  Size  Location     Type
 20414 ;;                  1    wreg      void 
 20415 ;; Registers used:
 20416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+10, btemp+11, pclath
 20417 ;; Tracked objects:
 20418 ;;		On entry : 3F/E
 20419 ;;		On exit  : 3C/0
 20420 ;;		Unchanged: 0/0
 20421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20426 ;;Total ram usage:        0 bytes
 20427 ;; Hardware stack levels used:    1
 20428 ;; Hardware stack levels required when called:    1
 20429 ;; This function calls:
 20430 ;;		_I2C2_FunctionComplete
 20431 ;;		_I2C2_Stop
 20432 ;; This function is called by:
 20433 ;;		_INTERRUPT_InterruptManager
 20434 ;; This function uses a reentrant model
 20435 ;;
 20436                           
 20437                           
 20438                           ;psect for function _I2C2_ISR
 20439  06B7                     _I2C2_ISR:
 20440  06B7                     l4735:	
 20441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20442                           ;incstack = 0
 20443                           ; Regs used in _I2C2_ISR: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+10+btemp+11+pcl
      +                          ath]
 20444                           
 20445                           
 20446                           ;mcc_generated_files/i2c2.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c2.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c2.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c2.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c2.c: 243:     PIR3bits.SSP2IF = 0;
 20447  06B7  014E               	movlb	14	; select bank14
 20448  06B8  110F               	bcf	15,2	;volatile
 20449                           
 20450                           ;mcc_generated_files/i2c2.c: 247:     if(SSP2CON1bits.WCOL)
 20451  06B9  0143               	movlb	3	; select bank3
 20452  06BA  1F9A               	btfss	26,7	;volatile
 20453  06BB  2EBD               	goto	u367_21
 20454  06BC  2EBE               	goto	u367_20
 20455  06BD                     u367_21:
 20456  06BD  2FCB               	goto	l4873
 20457  06BE                     u367_20:
 20458  06BE                     l4737:
 20459                           
 20460                           ;mcc_generated_files/i2c2.c: 248:     {;mcc_generated_files/i2c2.c: 250:         SSP2CON
      +                          1bits.WCOL = 0;
 20461  06BE  139A               	bcf	26,7	;volatile
 20462  06BF                     l4739:
 20463                           
 20464                           ;mcc_generated_files/i2c2.c: 251:         i2c2_state = S_MASTER_IDLE;
 20465  06BF  0140               	movlb	0	; select bank0
 20466  06C0  01C9               	clrf	_i2c2_state
 20467  06C1                     l4741:
 20468                           
 20469                           ;mcc_generated_files/i2c2.c: 252:         *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL
      +                          ;
 20470  06C1  0846               	movf	_p_i2c2_current,w
 20471  06C2  3E02               	addlw	2
 20472  06C3  0084               	movwf	4
 20473  06C4  0185               	clrf	5
 20474  06C5  3F00               	moviw [0]fsr0
 20475  06C6  00FE               	movwf	btemp+10
 20476  06C7  3F01               	moviw [1]fsr0
 20477  06C8  00FF               	movwf	btemp+11
 20478  06C9  087E               	movf	wtemp5,w
 20479  06CA  0084               	movwf	4
 20480  06CB  087F               	movf	wtemp5+1,w
 20481  06CC  0085               	movwf	5
 20482  06CD  0180               	clrf	0
 20483  06CE  0A80               	incf	0,f
 20484  06CF                     l4743:
 20485                           
 20486                           ;mcc_generated_files/i2c2.c: 255:         p_i2c2_current = ((void*)0);
 20487  06CF  01C6               	clrf	_p_i2c2_current
 20488  06D0  2FF7               	goto	l369
 20489  06D1                     l371:	
 20490                           ;mcc_generated_files/i2c2.c: 262:     {;mcc_generated_files/i2c2.c: 263:         case S_
      +                          MASTER_IDLE:
 20491                           
 20492                           
 20493                           ;mcc_generated_files/i2c2.c: 265:             if(i2c2_object.trStatus.s.empty != 1)
 20494  06D1  18B2               	btfsc	_i2c2_object+2,1
 20495  06D2  2ED4               	goto	u368_21
 20496  06D3  2ED5               	goto	u368_20
 20497  06D4                     u368_21:
 20498  06D4  2FF7               	goto	l369
 20499  06D5                     u368_20:
 20500  06D5                     l4747:
 20501                           
 20502                           ;mcc_generated_files/i2c2.c: 266:             {;mcc_generated_files/i2c2.c: 268:        
      +                                   p_i2c2_current = i2c2_object.pTrHead;
 20503  06D5  0831               	movf	low ((_i2c2_object| 0+1)),w
 20504  06D6  00C6               	movwf	_p_i2c2_current
 20505  06D7                     l4749:
 20506                           
 20507                           ;mcc_generated_files/i2c2.c: 269:                 i2c2_trb_count = i2c2_object.pTrHead->
      +                          count;
 20508  06D7  0831               	movf	low ((_i2c2_object| 0+1)),w
 20509  06D8  0084               	movwf	4
 20510  06D9  0185               	clrf	5
 20511  06DA  0800               	movf	0,w
 20512  06DB  00C8               	movwf	_i2c2_trb_count
 20513  06DC                     l4751:
 20514                           
 20515                           ;mcc_generated_files/i2c2.c: 270:                 p_i2c2_trb_current = i2c2_object.pTrHe
      +                          ad->ptrb_list;
 20516  06DC  0831               	movf	low ((_i2c2_object| 0+1)),w
 20517  06DD  0084               	movwf	4
 20518  06DE  0185               	clrf	5
 20519  06DF  3F01               	moviw [1]fsr0
 20520  06E0  00C7               	movwf	_p_i2c2_trb_current
 20521  06E1                     l4753:
 20522                           
 20523                           ;mcc_generated_files/i2c2.c: 272:                 i2c2_object.pTrHead++;
 20524  06E1  3004               	movlw	4
 20525  06E2  07B1               	addwf	low ((_i2c2_object| 0+1)),f
 20526  06E3                     l4755:
 20527                           
 20528                           ;mcc_generated_files/i2c2.c: 275:                 if(i2c2_object.pTrHead == (i2c2_tr_que
      +                          ue + 1))
 20529  06E3  0831               	movf	low ((_i2c2_object| 0+1)),w
 20530  06E4  3A5C               	xorlw	(low ((_i2c2_tr_queue| 0+4)))& (0+255)
 20531  06E5  1D03               	skipz
 20532  06E6  2EE8               	goto	u369_21
 20533  06E7  2EE9               	goto	u369_20
 20534  06E8                     u369_21:
 20535  06E8  2EEB               	goto	l4759
 20536  06E9                     u369_20:
 20537  06E9                     l4757:
 20538                           
 20539                           ;mcc_generated_files/i2c2.c: 276:                 {;mcc_generated_files/i2c2.c: 278:    
      +                                           i2c2_object.pTrHead = i2c2_tr_queue;
 20540  06E9  3058               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
 20541  06EA  00B1               	movwf	low ((_i2c2_object| 0+1))
 20542  06EB                     l4759:
 20543                           
 20544                           ;mcc_generated_files/i2c2.c: 283:                 i2c2_object.trStatus.s.full = 0;
 20545  06EB  1032               	bcf	_i2c2_object+2,0
 20546                           
 20547                           ;mcc_generated_files/i2c2.c: 286:                 if(i2c2_object.pTrHead == i2c2_object.
      +                          pTrTail)
 20548  06EC  0831               	movf	low ((_i2c2_object| 0+1)),w
 20549  06ED  0630               	xorwf	_i2c2_object,w
 20550  06EE  1D03               	skipz
 20551  06EF  2EF1               	goto	u370_21
 20552  06F0  2EF2               	goto	u370_20
 20553  06F1                     u370_21:
 20554  06F1  2EF3               	goto	l374
 20555  06F2                     u370_20:
 20556  06F2                     l4761:
 20557                           
 20558                           ;mcc_generated_files/i2c2.c: 287:                 {;mcc_generated_files/i2c2.c: 289:    
      +                                           i2c2_object.trStatus.s.empty = 1;
 20559  06F2  14B2               	bsf	_i2c2_object+2,1
 20560  06F3                     l374:	
 20561                           ;mcc_generated_files/i2c2.c: 290:                 }
 20562                           
 20563                           
 20564                           ;mcc_generated_files/i2c2.c: 293:                 SSP2CON2bits.SEN = 1;
 20565  06F3  0143               	movlb	3	; select bank3
 20566  06F4  141B               	bsf	27,0	;volatile
 20567  06F5                     l4763:
 20568                           
 20569                           ;mcc_generated_files/i2c2.c: 296:                 i2c2_state = S_MASTER_SEND_ADDR;
 20570  06F5  3002               	movlw	2
 20571  06F6  0140               	movlb	0	; select bank0
 20572  06F7  00C9               	movwf	_i2c2_state
 20573  06F8  2FF7               	goto	l369
 20574  06F9                     l376:	
 20575                           ;mcc_generated_files/i2c2.c: 301:         case S_MASTER_RESTART:
 20576                           
 20577                           
 20578                           ;mcc_generated_files/i2c2.c: 306:             SSP2CON2bits.RSEN = 1;
 20579  06F9  0143               	movlb	3	; select bank3
 20580  06FA  149B               	bsf	27,1	;volatile
 20581  06FB  2EF5               	goto	l4763
 20582  06FC                     l377:	
 20583                           ;mcc_generated_files/i2c2.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 20584                           
 20585                           
 20586                           ;mcc_generated_files/i2c2.c: 315:             if(SSP2CON2bits.ACKSTAT)
 20587  06FC  0143               	movlb	3	; select bank3
 20588  06FD  1F1B               	btfss	27,6	;volatile
 20589  06FE  2F00               	goto	u371_21
 20590  06FF  2F01               	goto	u371_20
 20591  0700                     u371_21:
 20592  0700  2F08               	goto	l4771
 20593  0701                     u371_20:
 20594  0701                     l4767:
 20595                           
 20596                           ;mcc_generated_files/i2c2.c: 316:             {;mcc_generated_files/i2c2.c: 317:        
      +                                   i2c2_object.i2cErrors++;
 20597  0701  0140               	movlb	0	; select bank0
 20598  0702  0AB4               	incf	_i2c2_object+4,f
 20599  0703                     l4769:
 20600                           
 20601                           ;mcc_generated_files/i2c2.c: 318:                 I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 20602  0703  3004               	movlw	4
 20603  0704  319E  2666  3186   	fcall	_I2C2_Stop
 20604                           
 20605                           ;mcc_generated_files/i2c2.c: 319:             }
 20606  0707  2FF7               	goto	l369
 20607  0708                     l4771:
 20608                           
 20609                           ;mcc_generated_files/i2c2.c: 321:             {;mcc_generated_files/i2c2.c: 323:        
      +                                   SSP2BUF = (i2c_address >> 1) & 0x00FF;
 20610  0708  0140               	movlb	0	; select bank0
 20611  0709  085D               	movf	I2C2_ISR@i2c_address+1,w
 20612  070A  00FF               	movwf	btemp+11
 20613  070B  085C               	movf	I2C2_ISR@i2c_address,w
 20614  070C  00FE               	movwf	btemp+10
 20615  070D  36FF               	lsrf	btemp+11,f
 20616  070E  0CFE               	rrf	btemp+10,f
 20617  070F  087E               	movf	wtemp5,w
 20618  0710  0143               	movlb	3	; select bank3
 20619  0711  0096               	movwf	22	;volatile
 20620  0712                     l4773:
 20621                           
 20622                           ;mcc_generated_files/i2c2.c: 326:                 if(i2c_address & 0x01)
 20623  0712  0140               	movlb	0	; select bank0
 20624  0713  1C5C               	btfss	I2C2_ISR@i2c_address,0
 20625  0714  2F16               	goto	u372_21
 20626  0715  2F17               	goto	u372_20
 20627  0716                     u372_21:
 20628  0716  2F1A               	goto	l4777
 20629  0717                     u372_20:
 20630  0717                     l4775:
 20631                           
 20632                           ;mcc_generated_files/i2c2.c: 327:                 {;mcc_generated_files/i2c2.c: 330:    
      +                                           i2c2_state = S_MASTER_10BIT_RESTART;
 20633  0717  300B               	movlw	11
 20634  0718  00C9               	movwf	_i2c2_state
 20635                           
 20636                           ;mcc_generated_files/i2c2.c: 331:                 }
 20637  0719  2FF7               	goto	l369
 20638  071A                     l4777:
 20639                           
 20640                           ;mcc_generated_files/i2c2.c: 333:                 {;mcc_generated_files/i2c2.c: 335:    
      +                                           i2c2_state = S_MASTER_SEND_DATA;
 20641  071A  3003               	movlw	3
 20642  071B  00C9               	movwf	_i2c2_state
 20643  071C  2FF7               	goto	l369
 20644  071D                     l382:	
 20645                           ;mcc_generated_files/i2c2.c: 341:         case S_MASTER_10BIT_RESTART:
 20646                           
 20647                           
 20648                           ;mcc_generated_files/i2c2.c: 343:             if(SSP2CON2bits.ACKSTAT)
 20649  071D  0143               	movlb	3	; select bank3
 20650  071E  1F1B               	btfss	27,6	;volatile
 20651  071F  2F21               	goto	u373_21
 20652  0720  2F22               	goto	u373_20
 20653  0721                     u373_21:
 20654  0721  2F29               	goto	l383
 20655  0722                     u373_20:
 20656  0722                     l4779:
 20657                           
 20658                           ;mcc_generated_files/i2c2.c: 344:             {;mcc_generated_files/i2c2.c: 345:        
      +                                   i2c2_object.i2cErrors++;
 20659  0722  0140               	movlb	0	; select bank0
 20660  0723  0AB4               	incf	_i2c2_object+4,f
 20661  0724                     l4781:
 20662                           
 20663                           ;mcc_generated_files/i2c2.c: 346:                 I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 20664  0724  3004               	movlw	4
 20665  0725  319E  2666  3186   	fcall	_I2C2_Stop
 20666                           
 20667                           ;mcc_generated_files/i2c2.c: 347:             }
 20668  0728  2FF7               	goto	l369
 20669  0729                     l383:	
 20670                           ;mcc_generated_files/i2c2.c: 348:             else
 20671                           
 20672                           
 20673                           ;mcc_generated_files/i2c2.c: 349:             {;mcc_generated_files/i2c2.c: 352:        
      +                                   SSP2CON2bits.RSEN = 1;
 20674  0729  149B               	bsf	27,1	;volatile
 20675  072A                     l4783:
 20676                           
 20677                           ;mcc_generated_files/i2c2.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 20678  072A  3006               	movlw	6
 20679  072B  0140               	movlb	0	; select bank0
 20680  072C  055D               	andwf	I2C2_ISR@i2c_address+1,w
 20681  072D  00FF               	movwf	btemp+11
 20682  072E  30F0               	movlw	240
 20683  072F  047F               	iorwf	btemp+11,w
 20684  0730  00DC               	movwf	I2C2_ISR@i2c_address
 20685  0731  3000               	movlw	0
 20686  0732  00DD               	movwf	I2C2_ISR@i2c_address+1
 20687  0733                     l4785:
 20688                           
 20689                           ;mcc_generated_files/i2c2.c: 359:                 i2c_address |= 0x0001;
 20690  0733  145C               	bsf	I2C2_ISR@i2c_address,0
 20691  0734                     l4787:
 20692                           
 20693                           ;mcc_generated_files/i2c2.c: 362:                 i2c_10bit_address_restart = 1;
 20694  0734  01C4               	clrf	I2C2_ISR@i2c_10bit_address_restart
 20695  0735  0AC4               	incf	I2C2_ISR@i2c_10bit_address_restart,f
 20696  0736  2EF5               	goto	l4763
 20697  0737                     l4791:
 20698                           
 20699                           ;mcc_generated_files/i2c2.c: 383:             if(i2c_10bit_address_restart != 1)
 20700  0737  0344               	decf	I2C2_ISR@i2c_10bit_address_restart,w
 20701  0738  1903               	btfsc	3,2
 20702  0739  2F3B               	goto	u374_21
 20703  073A  2F3C               	goto	u374_20
 20704  073B                     u374_21:
 20705  073B  2F50               	goto	l4811
 20706  073C                     u374_20:
 20707  073C                     l4793:
 20708                           
 20709                           ;mcc_generated_files/i2c2.c: 384:             {;mcc_generated_files/i2c2.c: 386:        
      +                                   i2c_address = p_i2c2_trb_current->address;
 20710  073C  0847               	movf	_p_i2c2_trb_current,w
 20711  073D  0084               	movwf	4
 20712  073E  0185               	clrf	5
 20713  073F  3F00               	moviw [0]fsr0
 20714  0740  00DC               	movwf	I2C2_ISR@i2c_address
 20715  0741  3F01               	moviw [1]fsr0
 20716  0742  00DD               	movwf	I2C2_ISR@i2c_address+1
 20717  0743                     l4795:
 20718                           
 20719                           ;mcc_generated_files/i2c2.c: 387:                 pi2c_buf_ptr = p_i2c2_trb_current->pbu
      +                          ffer;
 20720  0743  0847               	movf	_p_i2c2_trb_current,w
 20721  0744  3E03               	addlw	3
 20722  0745  0084               	movwf	4
 20723  0746  0185               	clrf	5
 20724  0747  3F00               	moviw [0]fsr0
 20725  0748  00BF               	movwf	I2C2_ISR@pi2c_buf_ptr
 20726  0749  3F01               	moviw [1]fsr0
 20727  074A  00C0               	movwf	I2C2_ISR@pi2c_buf_ptr+1
 20728  074B                     l4797:
 20729                           
 20730                           ;mcc_generated_files/i2c2.c: 388:                 i2c_bytes_left = p_i2c2_trb_current->l
      +                          ength;
 20731  074B  0847               	movf	_p_i2c2_trb_current,w
 20732  074C  0084               	movwf	4
 20733  074D  0185               	clrf	5
 20734  074E  3F02               	moviw [2]fsr0
 20735  074F  00C5               	movwf	I2C2_ISR@i2c_bytes_left
 20736  0750                     l4811:
 20737                           
 20738                           ;mcc_generated_files/i2c2.c: 412:             {;mcc_generated_files/i2c2.c: 414:        
      +                                   SSP2BUF = i2c_address;
 20739  0750  085C               	movf	I2C2_ISR@i2c_address,w
 20740  0751  0143               	movlb	3	; select bank3
 20741  0752  0096               	movwf	22	;volatile
 20742  0753                     l4813:
 20743                           
 20744                           ;mcc_generated_files/i2c2.c: 415:                 if(i2c_address & 0x01)
 20745  0753  0140               	movlb	0	; select bank0
 20746  0754  1C5C               	btfss	I2C2_ISR@i2c_address,0
 20747  0755  2F57               	goto	u375_21
 20748  0756  2F58               	goto	u375_20
 20749  0757                     u375_21:
 20750  0757  2F1A               	goto	l4777
 20751  0758                     u375_20:
 20752  0758                     l4815:
 20753                           
 20754                           ;mcc_generated_files/i2c2.c: 416:                 {;mcc_generated_files/i2c2.c: 418:    
      +                                           i2c2_state = S_MASTER_ACK_ADDR;
 20755  0758  3005               	movlw	5
 20756  0759  00C9               	movwf	_i2c2_state
 20757                           
 20758                           ;mcc_generated_files/i2c2.c: 419:                 }
 20759  075A  2FF7               	goto	l369
 20760  075B                     l393:	
 20761                           ;mcc_generated_files/i2c2.c: 428:         case S_MASTER_SEND_DATA:
 20762                           
 20763                           
 20764                           ;mcc_generated_files/i2c2.c: 431:             if(SSP2CON2bits.ACKSTAT)
 20765  075B  0143               	movlb	3	; select bank3
 20766  075C  1F1B               	btfss	27,6	;volatile
 20767  075D  2F5F               	goto	u376_21
 20768  075E  2F60               	goto	u376_20
 20769  075F                     u376_21:
 20770  075F  2F69               	goto	l4825
 20771  0760                     u376_20:
 20772  0760                     l4819:
 20773                           
 20774                           ;mcc_generated_files/i2c2.c: 432:             {;mcc_generated_files/i2c2.c: 434:        
      +                                   i2c2_object.i2cErrors++;
 20775  0760  0140               	movlb	0	; select bank0
 20776  0761  0AB4               	incf	_i2c2_object+4,f
 20777  0762                     l4821:
 20778                           
 20779                           ;mcc_generated_files/i2c2.c: 437:                 SSP2CON2bits.ACKSTAT = 0;
 20780  0762  0143               	movlb	3	; select bank3
 20781  0763  131B               	bcf	27,6	;volatile
 20782  0764                     l4823:
 20783                           
 20784                           ;mcc_generated_files/i2c2.c: 440:                 I2C2_Stop(I2C2_DATA_NO_ACK);
 20785  0764  3005               	movlw	5
 20786  0765  319E  2666  3186   	fcall	_I2C2_Stop
 20787                           
 20788                           ;mcc_generated_files/i2c2.c: 442:             }
 20789  0768  2FF7               	goto	l369
 20790  0769                     l4825:
 20791                           
 20792                           ;mcc_generated_files/i2c2.c: 444:             {;mcc_generated_files/i2c2.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 20793  0769  0140               	movlb	0	; select bank0
 20794  076A  03C5               	decf	I2C2_ISR@i2c_bytes_left,f
 20795  076B  0A45               	incf	I2C2_ISR@i2c_bytes_left,w
 20796  076C  1D03               	btfss	3,2
 20797  076D  2F6F               	goto	u377_21
 20798  076E  2F70               	goto	u377_20
 20799  076F                     u377_21:
 20800  076F  2F7E               	goto	l4835
 20801  0770                     u377_20:
 20802  0770                     l4827:
 20803                           
 20804                           ;mcc_generated_files/i2c2.c: 447:                 {;mcc_generated_files/i2c2.c: 451:    
      +                                           p_i2c2_trb_current++;
 20805  0770  3005               	movlw	5
 20806  0771  07C7               	addwf	_p_i2c2_trb_current,f
 20807  0772                     l4829:
 20808                           
 20809                           ;mcc_generated_files/i2c2.c: 454:                     if(--i2c2_trb_count == 0)
 20810  0772  0BC8               	decfsz	_i2c2_trb_count,f
 20811  0773  2F75               	goto	u378_21
 20812  0774  2F76               	goto	u378_20
 20813  0775                     u378_21:
 20814  0775  2F7B               	goto	l397
 20815  0776                     u378_20:
 20816  0776                     l4831:
 20817                           
 20818                           ;mcc_generated_files/i2c2.c: 455:                     {;mcc_generated_files/i2c2.c: 456:
      +                                                   I2C2_Stop(I2C2_MESSAGE_COMPLETE);
 20819  0776  3000               	movlw	0
 20820  0777  319E  2666  3186   	fcall	_I2C2_Stop
 20821                           
 20822                           ;mcc_generated_files/i2c2.c: 457:                     }
 20823  077A  2FF7               	goto	l369
 20824  077B                     l397:	
 20825                           ;mcc_generated_files/i2c2.c: 458:                     else
 20826                           
 20827                           
 20828                           ;mcc_generated_files/i2c2.c: 459:                     {;mcc_generated_files/i2c2.c: 466:
      +                                                   SSP2CON2bits.RSEN = 1;
 20829  077B  0143               	movlb	3	; select bank3
 20830  077C  149B               	bsf	27,1	;volatile
 20831  077D  2EF5               	goto	l4763
 20832  077E                     l4835:
 20833                           
 20834                           ;mcc_generated_files/i2c2.c: 474:                 {;mcc_generated_files/i2c2.c: 476:    
      +                                           SSP2BUF = *pi2c_buf_ptr++;
 20835  077E  083F               	movf	I2C2_ISR@pi2c_buf_ptr,w
 20836  077F  0084               	movwf	4
 20837  0780  0840               	movf	I2C2_ISR@pi2c_buf_ptr+1,w
 20838  0781  0085               	movwf	5
 20839  0782  0800               	movf	0,w
 20840  0783  0143               	movlb	3	; select bank3
 20841  0784  0096               	movwf	22	;volatile
 20842  0785                     l4837:
 20843  0785  0140               	movlb	0	; select bank0
 20844  0786  0ABF               	incf	I2C2_ISR@pi2c_buf_ptr,f
 20845  0787  1903               	skipnz
 20846  0788  0AC0               	incf	I2C2_ISR@pi2c_buf_ptr+1,f
 20847  0789  2FF7               	goto	l369
 20848  078A                     l400:	
 20849                           ;mcc_generated_files/i2c2.c: 481:         case S_MASTER_ACK_ADDR:
 20850                           
 20851                           
 20852                           ;mcc_generated_files/i2c2.c: 484:             if(SSP2CON2bits.ACKSTAT)
 20853  078A  0143               	movlb	3	; select bank3
 20854  078B  1F1B               	btfss	27,6	;volatile
 20855  078C  2F8E               	goto	u379_21
 20856  078D  2F8F               	goto	u379_20
 20857  078E                     u379_21:
 20858  078E  2F98               	goto	l401
 20859  078F                     u379_20:
 20860  078F                     l4839:
 20861                           
 20862                           ;mcc_generated_files/i2c2.c: 485:             {;mcc_generated_files/i2c2.c: 488:        
      +                                   i2c2_object.i2cErrors++;
 20863  078F  0140               	movlb	0	; select bank0
 20864  0790  0AB4               	incf	_i2c2_object+4,f
 20865  0791                     l4841:
 20866                           
 20867                           ;mcc_generated_files/i2c2.c: 491:                 I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 20868  0791  3004               	movlw	4
 20869  0792  319E  2666  3186   	fcall	_I2C2_Stop
 20870  0795                     l4843:
 20871                           
 20872                           ;mcc_generated_files/i2c2.c: 494:                 SSP2CON2bits.ACKSTAT = 0;
 20873  0795  0143               	movlb	3	; select bank3
 20874  0796  131B               	bcf	27,6	;volatile
 20875                           
 20876                           ;mcc_generated_files/i2c2.c: 495:             }
 20877  0797  2FF7               	goto	l369
 20878  0798                     l401:	
 20879                           ;mcc_generated_files/i2c2.c: 496:             else
 20880                           
 20881                           
 20882                           ;mcc_generated_files/i2c2.c: 497:             {;mcc_generated_files/i2c2.c: 498:        
      +                                   SSP2CON2bits.RCEN = 1;
 20883  0798  159B               	bsf	27,3	;volatile
 20884  0799                     l4845:
 20885                           
 20886                           ;mcc_generated_files/i2c2.c: 499:                 i2c2_state = S_MASTER_ACK_RCV_DATA;
 20887  0799  3008               	movlw	8
 20888  079A  0140               	movlb	0	; select bank0
 20889  079B  00C9               	movwf	_i2c2_state
 20890  079C  2FF7               	goto	l369
 20891  079D                     l4847:
 20892                           
 20893                           ;mcc_generated_files/i2c2.c: 508:             i2c2_state = S_MASTER_ACK_RCV_DATA;
 20894  079D  3008               	movlw	8
 20895  079E  00C9               	movwf	_i2c2_state
 20896  079F                     l4849:
 20897                           
 20898                           ;mcc_generated_files/i2c2.c: 511:             SSP2CON2bits.RCEN = 1;
 20899  079F  0143               	movlb	3	; select bank3
 20900  07A0  159B               	bsf	27,3	;volatile
 20901                           
 20902                           ;mcc_generated_files/i2c2.c: 513:             break;
 20903  07A1  2FF7               	goto	l369
 20904  07A2                     l4851:
 20905                           
 20906                           ;mcc_generated_files/i2c2.c: 518:             *pi2c_buf_ptr++ = SSP2BUF;
 20907  07A2  083F               	movf	I2C2_ISR@pi2c_buf_ptr,w
 20908  07A3  0084               	movwf	4
 20909  07A4  0840               	movf	I2C2_ISR@pi2c_buf_ptr+1,w
 20910  07A5  0085               	movwf	5
 20911  07A6  0143               	movlb	3	; select bank3
 20912  07A7  0816               	movf	22,w	;volatile
 20913  07A8  0080               	movwf	0
 20914  07A9                     l4853:
 20915  07A9  0140               	movlb	0	; select bank0
 20916  07AA  0ABF               	incf	I2C2_ISR@pi2c_buf_ptr,f
 20917  07AB  1903               	skipnz
 20918  07AC  0AC0               	incf	I2C2_ISR@pi2c_buf_ptr+1,f
 20919  07AD                     l4855:
 20920                           
 20921                           ;mcc_generated_files/i2c2.c: 521:             if(--i2c_bytes_left)
 20922  07AD  03C5               	decf	I2C2_ISR@i2c_bytes_left,f
 20923  07AE  1903               	btfsc	3,2
 20924  07AF  2FB1               	goto	u380_21
 20925  07B0  2FB2               	goto	u380_20
 20926  07B1                     u380_21:
 20927  07B1  2FB8               	goto	l405
 20928  07B2                     u380_20:
 20929  07B2                     l4857:
 20930                           
 20931                           ;mcc_generated_files/i2c2.c: 522:             {;mcc_generated_files/i2c2.c: 528:        
      +                                   SSP2CON2bits.ACKDT = 0;
 20932  07B2  0143               	movlb	3	; select bank3
 20933  07B3  129B               	bcf	27,5	;volatile
 20934  07B4                     l4859:
 20935                           
 20936                           ;mcc_generated_files/i2c2.c: 531:                 i2c2_state = S_MASTER_RCV_DATA;
 20937  07B4  3006               	movlw	6
 20938  07B5  0140               	movlb	0	; select bank0
 20939  07B6  00C9               	movwf	_i2c2_state
 20940                           
 20941                           ;mcc_generated_files/i2c2.c: 532:             }
 20942  07B7  2FBD               	goto	l4863
 20943  07B8                     l405:	
 20944                           ;mcc_generated_files/i2c2.c: 533:             else
 20945                           
 20946                           
 20947                           ;mcc_generated_files/i2c2.c: 534:             {;mcc_generated_files/i2c2.c: 538:        
      +                                   SSP2CON2bits.ACKDT = 1;
 20948  07B8  0143               	movlb	3	; select bank3
 20949  07B9  169B               	bsf	27,5	;volatile
 20950  07BA                     l4861:
 20951                           
 20952                           ;mcc_generated_files/i2c2.c: 540:                 I2C2_FunctionComplete();
 20953  07BA  319C  241B  3186   	fcall	_I2C2_FunctionComplete
 20954  07BD                     l4863:
 20955                           
 20956                           ;mcc_generated_files/i2c2.c: 544:             SSP2CON2bits.ACKEN = 1;
 20957  07BD  0143               	movlb	3	; select bank3
 20958  07BE  161B               	bsf	27,4	;volatile
 20959                           
 20960                           ;mcc_generated_files/i2c2.c: 545:             break;
 20961  07BF  2FF7               	goto	l369
 20962  07C0                     l4865:
 20963                           
 20964                           ;mcc_generated_files/i2c2.c: 551:             I2C2_Stop(I2C2_MESSAGE_COMPLETE);
 20965  07C0  3000               	movlw	0
 20966  07C1  319E  2666  3186   	fcall	_I2C2_Stop
 20967                           
 20968                           ;mcc_generated_files/i2c2.c: 552:             break;
 20969  07C4  2FF7               	goto	l369
 20970  07C5                     l4867:
 20971                           
 20972                           ;mcc_generated_files/i2c2.c: 558:             i2c2_object.i2cErrors++;
 20973  07C5  0AB4               	incf	_i2c2_object+4,f
 20974  07C6                     l4869:
 20975                           
 20976                           ;mcc_generated_files/i2c2.c: 559:             I2C2_Stop(I2C2_LOST_STATE);
 20977  07C6  3006               	movlw	6
 20978  07C7  319E  2666  3186   	fcall	_I2C2_Stop
 20979                           
 20980                           ;mcc_generated_files/i2c2.c: 560:             break;
 20981  07CA  2FF7               	goto	l369
 20982  07CB                     l4873:
 20983  07CB  0140               	movlb	0	; select bank0
 20984  07CC  0849               	movf	_i2c2_state,w
 20985  07CD  00FE               	movwf	btemp+10
 20986  07CE  01FF               	clrf	btemp+11
 20987                           
 20988                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20989                           ; Switch size 1, requested type "simple"
 20990                           ; Number of cases is 1, Range of values is 0 to 0
 20991                           ; switch strategies available:
 20992                           ; Name         Instructions Cycles
 20993                           ; simple_byte            4     3 (average)
 20994                           ; direct_byte            8     6 (fixed)
 20995                           ; jumptable            260     6 (fixed)
 20996                           ;	Chosen strategy is simple_byte
 20997  07CF  087F               	movf	wtemp5+1,w
 20998  07D0  3A00               	xorlw	0	; case 0
 20999  07D1  1903               	skipnz
 21000  07D2  2FD4               	goto	l5653
 21001  07D3  2FC5               	goto	l4867
 21002  07D4                     l5653:
 21003                           
 21004                           ; Switch size 1, requested type "simple"
 21005                           ; Number of cases is 11, Range of values is 0 to 11
 21006                           ; switch strategies available:
 21007                           ; Name         Instructions Cycles
 21008                           ; direct_byte           30     6 (fixed)
 21009                           ; simple_byte           34    18 (average)
 21010                           ; jumptable            260     6 (fixed)
 21011                           ;	Chosen strategy is simple_byte
 21012  07D4  087E               	movf	wtemp5,w
 21013  07D5  3A00               	xorlw	0	; case 0
 21014  07D6  1903               	skipnz
 21015  07D7  2ED1               	goto	l371
 21016  07D8  3A01               	xorlw	1	; case 1
 21017  07D9  1903               	skipnz
 21018  07DA  2EF9               	goto	l376
 21019  07DB  3A03               	xorlw	3	; case 2
 21020  07DC  1903               	skipnz
 21021  07DD  2F37               	goto	l4791
 21022  07DE  3A01               	xorlw	1	; case 3
 21023  07DF  1903               	skipnz
 21024  07E0  2F5B               	goto	l393
 21025  07E1  3A07               	xorlw	7	; case 4
 21026  07E2  1903               	skipnz
 21027  07E3  2FC0               	goto	l4865
 21028  07E4  3A01               	xorlw	1	; case 5
 21029  07E5  1903               	skipnz
 21030  07E6  2F8A               	goto	l400
 21031  07E7  3A03               	xorlw	3	; case 6
 21032  07E8  1903               	skipnz
 21033  07E9  2F9D               	goto	l4847
 21034  07EA  3A01               	xorlw	1	; case 7
 21035  07EB  1903               	skipnz
 21036  07EC  2FC0               	goto	l4865
 21037  07ED  3A0F               	xorlw	15	; case 8
 21038  07EE  1903               	skipnz
 21039  07EF  2FA2               	goto	l4851
 21040  07F0  3A02               	xorlw	2	; case 10
 21041  07F1  1903               	skipnz
 21042  07F2  2EFC               	goto	l377
 21043  07F3  3A01               	xorlw	1	; case 11
 21044  07F4  1903               	skipnz
 21045  07F5  2F1D               	goto	l382
 21046  07F6  2FC5               	goto	l4867
 21047  07F7                     l369:
 21048                           
 21049                           ; _I2C2_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 21050  07F7  0008               	return
 21051  07F8                     __end_of_I2C2_ISR:
 21052                           
 21053                           	psect	text89
 21054  1E66                     __ptext89:	
 21055 ;; *************** function _I2C2_Stop *****************
 21056 ;; Defined at:
 21057 ;;		line 583 in file "mcc_generated_files/i2c2.c"
 21058 ;; Parameters:    Size  Location     Type
 21059 ;;  completion_c    1    wreg     enum E8045
 21060 ;; Auto vars:     Size  Location     Type
 21061 ;;  completion_c    1  [STACK] enum E8045
 21062 ;; Return value:  Size  Location     Type
 21063 ;;                  1    wreg      void 
 21064 ;; Registers used:
 21065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+10, btemp+11
 21066 ;; Tracked objects:
 21067 ;;		On entry : 0/0
 21068 ;;		On exit  : 3F/0
 21069 ;;		Unchanged: 0/0
 21070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21075 ;;Total ram usage:        0 bytes
 21076 ;; Hardware stack levels used:    1
 21077 ;; This function calls:
 21078 ;;		Nothing
 21079 ;; This function is called by:
 21080 ;;		_I2C2_ISR
 21081 ;; This function uses a reentrant model
 21082 ;;
 21083                           
 21084                           
 21085                           ;psect for function _I2C2_Stop
 21086  1E66                     _I2C2_Stop:
 21087                           
 21088                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21089  1E66  3141               	addfsr 1,1
 21090                           
 21091                           ;incstack = 0
 21092                           ; Regs used in _I2C2_Stop: [wreg-fsr0h+fsr1l+fsr1h+status,2-btemp+0+btemp+10+btemp+11]
 21093                           ;_completion_code stored from wreg
 21094                           ;stkvar	_completion_code @ sp[(-1)+0]
 21095  1E67  3FFF               	movwi [-1]fsr1
 21096  1E68                     l4493:
 21097                           
 21098                           ;mcc_generated_files/i2c2.c: 583: void I2C2_Stop(I2C2_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c2.c: 584: {;mcc_generated_files/i2c2.c: 586:     SSP2CON2bits.PEN =
      +                           1;
 21099  1E68  0143               	movlb	3	; select bank3
 21100  1E69  151B               	bsf	27,2	;volatile
 21101  1E6A                     l4495:
 21102                           
 21103                           ;mcc_generated_files/i2c2.c: 589:     if (p_i2c2_current->pTrFlag != ((void*)0))
 21104  1E6A  0140               	movlb	0	; select bank0
 21105  1E6B  0846               	movf	_p_i2c2_current,w
 21106  1E6C  3E02               	addlw	2
 21107  1E6D  0084               	movwf	4
 21108  1E6E  0185               	clrf	5
 21109  1E6F  0012               	moviw fsr0++
 21110  1E70  0400               	iorwf	0,w
 21111  1E71  1903               	btfsc	3,2
 21112  1E72  2E74               	goto	u340_21
 21113  1E73  2E75               	goto	u340_20
 21114  1E74                     u340_21:
 21115  1E74  2E83               	goto	l4499
 21116  1E75                     u340_20:
 21117  1E75                     l4497:
 21118                           
 21119                           ;mcc_generated_files/i2c2.c: 590:     {;mcc_generated_files/i2c2.c: 592:         *(p_i2c
      +                          2_current->pTrFlag) = completion_code;
 21120                           ;stkvar	_completion_code @ sp[(-1)+0]
 21121  1E75  0846               	movf	_p_i2c2_current,w
 21122  1E76  3E02               	addlw	2
 21123  1E77  0084               	movwf	4
 21124  1E78  0185               	clrf	5
 21125  1E79  3F00               	moviw [0]fsr0
 21126  1E7A  00FE               	movwf	btemp+10
 21127  1E7B  3F01               	moviw [1]fsr0
 21128  1E7C  00FF               	movwf	btemp+11
 21129  1E7D  087E               	movf	wtemp5,w
 21130  1E7E  0084               	movwf	4
 21131  1E7F  087F               	movf	wtemp5+1,w
 21132  1E80  0085               	movwf	5
 21133  1E81  3F7F               	moviw [-1]fsr1
 21134  1E82  0080               	movwf	0
 21135  1E83                     l4499:
 21136                           
 21137                           ;mcc_generated_files/i2c2.c: 596:     i2c2_state = S_MASTER_IDLE;
 21138  1E83  01C9               	clrf	_i2c2_state
 21139  1E84                     l418:
 21140                           
 21141                           ; _I2C2_Stop: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 21142  1E84  317F               	addfsr 1,-1
 21143  1E85  0008               	return
 21144  1E86                     __end_of_I2C2_Stop:
 21145                           
 21146                           	psect	text90
 21147  1C1B                     __ptext90:	
 21148 ;; *************** function _I2C2_FunctionComplete *****************
 21149 ;; Defined at:
 21150 ;;		line 565 in file "mcc_generated_files/i2c2.c"
 21151 ;; Parameters:    Size  Location     Type
 21152 ;;		None
 21153 ;; Auto vars:     Size  Location     Type
 21154 ;;		None
 21155 ;; Return value:  Size  Location     Type
 21156 ;;                  1    wreg      void 
 21157 ;; Registers used:
 21158 ;;		wreg, status,2, status,0
 21159 ;; Tracked objects:
 21160 ;;		On entry : 3F/3
 21161 ;;		On exit  : 3F/0
 21162 ;;		Unchanged: 0/0
 21163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21168 ;;Total ram usage:        0 bytes
 21169 ;; Hardware stack levels used:    1
 21170 ;; This function calls:
 21171 ;;		Nothing
 21172 ;; This function is called by:
 21173 ;;		_I2C2_ISR
 21174 ;; This function uses a reentrant model
 21175 ;;
 21176                           
 21177                           
 21178                           ;psect for function _I2C2_FunctionComplete
 21179  1C1B                     _I2C2_FunctionComplete:
 21180  1C1B                     l4501:	
 21181                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21182                           ;incstack = 0
 21183                           ; Regs used in _I2C2_FunctionComplete: [wreg+status,2+status,0]
 21184                           
 21185                           
 21186                           ;mcc_generated_files/i2c2.c: 569:     p_i2c2_trb_current++;
 21187  1C1B  3005               	movlw	5
 21188  1C1C  0140               	movlb	0	; select bank0
 21189  1C1D  07C7               	addwf	_p_i2c2_trb_current,f
 21190  1C1E                     l4503:
 21191                           
 21192                           ;mcc_generated_files/i2c2.c: 572:     if(--i2c2_trb_count == 0)
 21193  1C1E  0BC8               	decfsz	_i2c2_trb_count,f
 21194  1C1F  2C21               	goto	u341_21
 21195  1C20  2C22               	goto	u341_20
 21196  1C21                     u341_21:
 21197  1C21  2C25               	goto	l412
 21198  1C22                     u341_20:
 21199  1C22                     l4505:
 21200                           
 21201                           ;mcc_generated_files/i2c2.c: 573:     {;mcc_generated_files/i2c2.c: 574:         i2c2_st
      +                          ate = S_MASTER_SEND_STOP;
 21202  1C22  3004               	movlw	4
 21203  1C23  00C9               	movwf	_i2c2_state
 21204                           
 21205                           ;mcc_generated_files/i2c2.c: 575:     }
 21206  1C24  2C27               	goto	l414
 21207  1C25                     l412:	
 21208                           ;mcc_generated_files/i2c2.c: 576:     else
 21209                           
 21210                           
 21211                           ;mcc_generated_files/i2c2.c: 577:     {;mcc_generated_files/i2c2.c: 578:         i2c2_st
      +                          ate = S_MASTER_RESTART;
 21212  1C25  01C9               	clrf	_i2c2_state
 21213  1C26  0AC9               	incf	_i2c2_state,f
 21214  1C27                     l414:
 21215                           
 21216                           ; _I2C2_FunctionComplete: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 0, argsize = 0, vargsize = 0
 21217  1C27  0008               	return
 21218  1C28                     __end_of_I2C2_FunctionComplete:
 21219                           
 21220                           	psect	text91
 21221  0800                     __ptext91:	
 21222 ;; *************** function _I2C2_BusCollisionISR *****************
 21223 ;; Defined at:
 21224 ;;		line 742 in file "mcc_generated_files/i2c2.c"
 21225 ;; Parameters:    Size  Location     Type
 21226 ;;		None
 21227 ;; Auto vars:     Size  Location     Type
 21228 ;;		None
 21229 ;; Return value:  Size  Location     Type
 21230 ;;                  1    wreg      void 
 21231 ;; Registers used:
 21232 ;;		None
 21233 ;; Tracked objects:
 21234 ;;		On entry : 3F/E
 21235 ;;		On exit  : 3F/E
 21236 ;;		Unchanged: 0/0
 21237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21242 ;;Total ram usage:        0 bytes
 21243 ;; Hardware stack levels used:    1
 21244 ;; This function calls:
 21245 ;;		Nothing
 21246 ;; This function is called by:
 21247 ;;		_INTERRUPT_InterruptManager
 21248 ;; This function uses a reentrant model
 21249 ;;
 21250                           
 21251                           
 21252                           ;psect for function _I2C2_BusCollisionISR
 21253  0800                     _I2C2_BusCollisionISR:
 21254  0800                     l4733:	
 21255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21256                           ;incstack = 0
 21257                           ; Regs used in _I2C2_BusCollisionISR: []
 21258                           
 21259                           
 21260                           ;mcc_generated_files/i2c2.c: 745:  PIR3bits.BCL2IF = 0;
 21261  0800  014E               	movlb	14	; select bank14
 21262  0801  118F               	bcf	15,3	;volatile
 21263  0802                     l461:
 21264                           
 21265                           ; _I2C2_BusCollisionISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 21266  0802  0008               	return
 21267  0803                     __end_of_I2C2_BusCollisionISR:
 21268                           
 21269                           	psect	text92
 21270  1DD8                     __ptext92:	
 21271 ;; *************** function _EUSART1_Transmit_ISR *****************
 21272 ;; Defined at:
 21273 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 21274 ;; Parameters:    Size  Location     Type
 21275 ;;		None
 21276 ;; Auto vars:     Size  Location     Type
 21277 ;;		None
 21278 ;; Return value:  Size  Location     Type
 21279 ;;                  1    wreg      void 
 21280 ;; Registers used:
 21281 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 21282 ;; Tracked objects:
 21283 ;;		On entry : 3F/1
 21284 ;;		On exit  : 31/0
 21285 ;;		Unchanged: 0/0
 21286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21291 ;;Total ram usage:        0 bytes
 21292 ;; Hardware stack levels used:    1
 21293 ;; This function calls:
 21294 ;;		Nothing
 21295 ;; This function is called by:
 21296 ;;		_EUSART1_Initialize
 21297 ;;		_INTERRUPT_InterruptManager
 21298 ;; This function uses a reentrant model
 21299 ;;
 21300                           
 21301                           
 21302                           ;psect for function _EUSART1_Transmit_ISR
 21303  1DD8                     _EUSART1_Transmit_ISR:
 21304  1DD8                     l4697:	
 21305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21306                           ;incstack = 0
 21307                           ; Regs used in _EUSART1_Transmit_ISR: [wreg-fsr0h+status,2+status,0]
 21308                           
 21309                           
 21310                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 21311  1DD8  3008               	movlw	8
 21312  1DD9  0140               	movlb	0	; select bank0
 21313  1DDA  026F               	subwf	_eusart1TxBufferRemaining,w
 21314  1DDB  1803               	skipnc
 21315  1DDC  2DDE               	goto	u362_21
 21316  1DDD  2DDF               	goto	u362_20
 21317  1DDE                     u362_21:
 21318  1DDE  2DF1               	goto	l187
 21319  1DDF                     u362_20:
 21320  1DDF                     l4699:
 21321                           
 21322                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 21323  1DDF  084D               	movf	_eusart1TxTail,w
 21324  1DE0  3E28               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 21325  1DE1  0084               	movwf	4
 21326  1DE2  0185               	clrf	5
 21327  1DE3  0800               	movf	0,w
 21328  1DE4  0142               	movlb	2	; select bank2
 21329  1DE5  009A               	movwf	26	;volatile
 21330  1DE6                     l4701:
 21331  1DE6  0140               	movlb	0	; select bank0
 21332  1DE7  0ACD               	incf	_eusart1TxTail,f	;volatile
 21333  1DE8                     l4703:
 21334                           
 21335                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 21336  1DE8  3008               	movlw	8
 21337  1DE9  024D               	subwf	_eusart1TxTail,w
 21338  1DEA  1C03               	skipc
 21339  1DEB  2DED               	goto	u363_21
 21340  1DEC  2DEE               	goto	u363_20
 21341  1DED                     u363_21:
 21342  1DED  2DEF               	goto	l4707
 21343  1DEE                     u363_20:
 21344  1DEE                     l4705:
 21345                           
 21346                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 21347  1DEE  01CD               	clrf	_eusart1TxTail	;volatile
 21348  1DEF                     l4707:
 21349                           
 21350                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 21351  1DEF  0AEF               	incf	_eusart1TxBufferRemaining,f	;volatile
 21352                           
 21353                           ;mcc_generated_files/eusart1.c: 209:     }
 21354  1DF0  2DF3               	goto	l190
 21355  1DF1                     l187:	
 21356                           ;mcc_generated_files/eusart1.c: 210:     else
 21357                           
 21358                           
 21359                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 21360  1DF1  014E               	movlb	14	; select bank14
 21361  1DF2  1219               	bcf	25,4	;volatile
 21362  1DF3                     l190:
 21363                           
 21364                           ; _EUSART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 21365  1DF3  0008               	return
 21366  1DF4                     __end_of_EUSART1_Transmit_ISR:
 21367                           
 21368                           	psect	text93
 21369  1B93                     __ptext93:	
 21370 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 21371 ;; Defined at:
 21372 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 21373 ;; Parameters:    Size  Location     Type
 21374 ;;		None
 21375 ;; Auto vars:     Size  Location     Type
 21376 ;;		None
 21377 ;; Return value:  Size  Location     Type
 21378 ;;                  1    wreg      void 
 21379 ;; Registers used:
 21380 ;;		None
 21381 ;; Tracked objects:
 21382 ;;		On entry : 3F/1
 21383 ;;		On exit  : 3F/2
 21384 ;;		Unchanged: 0/0
 21385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21390 ;;Total ram usage:        0 bytes
 21391 ;; Hardware stack levels used:    1
 21392 ;; This function calls:
 21393 ;;		Nothing
 21394 ;; This function is called by:
 21395 ;;		_EUSART1_Initialize
 21396 ;;		_EUSART1_Receive_ISR
 21397 ;; This function uses a reentrant model
 21398 ;;
 21399                           
 21400                           
 21401                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 21402  1B93                     _EUSART1_DefaultOverrunErrorHandler:
 21403  1B93                     l4473:	
 21404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21405                           ;incstack = 0
 21406                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 21407                           
 21408                           
 21409                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 21410  1B93  0142               	movlb	2	; select bank2
 21411  1B94  121D               	bcf	29,4	;volatile
 21412                           
 21413                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 21414  1B95  161D               	bsf	29,4	;volatile
 21415  1B96                     l207:
 21416                           
 21417                           ; _EUSART1_DefaultOverrunErrorHandler: autosize = 0, savesize = 0, parsavesize = 0, temp
      +                          size = 0 parsize = 0, argsize = 0, vargsize = 0
 21418  1B96  0008               	return
 21419  1B97                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 21420                           
 21421                           	psect	text94
 21422  0002                     __ptext94:	
 21423 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 21424 ;; Defined at:
 21425 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 21426 ;; Parameters:    Size  Location     Type
 21427 ;;		None
 21428 ;; Auto vars:     Size  Location     Type
 21429 ;;		None
 21430 ;; Return value:  Size  Location     Type
 21431 ;;                  1    wreg      void 
 21432 ;; Registers used:
 21433 ;;		None
 21434 ;; Tracked objects:
 21435 ;;		On entry : 3F/1
 21436 ;;		On exit  : 0/0
 21437 ;;		Unchanged: 0/0
 21438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21443 ;;Total ram usage:        0 bytes
 21444 ;; Hardware stack levels used:    1
 21445 ;; This function calls:
 21446 ;;		Nothing
 21447 ;; This function is called by:
 21448 ;;		_EUSART1_Initialize
 21449 ;;		_EUSART1_Receive_ISR
 21450 ;; This function uses a reentrant model
 21451 ;;
 21452                           
 21453                           
 21454                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 21455  0002                     _EUSART1_DefaultFramingErrorHandler:
 21456  0002                     l204:	
 21457                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21458                           ;incstack = 0
 21459                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 21460                           
 21461                           
 21462                           ; _EUSART1_DefaultFramingErrorHandler: autosize = 0, savesize = 0, parsavesize = 0, temp
      +                          size = 0 parsize = 0, argsize = 0, vargsize = 0
 21463  0002  0008               	return
 21464  0003                     __end_of_EUSART1_DefaultFramingErrorHandler:
 21465                           
 21466                           	psect	text95
 21467  1B8F                     __ptext95:	
 21468 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 21469 ;; Defined at:
 21470 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 21471 ;; Parameters:    Size  Location     Type
 21472 ;;		None
 21473 ;; Auto vars:     Size  Location     Type
 21474 ;;		None
 21475 ;; Return value:  Size  Location     Type
 21476 ;;                  1    wreg      void 
 21477 ;; Registers used:
 21478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 21479 ;; Tracked objects:
 21480 ;;		On entry : 3F/1
 21481 ;;		On exit  : 3F/0
 21482 ;;		Unchanged: 0/0
 21483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21488 ;;Total ram usage:        0 bytes
 21489 ;; Hardware stack levels used:    1
 21490 ;; Hardware stack levels required when called:    1
 21491 ;; This function calls:
 21492 ;;		_EUSART1_RxDataHandler
 21493 ;; This function is called by:
 21494 ;;		_EUSART1_Initialize
 21495 ;;		_EUSART1_Receive_ISR
 21496 ;; This function uses a reentrant model
 21497 ;;
 21498                           
 21499                           
 21500                           ;psect for function _EUSART1_DefaultErrorHandler
 21501  1B8F                     _EUSART1_DefaultErrorHandler:
 21502  1B8F                     l4475:	
 21503                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21504                           ;incstack = 0
 21505                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg-fsr0h+status,2+status,0+pclath]
 21506                           
 21507                           
 21508                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 21509  1B8F  319C  24A0  319B   	fcall	_EUSART1_RxDataHandler
 21510  1B92                     l210:
 21511                           
 21512                           ; _EUSART1_DefaultErrorHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 0, argsize = 0, vargsize = 0
 21513  1B92  0008               	return
 21514  1B93                     __end_of_EUSART1_DefaultErrorHandler:
 21515                           
 21516                           	psect	text96
 21517  1CA0                     __ptext96:	
 21518 ;; *************** function _EUSART1_RxDataHandler *****************
 21519 ;; Defined at:
 21520 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 21521 ;; Parameters:    Size  Location     Type
 21522 ;;		None
 21523 ;; Auto vars:     Size  Location     Type
 21524 ;;		None
 21525 ;; Return value:  Size  Location     Type
 21526 ;;                  1    wreg      void 
 21527 ;; Registers used:
 21528 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 21529 ;; Tracked objects:
 21530 ;;		On entry : 0/2
 21531 ;;		On exit  : 3F/0
 21532 ;;		Unchanged: 0/0
 21533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21538 ;;Total ram usage:        0 bytes
 21539 ;; Hardware stack levels used:    1
 21540 ;; This function calls:
 21541 ;;		Nothing
 21542 ;; This function is called by:
 21543 ;;		_EUSART1_Receive_ISR
 21544 ;;		_EUSART1_DefaultErrorHandler
 21545 ;; This function uses a reentrant model
 21546 ;;
 21547                           
 21548                           
 21549                           ;psect for function _EUSART1_RxDataHandler
 21550  1CA0                     _EUSART1_RxDataHandler:
 21551  1CA0                     l4267:	
 21552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21553                           ;incstack = 0
 21554                           ; Regs used in _EUSART1_RxDataHandler: [wreg-fsr0h+status,2+status,0]
 21555                           
 21556                           
 21557                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 21558  1CA0  0872               	movf	_eusart1RxHead,w
 21559  1CA1  3ECA               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 21560  1CA2  0084               	movwf	4
 21561  1CA3  0185               	clrf	5
 21562  1CA4  0142               	movlb	2	; select bank2
 21563  1CA5  0819               	movf	25,w	;volatile
 21564  1CA6  0080               	movwf	0
 21565  1CA7                     l4269:
 21566  1CA7  0AF2               	incf	_eusart1RxHead,f	;volatile
 21567  1CA8                     l4271:
 21568                           
 21569                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 21570  1CA8  3008               	movlw	8
 21571  1CA9  0272               	subwf	_eusart1RxHead,w
 21572  1CAA  1C03               	skipc
 21573  1CAB  2CAD               	goto	u315_21
 21574  1CAC  2CAE               	goto	u315_20
 21575  1CAD                     u315_21:
 21576  1CAD  2CAF               	goto	l4275
 21577  1CAE                     u315_20:
 21578  1CAE                     l4273:
 21579                           
 21580                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 21581  1CAE  01F2               	clrf	_eusart1RxHead	;volatile
 21582  1CAF                     l4275:
 21583                           
 21584                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 21585  1CAF  0140               	movlb	0	; select bank0
 21586  1CB0  0ACB               	incf	_eusart1RxCount,f	;volatile
 21587  1CB1                     l201:
 21588                           
 21589                           ; _EUSART1_RxDataHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 0, argsize = 0, vargsize = 0
 21590  1CB1  0008               	return
 21591  1CB2                     __end_of_EUSART1_RxDataHandler:
 21592  0074                     btemp	set	116	;btemp
 21593  0074                     wtemp0	set	116
 21594  0076                     wtemp1	set	118
 21595  0078                     wtemp2	set	120
 21596  007A                     wtemp3	set	122
 21597  007C                     wtemp4	set	124
 21598  007E                     wtemp5	set	126
 21599  0074                     ttemp0	set	116
 21600  0077                     ttemp1	set	119
 21601  007A                     ttemp2	set	122
 21602  007D                     ttemp3	set	125
 21603  0074                     ltemp0	set	116
 21604  0078                     ltemp1	set	120
 21605  007C                     ltemp2	set	124
 21606  0076                     ltemp3	set	118
 21607                           
 21608                           	psect	config
 21609                           
 21610                           ;Config register CONFIG1 @ 0x8007
 21611                           ;	External Oscillator mode selection bits
 21612                           ;	FEXTOSC = OFF, Oscillator not enabled
 21613                           ;	Power-up default value for COSC bits
 21614                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 21615                           ;	Clock Out Enable bit
 21616                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 21617                           ;	Clock Switch Enable bit
 21618                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 21619                           ;	Fail-Safe Clock Monitor Enable bit
 21620                           ;	FCMEN = ON, FSCM timer enabled
 21621  8007                     	org	32775
 21622  8007  3FEC               	dw	16364
 21623                           
 21624                           ;Config register CONFIG2 @ 0x8008
 21625                           ;	Master Clear Enable bit
 21626                           ;	MCLRE = ON, MCLR pin is Master Clear function
 21627                           ;	Power-up Timer Enable bit
 21628                           ;	PWRTE = OFF, PWRT disabled
 21629                           ;	Low-Power BOR enable bit
 21630                           ;	LPBOREN = OFF, ULPBOR disabled
 21631                           ;	Brown-out reset enable bits
 21632                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 21633                           ;	Brown-out Reset Voltage Selection
 21634                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 21635                           ;	Zero-cross detect disable
 21636                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 21637                           ;	Peripheral Pin Select one-way control
 21638                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 21639                           ;	Stack Overflow/Underflow Reset Enable bit
 21640                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 21641  8008                     	org	32776
 21642  8008  3FFF               	dw	16383
 21643                           
 21644                           ;Config register CONFIG3 @ 0x8009
 21645                           ;	WDT Period Select bits
 21646                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 21647                           ;	WDT operating mode
 21648                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 21649                           ;	WDT Window Select bits
 21650                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 21651                           ;	WDT input clock selector
 21652                           ;	WDTCCS = SC, Software Control
 21653  8009                     	org	32777
 21654  8009  3F9F               	dw	16287
 21655                           
 21656                           ;Config register CONFIG4 @ 0x800A
 21657                           ;	Boot Block Size Selection bits
 21658                           ;	BBSIZE = BB512, 512 words boot block size
 21659                           ;	Boot Block Enable bit
 21660                           ;	BBEN = OFF, Boot Block disabled
 21661                           ;	SAF Enable bit
 21662                           ;	SAFEN = OFF, SAF disabled
 21663                           ;	Application Block Write Protection bit
 21664                           ;	WRTAPP = OFF, Application Block not write protected
 21665                           ;	Boot Block Write Protection bit
 21666                           ;	WRTB = OFF, Boot Block not write protected
 21667                           ;	Configuration Register Write Protection bit
 21668                           ;	WRTC = OFF, Configuration Register not write protected
 21669                           ;	Storage Area Flash Write Protection bit
 21670                           ;	WRTSAF = OFF, SAF not write protected
 21671                           ;	Low Voltage Programming Enable bit
 21672                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 21673  800A                     	org	32778
 21674  800A  3FFF               	dw	16383
 21675                           
 21676                           ;Config register CONFIG5 @ 0x800B
 21677                           ;	UserNVM Program memory code protection bit
 21678                           ;	CP = OFF, UserNVM code protection disabled
 21679  800B                     	org	32779
 21680  800B  3FFF               	dw	16383

Data Sizes:
    Strings     559
    Constant    256
    Data        9
    BSS         148
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            4      0       4
    BANK0            80      5      80
    BANK1            80      0      75
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    SYSTICK_Handler$2453	volatile PTR FTN()void  size(2) Largest target is 1
		 -> Summer(), 

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 

    i2c2_tr_queue.pTrFlag	PTR enum E8045 size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 

    i2c2_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK0[5]), I2C2_MasterWrite@trBlock(BANK0[5]), 

    SYSTICK_Handler$2446	volatile PTR FTN()void  size(2) Largest target is 1
		 -> Summer(), 

    s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2059_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_19(CODE[47]), STR_18(CODE[47]), STR_17(CODE[49]), STR_16(CODE[24]), 
		 -> STR_15(CODE[47]), STR_14(CODE[47]), STR_13(CODE[47]), STR_12(CODE[47]), 
		 -> STR_11(CODE[47]), STR_10(CODE[37]), STR_9(CODE[18]), STR_8(CODE[17]), 
		 -> STR_7(CODE[38]), STR_6(CODE[7]), STR_5(CODE[50]), STR_4(CODE[15]), 
		 -> STR_3(CODE[46]), STR_2(CODE[31]), STR_1(CODE[39]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_19(CODE[47]), STR_18(CODE[47]), STR_17(CODE[49]), STR_16(CODE[24]), 
		 -> STR_15(CODE[47]), STR_14(CODE[47]), STR_13(CODE[47]), STR_12(CODE[47]), 
		 -> STR_11(CODE[47]), STR_10(CODE[37]), STR_9(CODE[18]), STR_8(CODE[17]), 
		 -> STR_7(CODE[38]), STR_6(CODE[7]), STR_5(CODE[50]), STR_4(CODE[15]), 
		 -> STR_3(CODE[46]), STR_2(CODE[31]), STR_1(CODE[39]), 

    cfmt	PTR unsigned char  size(2) Largest target is 50
		 -> STR_19(CODE[47]), STR_18(CODE[47]), STR_17(CODE[49]), STR_16(CODE[24]), 
		 -> STR_15(CODE[47]), STR_14(CODE[47]), STR_13(CODE[47]), STR_12(CODE[47]), 
		 -> STR_11(CODE[47]), STR_10(CODE[37]), STR_9(CODE[18]), STR_8(CODE[17]), 
		 -> STR_7(CODE[38]), STR_6(CODE[7]), STR_5(CODE[50]), STR_4(CODE[15]), 
		 -> STR_3(CODE[46]), STR_2(CODE[31]), STR_1(CODE[39]), 

    fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_19(CODE[47]), STR_18(CODE[47]), STR_17(CODE[49]), STR_16(CODE[24]), 
		 -> STR_15(CODE[47]), STR_14(CODE[47]), STR_13(CODE[47]), STR_12(CODE[47]), 
		 -> STR_11(CODE[47]), STR_10(CODE[37]), STR_9(CODE[18]), STR_8(CODE[17]), 
		 -> STR_7(CODE[38]), STR_6(CODE[7]), STR_5(CODE[50]), STR_4(CODE[15]), 
		 -> STR_3(CODE[46]), STR_2(CODE[31]), STR_1(CODE[39]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    p_Function	PTR FTN()void  size(2) Largest target is 1
		 -> Summer(), 

    S1706$p_callbackFunction	PTR FTN()void  size(2) Largest target is 1
		 -> Summer(), 

    softTimer.p_callbackFunction	PTR FTN()void  size(2) Largest target is 1
		 -> Summer(), 

    p_statePointer	PTR unsigned char  size(2) Largest target is 1
		 -> myState(STACK[1]), 

    p_state	PTR unsigned char  size(2) Largest target is 1
		 -> myState(STACK[1]), NULL(NULL[0]), 

    InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SYSTICK_Handler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SYSTICK_Handler(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    pdata	PTR unsigned char  size(2) Largest target is 2
		 -> data(STACK[1]), data(STACK[2]), data(STACK[2]), data(STACK[2]), 
		 -> data(STACK[1]), data(STACK[2]), data(STACK[1]), data(STACK[2]), 
		 -> data(STACK[1]), data(STACK[2]), 

    ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 

    ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterWrite@trBlock(BANK0[5]), 

    pdata	PTR unsigned char  size(2) Largest target is 2
		 -> data(STACK[1]), data(STACK[2]), data(STACK[1]), data(STACK[1]), 
		 -> data(STACK[1]), 

    ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 

    ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK0[5]), 

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 

    i2c2_object.pTrTail.pTrFlag	PTR enum E8045 size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK0[5]), I2C2_MasterWrite@trBlock(BANK0[5]), 

    ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK0[5]), I2C2_MasterWrite@trBlock(BANK0[5]), 

    pflag	PTR enum E8045 size(2) Largest target is 1
		 -> i2cWflag(STACK[1]), i2cWflag(STACK[1]), i2cWflag(STACK[1]), i2cWflag(STACK[1]), 
		 -> i2cWflag(STACK[1]), i2cWflag(STACK[1]), i2cWflag(STACK[1]), i2cWflag(STACK[1]), 
		 -> i2cWflag(STACK[1]), i2cWflag(STACK[1]), 

    pflag	PTR enum E8045 size(2) Largest target is 1
		 -> i2cWflag(STACK[1]), i2cWflag(STACK[1]), i2cWflag(STACK[1]), i2cWflag(STACK[1]), 
		 -> i2cWflag(STACK[1]), 

    pdata	PTR unsigned char  size(2) Largest target is 2
		 -> data(STACK[1]), data(STACK[2]), data(STACK[1]), data(STACK[1]), 
		 -> data(STACK[1]), 

    F8156.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 

    pflag	PTR enum E8045 size(2) Largest target is 1
		 -> i2cWflag(STACK[1]), i2cWflag(STACK[1]), i2cWflag(STACK[1]), i2cWflag(STACK[1]), 
		 -> i2cWflag(STACK[1]), i2cWflag(STACK[1]), i2cWflag(STACK[1]), i2cWflag(STACK[1]), 
		 -> i2cWflag(STACK[1]), i2cWflag(STACK[1]), 

    pdata	PTR unsigned char  size(2) Largest target is 2
		 -> data(STACK[1]), data(STACK[2]), data(STACK[2]), data(STACK[2]), 
		 -> data(STACK[1]), data(STACK[2]), data(STACK[1]), data(STACK[2]), 
		 -> data(STACK[1]), data(STACK[2]), 

    F8150.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> NULL(NULL[0]), 

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 

    p_i2c2_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK0[5]), I2C2_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E8045 size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK0[5]), I2C2_MasterWrite@trBlock(BANK0[5]), 

    S742$pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 

    p_i2c2_current.pbuffer	PTR unsigned char  size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 

    S754$pTrFlag	PTR enum E8045 size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 

    p_i2c2_current.pTrFlag	PTR enum E8045 size(2) Largest target is 2
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[2]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 
		 -> data(STACK[1]), i2cWflag(STACK[1]), data(STACK[2]), i2cWflag(STACK[1]), 

    S754$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK0[5]), I2C2_MasterWrite@trBlock(BANK0[5]), 

    p_i2c2_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK0[5]), I2C2_MasterWrite@trBlock(BANK0[5]), 

    p_i2c2_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[4]), NULL(NULL[0]), 

    S765$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[4]), 

    i2c2_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[4]), 

    S765$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[4]), 

    i2c2_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK0[4]), 

    interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ReceiveHandler(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ReceiveHandler(), Absolute function(), EUSART1_Receive_ISR(), 

    interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   17213
                  _ADC_GetConversion
                     _BTN_GetPosEdge
      _EUSART1_SetRxInterruptHandler
                         _OLED_Clear
                      _OLED_CursorOn
                        _OLED_GotoXY
                     _OLED_SelectROM
                   _PBA_ConfigPrintf
                           _PBA_Init
                    _RTC_ConvertTemp
                       _RTC_GetHours
                     _RTC_GetMinutes
                     _RTC_GetSeconds
                        _RTC_GetTemp
                 _RTC_IsTempConvDone
                       _RTC_SetHours
                     _RTC_SetMinutes
                     _RTC_SetSeconds
                  _STATEMACHINE_Init
            _STATEMACHINE_StateEntry
             _STATEMACHINE_StateExit
                _STATEMACHINE_Update
          _SYSTICK_AddTimeoutHandler
                    _SYSTICK_Timeout
            _SYSTICK_TimerLoadAndRun
                  _SYSTICK_TimerStop
                            ___lwdiv
                            ___lwmod
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8    6201
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     3      4    6143
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    35      4    5994
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                27    19      8    3020
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     5      3    1903
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               2     2      0      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     4      1     832
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 6     5      1     938
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                3     0      3     735
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     575
                      _EUSART1_Write
                          _OLED_Putc
 ---------------------------------------------------------------------------------
 (15) _OLED_Putc                                           1     1      0     487
                         _OLED_Clear
                        _OLED_GotoXY
                  _SPI1_Exchange8bit
                               _Send
 ---------------------------------------------------------------------------------
 (16) _OLED_GotoXY                                         2     1      1     199
                  _SPI1_Exchange8bit
                               _Send
 ---------------------------------------------------------------------------------
 (16) _OLED_Clear                                          0     0      0     111
                  _SPI1_Exchange8bit
                               _Send
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Write                                       1     1      0      44
 ---------------------------------------------------------------------------------
 (4) _atoi                                                11     9      2     503
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4      92
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     105
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     105
 ---------------------------------------------------------------------------------
 (18) _SYSTICK_TimerLoadAndRun                             5     1      4     360
                  _SYSTICK_TimerLoad
                   _SYSTICK_TimerRun
 ---------------------------------------------------------------------------------
 (19) _SYSTICK_TimerRun                                    1     1      0     136
                             ___bmul
 ---------------------------------------------------------------------------------
 (19) _SYSTICK_TimerLoad                                   5     1      4     158
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _SYSTICK_Timeout                                      2     2      0     340
                  _SYSTICK_TimerStop
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _SYSTICK_TimerStop                                    1     1      0     136
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _SYSTICK_AddTimeoutHandler                            3     1      2     136
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _STATEMACHINE_Update                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _STATEMACHINE_StateExit                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _STATEMACHINE_StateEntry                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _STATEMACHINE_Init                                    2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _RTC_SetSeconds                                       4     4      0     780
                        _BinaryToBcd
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _RTC_SetMinutes                                       4     4      0     780
                        _BinaryToBcd
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _RTC_SetHours                                         4     4      0     804
                        _BinaryToBcd
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _BinaryToBcd                                          3     3      0     270
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     105
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     105
 ---------------------------------------------------------------------------------
 (1) _RTC_IsTempConvDone                                   3     3      0     950
                    _I2C2_MasterRead
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _RTC_GetTemp                                          2     2      0     949
                    _I2C2_MasterRead
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _RTC_GetSeconds                                       2     2      0    1131
                        _BcdToBinary
                    _I2C2_MasterRead
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _RTC_GetMinutes                                       2     2      0    1131
                        _BcdToBinary
                    _I2C2_MasterRead
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _RTC_GetHours                                         2     2      0    1131
                        _BcdToBinary
                    _I2C2_MasterRead
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterRead                                      7     0      7     396
            _I2C2_MasterReadTRBBuild
               _I2C2_MasterTRBInsert
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterReadTRBBuild                              6     1      5     154
 ---------------------------------------------------------------------------------
 (2) _BcdToBinary                                          3     3      0     182
                             ___bmul
 ---------------------------------------------------------------------------------
 (17) ___bmul                                              3     2      1      92
 ---------------------------------------------------------------------------------
 (1) _RTC_ConvertTemp                                      3     3      0     463
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _PBA_Init                                             0     0      0     728
                          _OLED_Init
                           _RTC_Init
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     132
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0      22
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2      22
 ---------------------------------------------------------------------------------
 (3) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Initialize                                   0     0      0     110
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetTxInterruptHandler                        2     0      2      22
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetRxInterruptHandler                        2     0      2      22
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetOverrunErrorHandler                       2     0      2      22
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetFramingErrorHandler                       2     0      2      22
 ---------------------------------------------------------------------------------
 (4) _EUSART1_SetErrorHandler                              2     0      2      22
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTC_Init                                             3     3      0     463
                   _I2C2_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C2_MasterWrite                                     7     0      7     374
               _I2C2_MasterTRBInsert
           _I2C2_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterWriteTRBBuild                             6     1      5     132
 ---------------------------------------------------------------------------------
 (3) _I2C2_MasterTRBInsert                                 4     1      3     132
   _I2C2_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (4) _I2C2_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OLED_Init                                            0     0      0     111
                  _SPI1_Exchange8bit
                               _Send
 ---------------------------------------------------------------------------------
 (1) _PBA_ConfigPrintf                                     2     1      1      44
 ---------------------------------------------------------------------------------
 (1) _OLED_SelectROM                                       5     5      0     203
                  _SPI1_Exchange8bit
                               _Send
 ---------------------------------------------------------------------------------
 (1) _OLED_CursorOn                                        3     3      0     157
                  _SPI1_Exchange8bit
                               _Send
 ---------------------------------------------------------------------------------
 (16) _Send                                                1     1      0      89
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (17) _SPI1_Exchange8bit                                   1     1      0      22
 ---------------------------------------------------------------------------------
 (1) _BTN_GetPosEdge                                       2     2      0     156
                            _BitTest
 ---------------------------------------------------------------------------------
 (2) _BitTest                                              2     1      1      44
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    1     1      0      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          5     5      0    1251
                                              0 BANK0      5     5      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C2_BusCollisionISR
                           _I2C2_ISR
                     _ReceiveHandler *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            0     0      0     653
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR0_CallBack                                       0     0      0     653
                   Absolute function *
                    _SYSTICK_Handler *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _SYSTICK_Handler                                     3     3      0     653
                             _Summer *
                             ___bmul
 ---------------------------------------------------------------------------------
 (17) _Summer                                              0     0      0     360
            _SYSTICK_TimerLoadAndRun
 ---------------------------------------------------------------------------------
 (18) _SYSTICK_TimerLoadAndRun                             5     1      4     360
                  _SYSTICK_TimerLoad
                   _SYSTICK_TimerRun
 ---------------------------------------------------------------------------------
 (19) _SYSTICK_TimerRun                                    1     1      0     136
                             ___bmul
 ---------------------------------------------------------------------------------
 (19) _SYSTICK_TimerLoad                                   5     1      4     158
                             ___bmul
 ---------------------------------------------------------------------------------
 (17) ___bmul                                              3     2      1      92
 ---------------------------------------------------------------------------------
 (14) _ReceiveHandler                                      1     1      0     576
                      _EUSART1_Write
                          _OLED_Putc
 ---------------------------------------------------------------------------------
 (15) _OLED_Putc                                           1     1      0     487
                         _OLED_Clear
                        _OLED_GotoXY
                  _SPI1_Exchange8bit
                               _Send
 ---------------------------------------------------------------------------------
 (16) _OLED_GotoXY                                         2     1      1     199
                  _SPI1_Exchange8bit
                               _Send
 ---------------------------------------------------------------------------------
 (16) _OLED_Clear                                          0     0      0     111
                  _SPI1_Exchange8bit
                               _Send
 ---------------------------------------------------------------------------------
 (16) _Send                                                1     1      0      89
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (17) _SPI1_Exchange8bit                                   1     1      0      22
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Write                                       1     1      0      44
 ---------------------------------------------------------------------------------
 (14) _I2C2_ISR                                            0     0      0      22
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (15) _I2C2_Stop                                           1     1      0      22
 ---------------------------------------------------------------------------------
 (15) _I2C2_FunctionComplete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C2_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _BTN_GetPosEdge
     _BitTest
   _EUSART1_SetRxInterruptHandler
   _OLED_Clear
     _SPI1_Exchange8bit
     _Send
       _SPI1_Exchange8bit
   _OLED_CursorOn
     _SPI1_Exchange8bit
     _Send
       _SPI1_Exchange8bit
   _OLED_GotoXY
     _SPI1_Exchange8bit
     _Send
       _SPI1_Exchange8bit
   _OLED_SelectROM
     _SPI1_Exchange8bit
     _Send
       _SPI1_Exchange8bit
   _PBA_ConfigPrintf
   _PBA_Init
     _OLED_Init
       _SPI1_Exchange8bit
       _Send
         _SPI1_Exchange8bit
     _RTC_Init
       _I2C2_MasterWrite
         _I2C2_MasterTRBInsert
           _I2C2_WaitForLastPacketToComplete
         _I2C2_MasterWriteTRBBuild
     _SYSTEM_Initialize
       _ADC_Initialize
       _EUSART1_Initialize
         _EUSART1_SetErrorHandler
         _EUSART1_SetFramingErrorHandler
         _EUSART1_SetOverrunErrorHandler
         _EUSART1_SetRxInterruptHandler
         _EUSART1_SetTxInterruptHandler
       _I2C2_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _SPI1_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
     _TMR0_SetInterruptHandler
   _RTC_ConvertTemp
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
   _RTC_GetHours
     _BcdToBinary
       ___bmul
     _I2C2_MasterRead
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
   _RTC_GetMinutes
     _BcdToBinary
       ___bmul
     _I2C2_MasterRead
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
   _RTC_GetSeconds
     _BcdToBinary
       ___bmul
     _I2C2_MasterRead
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
   _RTC_GetTemp
     _I2C2_MasterRead
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
   _RTC_IsTempConvDone
     _I2C2_MasterRead
       _I2C2_MasterReadTRBBuild
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
   _RTC_SetHours
     _BinaryToBcd
       ___lbdiv
       ___lbmod
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
   _RTC_SetMinutes
     _BinaryToBcd
       ___lbdiv
       ___lbmod
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
   _RTC_SetSeconds
     _BinaryToBcd
       ___lbdiv
       ___lbmod
     _I2C2_MasterWrite
       _I2C2_MasterTRBInsert
         _I2C2_WaitForLastPacketToComplete
       _I2C2_MasterWriteTRBBuild
   _STATEMACHINE_Init
   _STATEMACHINE_StateEntry
   _STATEMACHINE_StateExit
   _STATEMACHINE_Update
   _SYSTICK_AddTimeoutHandler
     ___bmul
   _SYSTICK_Timeout
     _SYSTICK_TimerStop
       ___bmul
     ___bmul
   _SYSTICK_TimerLoadAndRun
     _SYSTICK_TimerLoad
       ___bmul
     _SYSTICK_TimerRun
       ___bmul
   _SYSTICK_TimerStop
     ___bmul
   ___lwdiv
   ___lwmod
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
               _OLED_Putc
                 _OLED_Clear
                   _SPI1_Exchange8bit
                   _Send
                     _SPI1_Exchange8bit
                 _OLED_GotoXY
                   _SPI1_Exchange8bit
                   _Send
                     _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
                 _Send
                   _SPI1_Exchange8bit
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _EUSART1_Write
                 _OLED_Putc
                   _OLED_Clear
                     _SPI1_Exchange8bit
                     _Send
                       _SPI1_Exchange8bit
                   _OLED_GotoXY
                     _SPI1_Exchange8bit
                     _Send
                       _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                   _Send
                     _SPI1_Exchange8bit
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
                   _OLED_Putc
                     _OLED_Clear
                       _SPI1_Exchange8bit
                       _Send
                         _SPI1_Exchange8bit
                     _OLED_GotoXY
                       _SPI1_Exchange8bit
                       _Send
                         _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                     _Send
                       _SPI1_Exchange8bit
             _strlen
         _fputc
           _putch
             _EUSART1_Write
             _OLED_Putc
               _OLED_Clear
                 _SPI1_Exchange8bit
                 _Send
                   _SPI1_Exchange8bit
               _OLED_GotoXY
                 _SPI1_Exchange8bit
                 _Send
                   _SPI1_Exchange8bit
               _SPI1_Exchange8bit
               _Send
                 _SPI1_Exchange8bit
         _isdigit

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C2_BusCollisionISR *
   _I2C2_ISR *
     _I2C2_FunctionComplete
     _I2C2_Stop
   _ReceiveHandler *
     _EUSART1_Write
     _OLED_Putc
       _OLED_Clear
         _SPI1_Exchange8bit
         _Send
           _SPI1_Exchange8bit
       _OLED_GotoXY
         _SPI1_Exchange8bit
         _Send
           _SPI1_Exchange8bit
       _SPI1_Exchange8bit
       _Send
         _SPI1_Exchange8bit
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _SYSTICK_Handler *
         _Summer *
           _SYSTICK_TimerLoadAndRun
             _SYSTICK_TimerLoad
               ___bmul
             _SYSTICK_TimerRun
               ___bmul
         ___bmul *
       _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            4      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               4      0       4       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      BF       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      5      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4B       8       93.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      BF      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Mar 19 10:59:09 2021

                          _SPI1_Exchange8bit 1C28                   __size_of_STATEMACHINE_Init 000D  
                   _eusart1TxBufferRemaining 006F                          __end_of_BinaryToBcd 1D8C  
                                         l21 1C33                                           l15 07FF  
                                         l18 1C2E                                           l60 1BE1  
                                         l75 1E3F                                           l78 1E47  
                        BTN_GetPosEdge@flags 0066                                          l201 1CB1  
                                        l210 1B92                                          l204 0002  
                                        l213 1BBC                                          l222 1BD1  
                                        l207 1B96                                          l311 1BE9  
                                        l400 078A                                          l216 1BC3  
                                        l401 0798                                          l225 1BCA  
                                        l305 1DBC                                          l219 1BB5  
                                        l412 1C25                                          l156 13CE  
                                        l308 1C05                                          l180 1109  
                                        l405 07B8                                          l181 1112  
                                        l190 1DF3                                          l414 1C27  
                                        l432 1F7C                                          l184 1125  
                                        l425 1F56                                          l418 1E84  
                                        l354 1CEE                                          l187 1DF1  
                                        l371 06D1                                          l452 1EEA  
                                        l461 0802                                          l197 1453  
                                        l621 1BD8                                          l382 071D  
                                        l374 06F3                                          l614 1B9C  
                                        l438 1BAF                                          l446 1529  
                                        l383 0729                                          l376 06F9  
                                        l624 0003                                          l393 075B  
                                        l377 06FC                                          l369 07F7  
                                        l449 1FA7                                          l618 1C8E  
                                        l803 1D19                                          l397 077B  
                                        l750 1C4E                                          l814 1DA2  
                                        l903 1C6D                                          l760 1319  
                                        l568 1783                                          l745 1C6E  
                                        l921 1EA9                                          l809 1BF1  
                                        l841 12E1                                          l906 13D1  
                                        l747 1C7D                                          l915 13F7  
                                        l835 12AB                                          l596 1CC5  
                                        l860 09EA                                          l934 1E0E  
                                        l918 140D                                          l950 11B0  
                                        l775 1D5B                                          l863 09ED  
                                        l929 1EC7                                          l882 0A5D  
                                        l876 0A32                                          l959 1613  
                                        l967 1274                                          l976 15C4  
                                        l984 1242                                          l896 1152  
                                        l888 0A98                                          l993 1663  
                                        l899 1C5F                                          u900 133D  
                                        u901 133C                                          u910 1353  
                                        u911 1352                                          u930 116F  
                                        u931 116E                                          u940 117F  
                                        u941 117E                                          u925 115D  
                                        u880 1324                                          u881 1323  
                                        u890 1332                                          u891 1331  
                                        _abs 1E86                 __size_of_STATEMACHINE_Update 000A  
                                        _pad 1665                      __size_of_PMD_Initialize 0008  
                     __end_of_RTC_SetMinutes 1244                       __end_of_RTC_SetSeconds 1276  
                                        wreg 0009                             __end_of_I2C2_ISR 07F8  
                                       l1001 12A9                                         l1021 1721  
                                       l1031 1575                                         l1009 11E0  
                                       l1034 1D02                                         l1037 1D8A  
                                       l1053 1C1A                                         l1046 1C40  
                                       l1070 1CD8                                         l1160 1FD8  
                                       l1049 1C0F                                         l1058 1C5E  
                                       l1074 1E64                                         l1083 1390  
                                       l1067 1D72                                         l1163 1FFE  
                                       l1093 08DF                                         l2301 173B  
                                       l1086 1C9E                                         l1078 1D2E  
                                       l1262 0FFE                                         l2231 1BDA  
                                       l2311 1746                                         l2303 173E  
                                       l1184 1E14                                         l2233 1BDF  
                                       l2401 1CEC                                         l2321 174C  
                                       l2313 1747                                         l2305 1741  
                                       l1441 0855                                         l4001 166C  
                                       l2235 1BE0                                         l2403 1CED  
                                       l2331 1753                                         l2323 174E  
                                       l2315 1748                                         l2307 1742  
                                       l1187 1E2A                                         l1451 1498  
                                       l1275 0C4B                                         l4011 168F  
                                       l4003 1672                                         l2341 175E  
                                       l2333 1755                                         l2325 174F  
                                       l2317 1749                                         l2309 1744  
                                       l2229 07F8                                         l2501 134A  
                                       l1381 1180                                         l4101 17A0  
                                       l4021 1E86                                         l4013 1696  
                                       l4005 167A                                         l1702 0E0F  
                                       l2351 1769                                         l2343 1761  
                                       l2335 1757                                         l2327 1750  
                                       l2319 174A                                         l1375 1354  
                                       l2503 1353                                         l2511 115A  
                                       l4111 17C0                                         l4103 17A4  
                                       l4023 1E97                                         l4015 16B1  
                                       l4007 167F                                         l1711 04E7  
                                       l1712 04EA                                         l1624 1F2C  
                                       l2361 1776                                         l2353 176C  
                                       l2345 1763                                         l2337 1759  
                                       l2329 1751                                         l2281 1723  
                                       l5001 161A                                         l2521 117F  
                                       l2513 1164                                         l4041 1F0A  
                                       l4033 1EED                                         l4201 0912  
                                       l4113 17C9                                         l4105 17B0  
                                       l4025 1EA1                                         l4017 16B7  
                                       l4009 1686                                         l1713 04ED  
                                       l1714 04F0                                         l4051 1BBE  
                                       l2371 1781                                         l2363 1778  
                                       l2355 176E                                         l2347 1765  
                                       l2339 175B                                         l2291 1732  
                                       l2283 172A                                         l5003 1637  
                                       l2515 1167                                         l2507 1156  
                                       l3331 080E                                         l4035 1EEF  
                                       l4211 092D                                         l1803 14E0  
                                       l4115 17D0                                         l1811 1FD2  
                                       l4131 0CB7                                         l4123 0C4F  
                                       l1660 16C1                                         l1716 0524  
                                       l4061 14E4                                         l4053 1BB0  
                                       l4045 1BC5                                         l2381 1C04  
                                       l2373 1BFC                                         l2365 177A  
                                       l2357 1771                                         l2349 1767  
                                       l2293 1734                                         l2285 172C  
                                       l4301 1F95                                         l5005 163C  
                                       l5021 15BB                                         l5013 1578  
                                       l5101 1530                                         l2517 116F  
                                       l2509 1158                                         l3341 0833  
                                       l3333 0811                                         l4029 1D30  
                                       l4037 1EF8                                         l4221 0980  
                                       l4213 0941                                         l4205 0919  
                                       l4117 17EB                                         l4109 17B9  
                                       l4141 0CE1                                         l4133 0CBC  
                                       l4125 0C5F                                         l1709 04DB  
                                       l4071 150B                                         l4063 14E9  
                                       l4055 1ECB                                         l4047 1BCC  
                                       l2391 1CE2                                         l2383 1CDA  
                                       l2375 1BFF                                         l2367 177C  
                                       l2359 1773                                         l2295 1735  
                                       l2287 172E                                         l2279 1BE2  
                                       l4303 1F9D                                         l5007 1659  
                                       l5023 15C0                                         l5015 157C  
                                       l5031 15CB                                         l5103 154D  
                                       l2519 1176                                         l3343 083D  
                                       l3335 081A                                         l4039 1F08  
                                       l4223 0987                                         l4207 0921  
                                       l4311 1C6B                                         l4119 17F7  
                                       l1671 17BC                                         l1655 1682  
                                       l4151 0CFD                                         l4143 0CE8  
                                       l4135 0CBD                                         l4127 0C6D  
                                       l5121 1EBD                                         l5113 1EAB  
                                       l4081 1527                                         l4073 1512  
                                       l4065 14F9                                         l4057 1ED8  
                                       l4049 1BB7                                         l4241 13A4  
                                       l2393 1CE6                                         l2385 1CDF  
                                       l2377 1C00                                         l2369 177F  
                                       l2297 1737                                         l2289 1730  
                                       l5009 165E                                         l5017 1599  
                                       l5033 15E8                                         l5105 1552  
                                       l2481 131F                                         l3345 0842  
                                       l3337 081F                                         l3329 0804  
                                       l3361 146D                                         l3353 1455  
                                       l4225 098E                                         l4217 0964  
                                       l4209 0925                                         l4305 1C61  
                                       l4321 113F                                         l4313 1129  
                                       l1817 1DD6                                         l4153 0D07  
                                       l4161 0D88                                         l4145 0CEC  
                                       l4137 0CCA                                         l4129 0C74  
                                       l1729 06B5                                         l4401 05A8  
                                       l5201 012F                                         l1674 17E6  
                                       l1746 1EA5                                         l1658 16AC  
                                       l4091 1DFF                                         l5123 1EC1  
                                       l5115 1EAF                                         l5051 13E8  
                                       l5043 13D3                                         l4067 1501  
                                       l4075 1514                                         l4059 1EE0  
                                       l4251 13AE                                         l4243 13A7  
                                       l4235 1392                                         l2395 1CE7  
                                       l2387 1CE0                                         l2379 1C03  
                                       l2299 173A                                         l4083 1BD3  
                                       l5019 159E                                         l5035 15ED  
                                       l5027 15C7                                         l5107 156F  
                                       l2491 1332                                         l2483 1324  
                                       l5131 1C06                                         l3347 0848  
                                       l3339 0825                                         l3363 147B  
                                       l3355 145C                                         l4227 0998  
                                       l4307 1C65                                         l4323 1143  
                                       l4315 1131                                         l4163 0D99  
                                       l4171 0DD4                                         l4155 0D46  
                                       l4147 0CF6                                         l4139 0CCF  
                                       l4403 05AF                                         l1739 1210  
                                       l5211 0143                                         l5203 0137  
                                       l1780 1D44                                         l1676 17FE  
                                       l1684 0CD8                                         l4501 1C1B  
                                       l4085 1C6E                                         l4341 08AF  
                                       l4333 085A                                         l4093 1E04  
                                       l5125 1EC5                                         l5117 1EB3  
                                       l5061 1403                                         l5053 13EE  
                                       l5045 13D7                                         l4077 151A  
                                       l4069 1509                                         l4261 13CA  
                                       l4253 13B5                                         l4245 13A9  
                                       l4237 1394                                         l2397 1CE9  
                                       l2389 1CE1                                         l5037 160A  
                                       l5029 15C9                                         l5109 1574  
                                       l2493 1335                                         l2485 1327  
                                       l5133 1C09                                         l3349 0851  
                                       l3365 1485                                         l3357 145F  
                                       l4309 1C69                                         l4325 1150  
                                       l4317 1139                                         l4181 0DF6  
                                       l4173 0DDB                                         l4165 0DAD  
                                       l4157 0D50                                         l4149 0CFA  
                                       l4421 0649                                         l4405 05C1  
                                       l4413 05E5                                         l5301 029F  
                                       l5221 0174                                         l5213 014B  
                                       l5205 013A                                         l4271 1CA8  
                                       l4503 1C1E                                         l5135 1C43  
                                       l4087 1C71                                         l4343 08BE  
                                       l4335 0868                                         l4327 0858  
                                       l5119 1EB8                                         l5063 1407  
                                       l5055 13F3                                         l5047 13DB  
                                       l5127 1BEC                                         l4079 1524  
                                       l4263 13CB                                         l4255 13BC  
                                       l4247 13AB                                         l4239 139B  
                                       l2399 1CEB                                         l5071 11BE  
                                       l4511 1F6B                                         l5039 160F  
                                       l2495 133D                                         l2487 132A  
                                       l2479 131D                                         l3367 148B  
                                       l3359 1468                                         l4191 08E9  
                                       l4319 113D                                         l4095 1786  
                                       l4183 0DFA                                         l4175 0DE0  
                                       l4167 0DBE                                         l4159 0D5A  
                                       l4431 0682                                         l4415 05F7  
                                       l4407 05CA                                         l4351 04B3  
                                       l5311 02CE                                         l5303 02B7  
                                       l5231 01A0                                         l5215 0154  
                                       l5223 0176                                         l5207 013E  
                                       l4273 1CAE                                         l4505 1C22  
                                       l5137 1C46                                         l4345 08CB  
                                       l4337 0881                                         l4089 1DF6  
                                       l5065 140B                                         l5057 13FC  
                                       l5049 13E3                                         l5129 1BEF  
                                       l4265 13CC                                         l4257 13C7  
                                       l4249 13AD                                         l4281 1CB8  
                                       l5073 11DB                                         l4513 1F76  
                                       l5081 16EC                                         l2497 1344  
                                       l2489 132D                                         l4521 1D24  
                                       l3369 1494                                         l1777 099C  
                                       l4193 08F0                                         l4601 0A5E  
                                       l4097 178D                                         l4177 0DEA  
                                       l4185 0E02                                         l4169 0DCF  
                                       l4425 065E                                         l4417 0609  
                                       l4409 05DE                                         l4361 04DD  
                                       l4353 04C5                                         l4441 0693  
                                       l5401 0478                                         l5321 02E9  
                                       l5313 02D1                                         l5305 02C0  
                                       l5241 01B5                                         l5233 01A2  
                                       l5225 017F                                         l5217 0160  
                                       l5209 0140                                         l4275 1CAF  
                                       l4267 1CA0                                         l5139 1C4A  
                                       l4339 0896                                         l4347 08D4  
                                       l4515 1C7E                                         l5059 13FF  
                                       l4291 1F37                                         l4259 13C9  
                                       l4283 1CBA                                         l5067 11B3  
                                       l4507 1F58                                         l5083 16F1  
                                       l5075 16C4                                         l2499 1347  
                                       l4195 08F2                                         l4611 0A6F  
                                       l4603 0A62                                         l4531 09B4  
                                       l4523 09A0                                         l4099 1796  
                                       l4179 0DF1                                         l4443 06AB  
                                       l4427 0670                                         l4435 0687  
                                       l4419 0612                                         l4371 04F3  
                                       l4355 04CE                                         l5411 048B  
                                       l5403 047E                                         l5331 0318  
                                       l5323 02F5                                         l5315 02D5  
                                       l5307 02C2                                         l5251 01D6  
                                       l5243 01B8                                         l5235 01AA  
                                       l5227 018B                                         l5219 0168  
                                       l5171 00B3                                         l1788 1F0D  
                                       l4269 1CA7                                         l4701 1DE6  
                                       l4349 08D7                                         l4517 1C85  
                                       l4293 1F45                                         l4285 1CBB  
                                       l4277 1CB2                                         l5069 11B5  
                                       l4509 1F5D                                         l5085 1714  
                                       l5077 16C6                                         l2853 1D76  
                                       l3901 1FD5                                         l4197 08FC  
                                       l4189 08E2                                         l4461 1113  
                                       l4613 0A70                                         l4605 0A66  
                                       l4541 09C6                                         l4533 09B6  
                                       l4525 09A6                                         l4437 0690  
                                       l4429 0679                                         l4381 052A  
                                       l4357 04D3                                         l5405 0481  
                                       l5341 039D                                         l5333 031E  
                                       l5325 02F7                                         l5317 02D8  
                                       l5309 02CA                                         l5261 020C  
                                       l5253 01DA                                         l5245 01C0  
                                       l5237 01AD                                         l5229 0197  
                                       l5181 00E6                                         l5173 00BF  
                                       l5165 00A1                                         l4703 1DE8  
                                       l4711 1414                                         l2871 1E2E  
                                       l4295 1F50                                         l4287 1CC2  
                                       l4279 1CB7                                         l5095 1720  
                                       l5087 1719                                         l5079 16CF  
                                       l2855 1D84                                         l4519 1D1C  
                                       l3911 1FFA                                         l3903 1FDD  
                                       l4199 0910                                         l4463 1119  
                                       l4471 1123                                         l4455 1103  
                                       l4615 0A71                                         l4607 0A68  
                                       l4551 09EE                                         l4543 09CB  
                                       l4535 09BC                                         l4527 09AD  
                                       l3831 1D9E                                         l4391 0560  
                                       l4383 053C                                         l4375 04F8  
                                       l4359 04D7                                         l5407 0485  
                                       l5351 03B7                                         l5343 03A5  
                                       l5335 0358                                         l5327 0300  
                                       l5319 02E0                                         l5271 0238  
                                       l5263 0215                                         l5255 01DE  
                                       l5247 01C1                                         l5239 01B1  
                                       l5191 0103                                         l5183 00E7  
                                       l5415 048E                                         l5175 00C8  
                                       l5167 00A4                                         l4473 1B93  
                                       l4705 1DEE                                         l4721 1432  
                                       l4713 1419                                         l2873 1E38  
                                       l4641 1D5A                                         l4633 1D48  
                                       l4289 1F32                                         l4481 1DAA  
                                       l3841 1E24                                         l3833 1E12  
                                       l4297 1F80                                         l5089 171E  
                                       l3905 1FE7                                         l4465 111A  
                                       l4457 1103                                         l4617 0A77  
                                       l4609 0A69                                         l4561 0A06  
                                       l4553 09F2                                         l4537 09BE  
                                       l4529 09AF                                         l3825 1D8E  
                                       l3921 0E5D                                         l4385 0545  
                                       l4393 0566                                         l4377 051D  
                                       l5409 0489                                         l5361 03D9  
                                       l5353 03C0                                         l5345 03A8  
                                       l5337 0392                                         l5329 030C  
                                       l5281 0252                                         l5273 0240  
                                       l5265 0221                                         l5249 01CD  
                                       l5257 01E2                                         l5417 04AA  
                                       l5193 010C                                         l5185 00F0  
                                       l5177 00D5                                         l5169 00A6  
                                       l4475 1B8F                                         l4707 1DEF  
                                       l4811 0750                                         l4723 143C  
                                       l4715 141E                                         l4731 1B99  
                                       l2875 1E39                                         l4635 1D58  
                                       l4651 12BB                                         l4491 1DB9  
                                       l4483 1DAD                                         l3843 1E29  
                                       l3835 1E19                                         l4299 1F8D  
                                       l5099 152C                                         l3907 1FED  
                                       l4467 1120                                         l4459 110E  
                                       l4571 0A19                                         l4563 0A08  
                                       l4555 09F6                                         l4539 09C4  
                                       l4547 09CD                                         l4619 0A79  
                                       l3827 1D94                                         l3851 14A4  
                                       l3931 0EB4                                         l3923 0E5F  
                                       l3915 0E12                                         l4395 057B  
                                       l4387 055B                                         l4379 0529  
                                       l5371 0406                                         l5363 03E2  
                                       l5355 03C6                                         l5347 03AC  
                                       l5339 039B                                         l5291 0276  
                                       l5283 025B                                         l5275 0243  
                                       l5267 022D                                         l5259 01E8  
                                       l5195 0118                                         l5179 00DD  
                                       l5187 00FC                                         l4733 0800  
                                       l4493 1E68                                         l4821 0762  
                                       l4813 0753                                         l4741 06C1  
                                       l4725 1445                                         l4717 1428  
                                       l4709 140F                                         l2877 1E3D  
                                       l4661 12CF                                         l4653 12BF  
                                       l4645 12AD                                         l4485 1DB0  
                                       l4477 1DA4                                         l3837 1E1E  
                                       l4901 1362                                         l3861 1D5F  
                                       l3909 1FF3                                         l4469 1121  
                                       l4581 0A31                                         l4573 0A1D  
                                       l4565 0A0F                                         l4557 09F8  
                                       l4549 09E3                                         l3829 1D98  
                                       l3853 14A9                                         l3941 0EFB  
                                       l3933 0EC8                                         l3925 0E65  
                                       l3917 0E14                                         l4397 0584  
                                       l4389 055F                                         l5373 040C  
                                       l5365 03EB                                         l5357 03CA  
                                       l5381 0423                                         l5349 03AF  
                                       l5293 0282                                         l5285 0267  
                                       l5277 0247                                         l5269 0236  
                                       l5197 0124                                         l5189 0100  
                                       l4495 1E6A                                         l4831 0776  
                                       l4823 0764                                         l4815 0758  
                                       l4751 06DC                                         l4743 06CF  
                                       l4735 06B7                                         l4727 1450  
                                       l4719 142D                                         l2879 1E43  
                                       l4663 12D3                                         l4655 12C3  
                                       l4647 12B5                                         l4671 1183  
                                       l4487 1DB3                                         l4479 1DA7  
                                       l3839 1E21                                         l4903 1370  
                                       l3863 1D67                                         l4591 0A4A  
                                       l4583 0A33                                         l4575 0A21  
                                       l4567 0A11                                         l4559 09FF  
                                       l3855 14B5                                         l3847 149A  
                                       l3951 0F9D                                         l3943 0F13  
                                       l3935 0ECB                                         l3927 0EA8  
                                       l3919 0E1A                                         l3871 1FAF  
                                       l5391 044F                                         l5383 042C  
                                       l5375 0413                                         l5367 03F4  
                                       l5359 03D0                                         l5295 0285  
                                       l5287 0269                                         l5279 024A  
                                       l5199 012D                                         l4497 1E75  
                                       l4841 0791                                         l4825 0769  
                                       l4761 06F2                                         l4753 06E1  
                                       l4737 06BE                                         l4729 1B97  
                                       l4665 12D7                                         l4657 12C7  
                                       l4649 12B7                                         l4673 1185  
                                       l4489 1DB6                                         l4681 1CF9  
                                       l4921 1C19                                         l4913 1C10  
                                       l4905 1389                                         l3865 1E4B  
                                       l4593 0A4B                                         l4585 0A3A  
                                       l4577 0A23                                         l4569 0A17  
                                       l3857 14D6                                         l3849 149F  
                                       l3945 0F45                                         l3937 0EE3  
                                       l3953 0FA6                                         l3929 0EAB  
                                       l3961 0A9B                                         l3873 1FBB  
                                       l3881 1DC5                                         l5393 0457  
                                       l5385 0438                                         l5377 0415  
                                       l5369 03FD                                         l5297 0291  
                                       l5289 026D                                         l4499 1E83  
                                       l4851 07A2                                         l4843 0795  
                                       l4827 0770                                         l4835 077E  
                                       l4819 0760                                         l4771 0708  
                                       l4763 06F5                                         l4755 06E3  
                                       l4747 06D5                                         l4739 06BF  
                                       l4931 12E4                                         l3891 1C32  
                                       l4667 12DB                                         l4659 12CB  
                                       l4675 118E                                         l4915 1C17  
                                       l4907 138D                                         l3867 1E53  
                                       l5651 0939                                         l4595 0A51  
                                       l4587 0A43                                         l4579 0A2A  
                                       l3955 0FAB                                         l3947 0F6D  
                                       l3939 0EE6                                         l3971 0AEE  
                                       l3963 0A9D                                         l3875 1FC2  
                                       l3883 1DCE                                         l4691 1203  
                                       l5643 0496                                         l5395 045D  
                                       l5387 0444                                         l5379 0421  
                                       l5299 0299                                         l5653 07D4  
                                       l4861 07BA                                         l4853 07A9  
                                       l4845 0799                                         l4837 0785  
                                       l4829 0772                                         l4781 0724  
                                       l4773 0712                                         l4757 06E9  
                                       l4749 06D7                                         l4941 130C  
                                       l4933 12E6                                         l4669 12DF  
                                       l4677 11AB                                         l4909 138F  
                                       l4589 0A49                                         l4597 0A52  
                                       l3957 0FEE                                         l3949 0F85  
                                       l3981 0B63                                         l3973 0B31  
                                       l3965 0AA3                                         l3869 1FAB  
                                       l3877 1DBF                                         l5645 050C  
                                       l4693 120C                                         l4685 11E4  
                                       l4925 1F10                                         l5397 0466  
                                       l5389 044D                                         l4863 07BD  
                                       l4855 07AD                                         l4847 079D  
                                       l4839 078F                                         l4791 0737  
                                       l4783 072A                                         l4775 0717  
                                       l4767 0701                                         l4759 06EB  
                                       l4943 1318                                         l4935 12F2  
                                       l3887 1C2A                                         l3895 1BA9  
                                       l4679 1CF1                                         l4599 0A59  
                                       l5647 09D5                                         l3983 0B78  
                                       l3975 0B45                                         l3991 0BF3  
                                       l3967 0AE6                                         l3879 1DC2  
                                       l4687 11E8                                         l4927 1F1A  
                                       l5399 046F                                         l4697 1DD8  
                                       l4865 07C0                                         l4857 07B2  
                                       l4849 079F                                         l4793 073C  
                                       l4785 0733                                         l4777 071A  
                                       l4769 0703                                         l4873 07CB  
                                       l4937 12FE                                         l3889 1C2C  
                                       l3897 1BA9                                         l4881 1D07  
                                       l4961 1278                                         l5649 0A81  
                                       l3993 0BF8                                         l3985 0BAA  
                                       l3977 0B48                                         l3969 0AE8  
                                       l4689 11EC                                         l4699 1DDF  
                                       l4867 07C5                                         l4859 07B4  
                                       l4795 0743                                         l4787 0734  
                                       l4779 0722                                         l4939 1300  
                                       l4891 1D12                                         l4883 1D08  
                                       l4971 1287                                         l4963 127A  
                                       l4955 1C5D                                         l4947 1C50  
                                       l3899 1CC8                                         l3995 0C3B  
                                       l3987 0BD2                                         l3979 0B60  
                                       l4869 07C6                                         l4797 074B  
                                       l4885 1D09                                         l4973 12A4  
                                       l4965 127D                                         l4981 121B  
                                       l4893 1C35                                         l4949 1C5B  
                                       l3989 0BEA                                         l4887 1D0C  
                                       l4879 1D04                                         l4967 127F  
                                       l4983 1220                                         l4975 1214  
                                       l4991 124B                                         l4895 1C3A  
                                       l4959 1C91                                         l3999 1667  
                                       l4889 1D0F                                         l4969 1284  
                                       l4985 123D                                         l4977 1216  
                                       l4993 124D                                         l4897 1358  
                                       l4979 1219                                         l4995 1252  
                                       l4987 1246                                         l4899 135A  
                                       l4997 126F                                         l4989 1248  
                                       l4999 1616                                         STR_1 194D  
                                       STR_2 19BF                                         STR_3 191F  
                                       STR_4 1A19                                         STR_5 1800  
                                       STR_6 1A28                                         STR_7 1974  
                                       STR_8 1A08                                         STR_9 19F6  
                                       u1320 1E43                                         u3000 0D99  
                                       u1321 1E42                                         u3001 0D98  
                                       u3010 0DAD                                         u3011 0DAC  
                                       u3100 0920                                         u3020 0DBE  
                                       u3101 091F                                         u3021 0DBD  
                                       u3005 0D95                                         _LATA 0018  
                                       u3110 0979                                         u3030 0DCF  
                                       _LATB 0019                                         u3111 0977  
                                       u3031 0DCE                                         _LATC 001A  
                                       u4000 13EE                                         u2400 1E19  
                                       u3120 097A                                         u3040 0DD4  
                                       _LATD 001B                                         u4001 13ED  
                                       u2401 1E18                                         u3041 0DD3  
                                       u3025 0DBA                                         _LATE 001C  
                                       u4010 11E0                                         u2410 1E29  
                                       u3130 0987                                         u3050 0DDB  
                                       _LATF 001D                                         u4011 11DF  
                                       u2411 1E28                                         u3131 0986  
                                       u3051 0DDA                                         u3035 0DCB  
                                       u2500 1C32                                         u4020 16F1  
                                       u3140 098E                                         u2420 149F  
                                       u3060 0DE0                                         u3300 05A1  
                                       u2501 1C31                                         u4021 16F0  
                                       u3141 098D                                         u2421 149E  
                                       u3061 0DDF                                         u3301 059F  
                                       u2510 1BAF                                         u4030 1719  
                                       u2430 14A4                                         u3070 0DF1  
                                       u3310 05A2                                         u2511 1BAE  
                                       u4031 1718                                         u2431 14A3  
                                       u3071 0DF0                                         u3160 1F37  
                                       u4040 171E                                         u1800 081F  
                                       u2520 1FDD                                         u3080 08FC  
                                       u2440 14B5                                         u2600 0F45  
                                       u3320 05AF                                         u4200 00DD  
                                       u3161 1F36                                         u4041 171D  
                                       u1801 081E                                         u2521 1FDC  
                                       u3081 08FB                                         u2441 14B4  
                                       u2601 0F44                                         u3321 05AE  
                                       u4201 00DC                                         u4050 1552  
                                       u1810 0833                                         u2530 1FFA  
                                       u3090 0910                                         u3170 1131  
                                       u2450 14D6                                         u2610 0FA6  
                                       u3330 05C1                                         u3250 04C5  
                                       u4210 00EE                                         u4051 1551  
                                       u1811 0832                                         u2531 1FF9  
                                       u3091 090F                                         u3171 1130  
                                       u2451 14D5                                         u2611 0FA5  
                                       u3331 05C0                                         u3251 04C4  
                                       u4211 00EB                                         u3420 1F5D  
                                       u4060 1574                                         u2460 1D67  
                                       u1820 0851                                         u3180 1139  
                                       u3500 09CB                                         u2380 1D94  
                                       u2620 0FAB                                         u2540 0E1A  
                                       u2700 0BAA                                         u3340 05F7  
                                       u3260 0524                                         u4300 0189  
                                       u3421 1F5C                                         u4061 1573  
                                       u2461 1D66                                         u1821 0850  
                                       u3181 1138                                         u3501 09CA  
                                       u2381 1D93                                         u2621 0FAA  
                                       u2605 0F41                                         u2541 0E19  
                                       u2701 0BA9                                         u3341 05F6  
                                       u3261 0523                                         u4301 0186  
                                       u4070 1EB8                                         u2470 1E53  
                                       u1830 145C                                         u3510 0A06  
                                       u2390 1D9E                                         u2710 0BF3  
                                       u3350 0609                                         u3270 0529  
                                       u4230 010C                                         u4071 1EB7  
                                       u2471 1E52                                         u1815 082F  
                                       u1831 145B                                         u3511 0A05  
                                       u2391 1D9D                                         u2455 14D2  
                                       u2711 0BF2                                         u3351 0608  
                                       u3271 0528                                         u4231 010B  
                                       u3600 11B0                                         u3440 1D24  
                                       u1840 146D                                         u2800 1D42  
                                       u3520 0A0F                                         u2560 0E65  
                                       u2720 0BF8                                         u2640 0AA3  
                                       u2480 1FD2                                         u3360 0670  
                                       u3280 053C                                         u4400 0252  
                                       u4320 01A0                                         u4240 0116  
                                       u4224 00F0                                         u3601 11AF  
                                       u3441 1D23                                         u1841 146C  
                                       u3521 0A0E                                         u2561 0E64  
                                       u2721 0BF7                                         u2705 0BA6  
                                       u2641 0AA2                                         u2481 1FD1  
                                       u3361 066F                                         u3281 053B  
                                       u4401 0251                                         u4321 019F  
                                       u4241 0113                                         u1850 147B  
                                       u2810 1EF8                                         u3370 1109  
                                       u3530 0A31                                         u3450 09A6  
                                       u2490 1DCE                                         u3290 055F  
                                       u3610 120C                                         u4410 0276  
                                       u4330 01AA                                         u4314 018B  
                                       u1851 147A                                         u2811 1EF7  
                                       u3371 1108                                         u3195 1146  
                                       u3531 0A30                                         u3451 09A5  
                                       u2491 1DCD                                         u3291 055E  
                                       u3611 120B                                         u4411 0275  
                                       u4331 01A9                                         u1860 1494  
                                       u2820 1F08                                         u3380 110E  
                                       u3540 0A49                                         u3460 09AD  
                                       u2900 17E6                                         u2580 0EC8  
                                       u2660 0AEE                                         u2740 166C  
                                       u4420 028F                                         u4340 01C0  
                                       u4260 012D                                         u1861 1493  
                                       u2821 1F07                                         u3381 110D  
                                       u3541 0A48                                         u3461 09AC  
                                       u2901 17E5                                         u2581 0EC7  
                                       u2661 0AED                                         u2741 166B  
                                       u4421 028C                                         u4341 01BF  
                                       u4261 012C                                         u2830 14E9  
                                       u1790 080E                                         u3390 1120  
                                       u3550 0A51                                         u3470 09B4  
                                       u2910 17EB                                         u2590 0EFB  
                                       u2750 167A                                         u4510 039B  
                                       u4350 0215                                         u4270 0137  
                                       u4254 0118                                         u4190 00C8  
                                       u2831 14E8                                         u1791 080D  
                                       u1855 1477                                         u3391 111F  
                                       u3551 0A50                                         u3471 09B3  
                                       u2911 17EA                                         u2591 0EFA  
                                       u2751 1679                                         u4511 039A  
                                       u4351 0214                                         u4271 0136  
                                       u4191 00C7                                         u2840 1509  
                                       u3560 0A6F                                         u3480 09BC  
                                       u2680 0B45                                         u2760 16AC  
                                       u2920 0C66                                         u4520 03A5  
                                       u4504 0318                                         u4440 0299  
                                       u4360 022B                                         u4280 014B  
                                       u2841 1508                                         u3561 0A6E  
                                       u3481 09BB                                         u2905 17E2  
                                       u2681 0B44                                         u2761 16AB  
                                       u2921 0C64                                         u4521 03A4  
                                       u4441 0298                                         u4361 0228  
                                       u4281 014A                                         u2850 1512  
                                       u3810 1362                                         u3570 0A77  
                                       u3490 09C4                                         u2690 0B78  
                                       u2770 16B1                                         u2930 0C67  
                                       u4530 03B7                                         u4450 02C0  
                                       u4434 0291                                         u4290 017F  
                                       u2851 1511                                         u3811 1361  
                                       u3571 0A76                                         u3491 09C3  
                                       u2691 0B77                                         u2771 16B0  
                                       u4531 03B6                                         u4451 02BF  
                                       u4291 017E                                         u2860 1524  
                                       u3900 12A9                                         u3820 1370  
                                       u2780 1E97                                         u2940 0C74  
                                       u4540 042C                                         u4460 02CA  
                                       u4380 0236                                         _PMD0 0796  
                                       u2861 1523                                         u3901 12A8  
                                       u3821 136F                                         u2781 1E96  
                                       u2765 16A8                                         u2941 0C73  
                                       u4541 042B                                         u4461 02C9  
                                       u4381 0235                                         _PMD1 0797  
                                       u3590 1D58                                         u3910 1242  
                                       u3830 1389                                         u2790 1D41  
                                       u2870 178D                                         u4550 0442  
                                       u4470 02E0                                         u4390 0240  
                                       u4374 022D                                         _PMD2 0798  
                                       u4607 1E3A                                         u3591 1D57  
                                       u3911 1241                                         u3831 1388  
                                       u2791 1D3F                                         u2871 178C  
                                       u4551 043F                                         u4471 02DF  
                                       u4391 023F                                         _PMD3 0799  
                                       u3584 1D50                                         u3920 1274  
                                       u3840 1C17                                         u2880 17A4  
                                       u2960 0CBC                                         u4480 0300  
                                       _PMD4 079A                                         u3585 1D4F  
                                       u3921 1273                                         u3841 1C16  
                                       u2881 17A3                                         u2785 1E93  
                                       u2961 0CBB                                         u4481 02FF  
                                       _PMD5 079B                                         u3850 12F2  
                                       u3930 163C                                         u2890 17B8  
                                       u2970 0CCA                                         u4570 044D  
                                       u4490 0316                                         u3851 12F1  
                                       u3931 163B                                         u2891 17B7  
                                       u2971 0CC9                                         u4571 044C  
                                       u4491 0313                                         u3860 12FE  
                                       u3940 165E                                         u2980 0CE8  
                                       u4580 0457                                         u4564 0444  
                                       u3861 12FD                                         u3941 165D  
                                       u2981 0CE7                                         u4581 0456  
                                       u3950 159E                                         u2990 0CEC  
                                       u3951 159D                                         u2991 0CEB  
                                       u2975 0CC6                                         u3960 15C0  
                                       u3961 15BF                                         u3874 1306  
                                       u3970 15ED                                         u3890 1C5B  
                                       u3875 1305                                         u3971 15EC  
                                       u3891 1C5A                                         u3884 1312  
                                       u3980 160F                                         u3885 1311  
                                       u4597 12B0                                         u3981 160E  
                                       u3990 13E8                                         u3991 13E7  
                                       _WPUA 1F39                                         _WPUB 1F44  
                                       _WPUC 1F4F                                         _WPUD 1F5A  
                                       _WPUE 1F65                                         _WPUF 1E51  
                              _EUSART1_Write 1101                                         _Send 1DF4  
                                       _addX 0071                                         _addY 0070  
                                       ___sp 20C0                                         _dbuf 0120  
                                       _atoi 08E1                                         _ctoa 1784  
                                       _main 00A0                                         _dtoa 0C4D  
                                       _prec 0039                                         _nout 0035  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       fsr1l 0006                                         btemp 0074  
                          OLED_Putc@arrowCnt 0042                                         start 006F  
                  __end_of_SPI1_Exchange8bit 1C35                              __end_of_BitTest 1D5D  
                             _BTN_GetPosEdge 12E2                           __size_of_OLED_Init 0037  
                     _STATEMACHINE_StateExit 1C50                   __end_of_RTC_IsTempConvDone 1723  
                         __size_of_OLED_Putc 00FC                      __end_of_SYSTICK_Handler 08E1  
                    __end_of_TMR0_Initialize 1CC6                                   _i2c2_state 0049  
             __size_of_OSCILLATOR_Initialize 000A                __end_of_OSCILLATOR_Initialize 1C06  
                    _I2C2_MasterReadTRBBuild 1F7E                             __end_of_PBA_Init 1D1A  
                      _eusart1RxStatusBuffer 0020                              __end_of___aodiv 1000  
                            __end_of___aomod 0C4D                              __end_of___lbdiv 1356  
                                      STR_10 199A                                        STR_11 1834  
                                      STR_12 1863                                        STR_13 18F0  
                                      STR_14 1892                                        STR_15 1834  
                                      STR_16 19DE                                        STR_17 1832  
                                      STR_18 18C1                                        STR_19 1834  
                            __end_of___lbmod 1182                            __end_of_I2C2_Stop 1E86  
                            __end_of___lwdiv 0857               __size_of_I2C2_FunctionComplete 000D  
                                      i1l250 0021                                        i1l253 0031  
                                      i1l262 0063                                        i1l255 003D  
                                      i1l256 0063                                        i1l257 0050  
                            __end_of___lwmod 149A                __end_of_I2C2_FunctionComplete 1C28  
                                      _OSCEN 0891                                        _TMR0H 059D  
                                      _TMR0L 059C                                        _PORTC 000E  
                                      _TRISA 0012                                        _TRISB 0013  
                                      _TRISC 0014                                        _TRISD 0015  
                                      _TRISE 0016                                        _TRISF 0017  
                    __end_of_SYSTICK_Timeout 1392            __size_of_TMR0_SetInterruptHandler 0007  
                       _EUSART1_Transmit_ISR 1DD8                   __size_of_SYSTICK_TimerLoad 001D  
                           __end_of_TMR0_ISR 1B9D                   __size_of_SYSTICK_TimerStop 0016  
                                      _flags 003B                                        _fputc 149A  
                                      _fputs 1FA9                    __size_of_PBA_ConfigPrintf 0009  
                            __end_of_isdigit 1D46                             __end_of_RTC_Init 11B2  
                                      _width 0037                                        _putch 1D8C  
                            __end_of_isspace 1F0F                                        pclath 000A  
                                      ltemp0 0074                                        ltemp1 0078  
                                      ltemp2 007C                                        ltemp3 0076  
                                      ttemp0 0074                                        ttemp1 0077  
                                      ttemp2 007A                                        ttemp3 007D  
                                      status 0003                                        wtemp0 0074  
                                      wtemp1 0076                                        wtemp2 0078  
                                      wtemp3 007A                                        wtemp4 007C  
                                      wtemp5 007E   __end_of_EUSART1_DefaultFramingErrorHandler 0003  
__size_of_EUSART1_DefaultFramingErrorHandler 0001           _EUSART1_DefaultFramingErrorHandler 0002  
                                _BinaryToBcd 1D74                     __size_of_SPI1_Initialize 0008  
                     __end_of_BTN_GetPosEdge 131B                              __initialization 0071  
                               __end_of_Send 1E10                                 __end_of_atoi 099E  
                               __end_of_ctoa 1800                   __end_of_EUSART1_Initialize 13CF  
                               __end_of_main 04B1                                 __end_of_dtoa 0E11  
                    _SYSTICK_TimerLoadAndRun 1CC6                  ?_INTERRUPT_InterruptManager 0000  
                        __size_of_OLED_Clear 000F             __end_of_I2C2_MasterWriteTRBBuild 1EEC  
                    _STATEMACHINE_StateEntry 1C10                                  _i2c2_object 0030  
                              RTC_Init@F8216 0062                                       _ADCON0 009D  
                                     _ADCON1 009E                                       _ADRESH 009C  
                                     _ADRESL 009B                                       _ANSELA 1F38  
                                     _ANSELB 1F43                                       _ANSELC 1F4E  
                                     _ANSELD 1F59                                       _ANSELE 1F64  
                                     _ANSELF 1E50                                       _T0CON0 059E  
                                     _T0CON1 059F                            __end_of_OLED_Init 12E2  
                                     _RC1REG 0119                                       _RB0PPS 1F18  
                                     _RB2PPS 1F1A                                       _RB3PPS 1F1B  
                                     _RC1STA 011D                                       _RB4PPS 1F1C  
                          __end_of_OLED_Putc 0A9A                 __end_of_I2C2_BusCollisionISR 0803  
                                     _ODCONA 1F3A                                       _ODCONB 1F45  
                                     _ODCONC 1F50                                       _ODCOND 1F5B  
                                     _ODCONE 1F66                                       _ODCONF 1E52  
   __end_of_I2C2_WaitForLastPacketToComplete 1BB0    __size_of_I2C2_WaitForLastPacketToComplete 0007  
           _I2C2_WaitForLastPacketToComplete 1BA9                                       i1l5141 0014  
                                     i1l5151 002D                                       i1l5143 0019  
                                     i1l5161 0054                                       i1l5153 0035  
                                     i1l5145 001D                                       i1l5163 0058  
                                     i1l5155 0039                                       i1l5147 0025  
                                     i1l5157 0041                                       i1l5149 0029  
                                     i1l5159 0045                                       _RF6PPS 1E3E  
                                     u320_20 0868                                       u320_21 0867  
                                     _INLVLA 1F3C                                       _INLVLB 1F47  
                                     _INLVLC 1F52                                       _INLVLD 1F5D  
                                     _INLVLE 1F68                                       _INLVLF 1E54  
                                     u321_20 0881                                       u321_21 0880  
                                     u322_20 08AF                                       u410_20 0025  
                                     u322_21 08AE                                       u410_21 0024  
                                     u315_20 1CAE                                       u323_20 08BE  
                                     u411_20 0029                                       u315_21 1CAD  
                                     u323_21 08BD                                       u411_21 0028  
                                     u340_20 1E75                                       u324_20 08DF  
                                     u412_20 002D                                       u340_21 1E74  
                                     u324_21 08DE                                       u412_21 002C  
                                     u341_20 1C22                                       u413_20 0035  
                                     u341_21 1C21                                       u413_21 0034  
                                     u414_20 0039                                       u414_21 0038  
                                     u343_20 1C85                                       u415_20 0041  
                                     u343_21 1C84                                       u415_21 0040  
                                     u416_20 0045                                       u408_20 0019  
                                     u416_21 0044                                       u408_21 0018  
                                     u417_20 0054                                       u409_20 001D  
                                     u417_21 0053                                       u409_21 001C  
                                     u362_20 1DDF                                       u370_20 06F2  
                                     u418_20 0058                                       u362_21 1DDE  
                                     u370_21 06F1                                       u418_21 0057  
                                     u363_20 1DEE                                       u371_20 0701  
                                     u363_21 1DED                                       u371_21 0700  
                                     u380_20 07B2                                       u372_20 0717  
                                     u364_20 1419                                       u380_21 07B1  
                                     u372_21 0716                                       u364_21 1418  
                                     u373_20 0722                                       u365_20 142D  
                                     u373_21 0721                                       u365_21 142C  
                                     u374_20 073C                                       u366_20 1445  
                                     u374_21 073B                                       u366_21 1444  
                                     u375_20 0758                                       u367_20 06BE  
                                     u375_21 0757                                       u367_21 06BD  
                                     u376_20 0760                                       u368_20 06D5  
                                     u376_21 075F                                       u368_21 06D4  
                                     u377_20 0770                                       u369_20 06E9  
                                     u377_21 076F                                       u369_21 06E8  
                                     u378_20 0776                                       u378_21 0775  
                                     u379_20 078F                                       u379_21 078E  
                                     _OSCFRQ 0893                                       _TX1REG 011A  
                                     u263lld 0FDC                                       u255lld 0E4B  
                                     u257lld 0E96                                       u273lld 0C29  
                                     u265lld 0AD4                                       _TX1STA 011E  
                                     u267lld 0B1F                                       u295lld 0CA5  
                   __end_of_SYSTICK_TimerRun 1D74                   __size_of_SPI1_Exchange8bit 000D  
                                     ___bmul 1E10                                       _Summer 1C6E  
                                     ___wmul 1FD4                               _p_i2c2_current 0046  
                    RTC_IsTempConvDone@F8248 005E                                       _printf 1F0F  
                     __size_of_OLED_CursorOn 0022                                       _strlen 1DBD  
                             _PMD_Initialize 1BE2                        __end_of_TMR0_CallBack 1C8F  
                           __end_of_vfprintf 1212                              _eusart1RxBuffer 00CA  
                            _eusart1TxBuffer 0028                             _printfEnableOLED 0065  
                          _SYSTEM_Initialize 1DA4                             _printfEnableUART 0043  
                    __end_of__initialization 0099                          _STATEMACHINE_Update 1C06  
             __size_of_EUSART1_RxDataHandler 0012                __end_of_EUSART1_RxDataHandler 1CB2  
                             __pcstackCOMMON 0000                                 __pidataBANK0 1BF3  
                              __end_of_fputc 14E2                                __end_of_fputs 1FD4  
                       RTC_ConvertTemp@F8244 0060                               _i2c2_trb_count 0048  
                         _BitReverseTable256 1000                                __end_of_putch 1DA4  
                     __end_of_PMD_Initialize 1BEA                  __end_of_EUSART1_Receive_ISR 1454  
                   _I2C2_MasterWriteTRBBuild 1EC9                         __size_of_OLED_GotoXY 002D  
                           _PBA_ConfigPrintf 1BEA                    __end_of_SYSTEM_Initialize 1DBD  
                              _eusart1RxHead 0072                                _eusart1TxHead 0073  
                              _eusart1RxTail 004C                                   __pbssBANK0 0020  
                                 __pbssBANK1 00A0                                   __pbssBANK2 0120  
                              _eusart1TxTail 004D            _EUSART1_TxDefaultInterruptHandler 00DA  
                              _OLED_CursorOn 1EA7                      __size_of_ReceiveHandler 000E  
            __end_of_EUSART1_SetErrorHandler 1BB7                                   __pmaintext 00A0  
           __end_of_TMR0_SetInterruptHandler 1BDA                                   __pintentry 0004  
                       _I2C2_BusCollisionISR 0800                           __end_of_OLED_Clear 1C6E  
                    __size_of_ADC_Initialize 0008       __end_of_EUSART1_SetFramingErrorHandler 1BBE  
    __size_of_EUSART1_SetFramingErrorHandler 0007               _EUSART1_SetFramingErrorHandler 1BB7  
                                    _SP1BRGH 011C                                      _SP1BRGL 011B  
          I2C2_ISR@i2c_10bit_address_restart 0044                                      _OSCCON1 088D  
                                    _OSCCON3 088F                           __size_of_vfpfcnvrt 0206  
                                  _I2C2_Stop 1E66                                      _OSCSTAT 0890  
                                    _OSCTUNE 0892                                      _SSP1ADD 018D  
                                    _SSP2ADD 0197                                      _SLRCONA 1F3B  
                                    _SLRCONB 1F46                                      _SLRCONC 1F51  
                                    _SLRCOND 1F5C                                      _SLRCONE 1F67  
                                    _SLRCONF 1E53                           _RTC_IsTempConvDone 16C3  
                                    _SSP1BUF 018C                                      _SSP2BUF 0196  
                            _I2C2_MasterRead 1F58                              _I2C2_Initialize 1CDA  
                                    _BitTest 1D46                       I2C2_MasterRead@trBlock 004E  
             __end_of_STATEMACHINE_StateExit 1C5F                              __size_of___bmul 001C  
                                    ___aodiv 0E11                              __size_of_Summer 0010  
                                    ___aomod 0A9A                                      ___lbdiv 131B  
                                    ___lbmod 1154                              __size_of___wmul 002C  
                                    ___lwdiv 0803                                      ___lwmod 1454  
                   __size_of_RTC_ConvertTemp 0030                                      __ptext1 1F0F  
                                    __ptext2 11E2                                      __ptext3 04B1  
                                    __ptext4 0C4D                                      __ptext5 1665  
                                    __ptext6 1DBD                                      __ptext7 1FA9  
                                    __ptext8 1E86                                      __ptext9 0A9A  
                            __size_of_printf 0023                              __size_of_strlen 001B  
                      _OSCILLATOR_Initialize 1BFC                                 __size_of_abs 0021  
                               __size_of_pad 005E                                      _isdigit 1D30  
                                    _p_state 003D                           _EUSART1_Initialize 1392  
                                    _isspace 1EEC                        _I2C2_FunctionComplete 1C1B  
                 __size_of_SYSTEM_Initialize 0019                                      clrloop0 1B9E  
                       end_of_initialization 0099            __end_of_SYSTICK_AddTimeoutHandler 1CA0  
                                    init_ram 1BA3                      __size_of_OLED_SelectROM 0040  
                _EUSART1_OverrunErrorHandler 00D4                                      initloop 1BA4  
                       __size_of_BcdToBinary 0015                                    _OLED_Init 12AB  
                                  _OLED_Putc 099E                         __size_of_RTC_GetTemp 004C  
      __end_of_EUSART1_SetRxInterruptHandler 1BCC       __size_of_EUSART1_SetRxInterruptHandler 0007  
              _EUSART1_SetRxInterruptHandler 1BC5                            __end_of_vfpfcnvrt 06B7  
                         _p_i2c2_trb_current 0047                       I2C2_ISR@i2c_bytes_left 0045  
              __size_of_I2C2_MasterTRBInsert 0049                     _TMR0_SetInterruptHandler 1BD3  
                          __size_of_I2C2_ISR 0141                      __end_of_I2C2_MasterRead 1F7E  
                    __end_of_I2C2_Initialize 1CEF             __size_of_EUSART1_SetErrorHandler 0007  
                             _ReceiveHandler 1C42                              _SPI1_Initialize 07F8  
       __size_of_EUSART1_DefaultErrorHandler 0004                            __size_of_PBA_Init 0016  
                   __end_of_PBA_ConfigPrintf 1BF3                               __end_of___bmul 1E2C  
                             __end_of_Summer 1C7E                               __end_of___wmul 2000  
                          __size_of_TMR0_ISR 0006                               _ADC_Initialize 1BDA  
                  __size_of_I2C2_MasterWrite 0026                               __end_of_printf 1F32  
                          __size_of_RTC_Init 0030                                    ___BTEMP12 006E  
                                  ___BTEMP13 00EA                                    ___BTEMP14 00E9  
                                  ___BTEMP15 00E8                                    ___BTEMP16 00E7  
                                  ___BTEMP40 00DF                                    ___BTEMP17 00E6  
                                  ___BTEMP41 00DE                                    ___BTEMP18 00E5  
                                  ___BTEMP42 00DD                                    ___BTEMP19 00E4  
                                  ___BTEMP43 00DC                                    ___BTEMP36 00E3  
                                  ___BTEMP37 00E2                                    ___BTEMP38 00E1  
                                  ___BTEMP39 00E0                               __end_of_strlen 1DD8  
                        start_initialization 0071                     __size_of_SYSTICK_Handler 008A  
                   __size_of_TMR0_Initialize 0014              __size_of_PIN_MANAGER_Initialize 0061  
                                __end_of_abs 1EA7                                  __end_of_pad 16C3  
                      __end_of_EUSART1_Write 1127                       __end_of_ReceiveHandler 1C50  
                   __size_of_SYSTICK_Timeout 003C                         __size_of_BinaryToBcd 0018  
                       I2C2_ISR@pi2c_buf_ptr 003F                        _EUSART1_RxDataHandler 1CA0  
                     __size_of_TMR0_CallBack 0011                       __end_of_ADC_Initialize 1BE2  
                                __pdataBANK0 005E                               _eusart1RxCount 004B  
                                __pbssCOMMON 0070            _EUSART1_RxDefaultInterruptHandler 00D8  
                                  ___latbits 0002                __size_of_EUSART1_Transmit_ISR 001C  
                              __pcstackBANK0 0067                      __end_of_SPI1_Initialize 0800  
                              _i2c2_tr_queue 0058                               _OLED_SelectROM 13CF  
               __size_of_EUSART1_Receive_ISR 0045                                 _currentState 0041  
                      _TMR0_InterruptHandler 006C                                    __pnvBANK0 006C  
                                  __pnvBANK1 00D2                       _PIN_MANAGER_Initialize 1723  
                    __size_of_RTC_GetMinutes 004F                      __size_of_RTC_GetSeconds 004F  
                __end_of_STATEMACHINE_Update 1C10                                     _I2C2_ISR 06B7  
               ??_INTERRUPT_InterruptManager 0067                            __size_of_vfprintf 0030  
                                   _BAUD1CON 011F   __end_of_EUSART1_DefaultOverrunErrorHandler 1B97  
__size_of_EUSART1_DefaultOverrunErrorHandler 0004           _EUSART1_DefaultOverrunErrorHandler 1B93  
                       _EUSART1_ErrorHandler 00D2                      _EUSART1_SetErrorHandler 1BB0  
                              _TMR0_CallBack 1C7E                               __size_of_fputc 0048  
                             __size_of_fputs 002B                       __end_of_OLED_SelectROM 140F  
                             __size_of_putch 0018                          __end_of_OLED_GotoXY 1154  
            __end_of_I2C2_MasterReadTRBBuild 1FA9                                     _LATAbits 0018  
                                   _LATBbits 0019                                     _LATDbits 001B  
                                   _LATEbits 001C                                    clear_ram0 1B9D  
                                   _PBA_Init 1D04                                     _PIE0bits 0716  
                                   _PIE3bits 0719          __size_of_INTERRUPT_InterruptManager 006B  
                       __end_of_RTC_GetHours 1665                                     _PIR0bits 070C  
                                   _PIR3bits 070F                                     _RX1DTPPS 1ECB  
                                   _SSP1CON1 0190                                     _SSP2CON1 019A  
                                   _SSP2CON3 019C                                     _TMR0_ISR 1B97  
                  _SYSTICK_AddTimeoutHandler 1C8F                                     _SSP1STAT 018F  
                                   _SSP2STAT 0199                                    _softTimer 00A0  
                                  _vfpfcnvrt 04B1                                     _RTC_Init 1182  
                                 _ADCON0bits 009D                  __size_of_RTC_IsTempConvDone 0060  
                           _I2C2_MasterWrite 1F32                    __size_of_SYSTICK_TimerRun 0017  
                       __end_of_RTC_SetHours 12AB                      __size_of_RTC_SetMinutes 0032  
                    __size_of_RTC_SetSeconds 0032                 __end_of_I2C2_MasterTRBInsert 152B  
            __end_of_SYSTICK_TimerLoadAndRun 1CDA              __end_of_STATEMACHINE_StateEntry 1C1B  
                           __size_of_BitTest 0017        __end_of_EUSART1_SetTxInterruptHandler 1BD3  
     __size_of_EUSART1_SetTxInterruptHandler 0007                _EUSART1_SetTxInterruptHandler 1BCC  
                          _ADC_GetConversion 1E2C                              _RTC_ConvertTemp 11B2  
                           __size_of___aodiv 01EF                             __size_of___aomod 01B3  
                           __size_of___lbdiv 003B                             __size_of___lbmod 002E  
                          _STATEMACHINE_Init 1C35                  __size_of_EUSART1_Initialize 003D  
                           __size_of___lwdiv 0054                             __size_of___lwmod 0046  
                                   ___int_sp 2258          __end_of_EUSART1_DefaultErrorHandler 1B93  
                _EUSART1_DefaultErrorHandler 1B8F                                  _OLED_GotoXY 1127  
                           __size_of_isdigit 0016                             __size_of_isspace 0023  
                                   __ptext10 0E11                                     __ptext11 1784  
                                   __ptext20 1D30                                     __ptext12 149A  
                                   __ptext21 1FD4                                     __ptext13 1D8C  
                                   __ptext30 1C06                                     __ptext22 1454  
                                   __ptext14 099E                                     __ptext31 1C50  
                                   __ptext23 0803                                     __ptext15 1127  
                                   __ptext40 16C3                                     __ptext32 1C10  
                                   __ptext24 1CC6                                     __ptext16 1C5F  
                                   __ptext41 152B                                     __ptext33 1C35  
                                   __ptext25 1D5D                                     __ptext17 1101  
                                   __ptext50 1D04                                     __ptext42 15C6  
                                   __ptext34 1244                                     __ptext26 1E49  
                                   __ptext18 08E1                                     __ptext51 1DA4  
                                   __ptext43 1577                                     __ptext35 1212  
                                   __ptext27 1356                                     __ptext19 1EEC  
                                   __ptext60 1BCC                                     __ptext52 1CB2  
                                   __ptext44 1615                                     __ptext36 1276  
                                   __ptext28 1D1A                                     __ptext61 1BC5  
                                   __ptext53 1BD3                                     __ptext45 1F58  
                                   __ptext37 1D74                                     __ptext29 1C8F  
                                   __ptext70 1BA9                                     __ptext62 1BBE  
                                   __ptext54 07F8                                     __ptext46 1F7E  
                                   __ptext38 1154                                     __ptext71 12AB  
                                   __ptext63 1BB7                                     __ptext55 1BE2  
                                   __ptext47 1CEF                                     __ptext39 131B  
                                   __ptext72 1BEA                                     __ptext64 1BB0  
                                   __ptext56 1723                                     __ptext48 1E10  
                                   __ptext81 1B97                                     __ptext73 13CF  
                                   __ptext65 1BDA                                     __ptext57 1BFC  
                                   __ptext49 11B2                                     __ptext90 1C1B  
                                   __ptext82 1C7E                                     __ptext74 1EA7  
                                   __ptext66 1182                                     __ptext58 1CDA  
                                   __ptext91 0800                                     __ptext83 0857  
                                   __ptext75 1DF4                                     __ptext67 1F32  
                                   __ptext59 1392                                     __ptext92 1DD8  
                                   __ptext84 0003                                     __ptext76 1C28  
                                   __ptext68 1EC9                                     __ptext93 1B93  
                                   __ptext85 1C6E                                     __ptext77 12E2  
                                   __ptext69 14E2                                     __ptext94 0002  
                                   __ptext86 140F                                     __ptext78 1D46  
                                   __ptext95 1B8F                                     __ptext87 1C42  
                                   __ptext79 1E2C                                     __ptext96 1CA0  
                                   __ptext88 06B7                                     __ptext89 1E66  
                               _SSP1CON1bits 0190                                 _SSP2CON1bits 019A  
                               _SSP2CON2bits 019B                        __end_of_OLED_CursorOn 1EC9  
                              __size_of_Send 001C                                __size_of_atoi 00BD  
                              __size_of_ctoa 007C                                __size_of_main 0411  
                              __size_of_dtoa 01C4         __end_of_TMR0_DefaultInterruptHandler 0004  
      __size_of_TMR0_DefaultInterruptHandler 0001                 _TMR0_DefaultInterruptHandler 0003  
                  __end_of_ADC_GetConversion 1E49                          __end_of_BcdToBinary 1D04  
                                 _RC1STAbits 011D                          __end_of_RTC_GetTemp 1577  
                             _RTC_GetMinutes 1577                               _RTC_GetSeconds 15C6  
                  __end_of_STATEMACHINE_Init 1C42                      __size_of_BTN_GetPosEdge 0039  
                                   _vfprintf 11E2           __end_of_INTERRUPT_InterruptManager 006F  
                 _INTERRUPT_InterruptManager 0004                      I2C2_MasterWrite@trBlock 0053  
                               _SSP1STATbits 018F                __size_of_I2C2_BusCollisionISR 0003  
                _EUSART1_FramingErrorHandler 00D6                          _EUSART1_Receive_ISR 140F  
           __size_of_I2C2_MasterReadTRBBuild 002B                                   _INTCONbits 000B  
                             __pstringtext10 1974                               __pstringtext11 199A  
                             __pstringtext12 19BF                               __pstringtext13 19DE  
                             __pstringtext14 19F6                               __pstringtext15 1A08  
                             __pstringtext16 1A19                               __pstringtext17 1A28  
                             __pstringtext18 0000                            _SYSTICK_TimerLoad 1E49  
          __size_of_I2C2_MasterWriteTRBBuild 0023                            _SYSTICK_TimerStop 1D1A  
                                   intlevel1 0000                                   _OLED_Clear 1C5F  
                      __size_of_RTC_GetHours 0050                          I2C2_ISR@i2c_address 005C  
     __end_of_EUSART1_SetOverrunErrorHandler 1BC5      __size_of_EUSART1_SetOverrunErrorHandler 0007  
             _EUSART1_SetOverrunErrorHandler 1BBE                      __end_of_RTC_ConvertTemp 11E2  
                     __end_of_RTC_GetMinutes 15C6                       __end_of_RTC_GetSeconds 1615  
               __end_of_EUSART1_Transmit_ISR 1DF4                                _previousState 0064  
                      __size_of_RTC_SetHours 0035                         _I2C2_MasterTRBInsert 14E2  
                     __size_of_EUSART1_Write 0026                           _eusart1RxLastError 004A  
           __size_of_SYSTICK_TimerLoadAndRun 0014                                __pstringtext1 1000  
                              __pstringtext2 1800                                __pstringtext3 1832  
                              __pstringtext4 1863                                __pstringtext5 1892  
                              __pstringtext6 18C1                                __pstringtext7 18F0  
                              __pstringtext8 191F                                __pstringtext9 194D  
                           _SYSTICK_TimerRun 1D5D             __size_of_STATEMACHINE_StateEntry 000B  
                                 _SSP1DATPPS 1EC6                                   _SSP2DATPPS 1EC9  
                                 _SSP1CLKPPS 1EC5                                   _SSP2CLKPPS 1EC8  
                            _SYSTICK_Handler 0857                              _TMR0_Initialize 1CB2  
         __size_of_SYSTICK_AddTimeoutHandler 0011                                 _RTC_GetHours 1615  
                  __end_of_SYSTICK_TimerLoad 1E66                    __end_of_SYSTICK_TimerStop 1D30  
                             _RTC_SetMinutes 1212                               _RTC_SetSeconds 1244  
                            _SYSTICK_Timeout 1356              __size_of_STATEMACHINE_StateExit 000F  
             __end_of_PIN_MANAGER_Initialize 1784                                  _BcdToBinary 1CEF  
                   __size_of_I2C2_MasterRead 0026                     __size_of_I2C2_Initialize 0015  
                                _RTC_GetTemp 152B                           __size_of_I2C2_Stop 0020  
                 __end_of_BitReverseTable256 1100                     __end_of_I2C2_MasterWrite 1F58  
                               _RTC_SetHours 1276                   __size_of_ADC_GetConversion 001D  
